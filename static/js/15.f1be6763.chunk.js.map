{"version":3,"sources":["pages/Laporan/LaporanPembelian/PembelianSales/exel/ExportExelPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/pdf/ExportLaporanPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/HeadFormLaporanPembelianSales.jsx","Validasi/Penjualan/ValidasiLaporanPenjualanSales.jsx"],"names":["ExportExelPembelianSales","Component","constructor","props","super","this","state","render","total_berat","total_barang","harga","jumlah","data","forEach","item","index","parseFloat","berat","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","textAlign","map","row","_id","kode_sales","formatGram","toLocaleString","ExportLaporanPembelianSales","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","finalY","setFontSize","text","jml_alamat","slice","concat","setProperties","title","sub_jumlah","sub_harga","sub_berat","rows","content","styles","halign","parseInt","push","footer","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanPembelianSales","date","Date","setStartDate","bind","setLastDate","componentDidMount","dispatch","getDataSales","setState","exportPdf","LaporanTransaksiPembelian","databarang","element","columns","dataField","headerClasses","cell","num","formatter","sales","value","name","datasales","nama_sales","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Field","component","InputDate","label","type","selected","onChange","placeholder","options","ReanderSelect","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_ExportExelPembelianSales","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiLaporanPenjualanSales","connect","datamaster","initialValues","getTglSystem","errors","tanggal_awal","sampai_tgl"],"mappings":"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","file":"static/js/15.f1be6763.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { formatGram, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\nclass ExportExelPembelianSales extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let total_berat = 0;\n    let total_barang = 0;\n    let harga = 0;\n    let jumlah = 0;\n    this.props.data.forEach((item, index) => {\n      // barang.detail.forEach((item, index) => {\n      total_berat = total_berat + parseFloat(item.berat);\n      total_berat = total_berat + parseFloat(item.berat);\n      harga = harga + item.harga;\n      jumlah = jumlah + item.jumlah;\n      total_barang = total_barang + item.length;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Pembelian Pramuniaga\"\n          sheet=\"Laporan Pembelian Pramuniaga\"\n          buttonText=\"Export Exel\"\n        />\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\n          <thead>\n            <tr>\n              <th colSpan=\"4\"> Laporan Pembelian Sales </th>\n            </tr>\n            <tr>\n              <th colSpan=\"4\">\n                {\" \"}\n                Periode{\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"4\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"4\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                SALES\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"center\",\n                }}\n              >\n                BERAT\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                TOTAL QTY\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                TOTAL PEMBELIAN RP\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((row, index) => (\n              <>\n                {/* {item.detail.map((row, index) => ( */}\n                <tr>\n                  <td>{row._id.kode_sales}</td>\n                  <td\n                    style={{\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {formatGram(row.berat,3)}\n                  </td>\n                  <td style={{textAlign: \"right\"}}>{row.jumlah}</td>\n                  <td style={{textAlign: \"right\"}}>{row.harga.toLocaleString(\"kr-KO\")}</td>\n                </tr>\n                {/* ))} */}\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                // colSpan=\"6\"\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n\n                  textAlign: \"center\",\n                }}\n              ></td>\n\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                {formatGram(total_berat,3)}\n              </td>\n\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                {jumlah}\n              </td>\n\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                {harga.toLocaleString(\"kr-KO\")}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default ExportExelPembelianSales;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {\n  formatGram,\n  getToday,\n  getUserdata,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst ExportLaporanPembelianSales = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"L\", \"mm\");\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let finalY = 30;\n  // let total_baraang = 0;\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN PEMBELIAN SALES\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n\n  doc.setProperties({\n    title: \"LAPORAN PEMBELIAN PRAMUNIAGA\",\n  });\n  //row 1\n  \n  let tableColumn = [\n    [\n      {\n        content: `SALES`,\n      },\n      {\n        content: `BERAT`,\n        styles: {\n          halign: \"right\",\n        },\n      },\n      {\n        content: `TOTAL QTY`,\n        styles: {\n          halign: \"right\",\n        },\n      },\n      {\n        content: `TOTAL PEMBELIAN RP`,\n        styles: {\n          halign: \"right\",\n        },\n      },\n      // {\n      //   content: `NO FAKTUR`,\n      // },\n      // {\n      //   content: `NAMA CUSTOMER`,\n      // },\n      // {\n      //   content: `NO HP`,\n      // },\n      // {\n      //   content: `ALAMAT CUSTOMER`,\n      // },\n      // {\n      //   content: `KODE GUDANG`,\n      // },\n      // {\n      //   content: `KODE DEPT`,\n      // },\n      // {\n      //   content: `BERAT NOTA`,\n      // },\n      // {\n      //   content: `BERAT`,\n      // },\n      // {\n      //   content: `HARGA NOTA`,\n      // },\n      // {\n      //   content: `HARGA`,\n      // },\n      // {\n      //   content: `HARGA RATA`,\n      // },\n      // {\n      //   content: `KONDISI`,\n      // },\n    ],\n  ];\n  let sub_jumlah = 0;\n  let sub_harga = 0;\n  let sub_berat = 0;\n  data.forEach((item, index) => {\n    // let head = [\n    //   {\n    //     content: `KODE SALES : ${item._id.kode_sales}`,\n    //     colSpan: 12,\n    //   },\n    // ];\n    // tableRows.push(head);\n\n    let rows = [\n      item._id.kode_sales,\n      // item.no_faktur_beli,\n      // item.nama_customer,\n      // item.no_hp,\n      // item.alamat_customer,\n      // item.kode_gudang,\n      // item.kode_dept,\n      // item.jumlah,\n      // parseInt(item.harga).toLocaleString(\"kr-KO\"),\n      {\n        content: formatGram(item.berat, 3),\n        styles: {\n          halign: \"right\",\n        },\n      },\n      {\n        content: parseInt(item.jumlah),\n        styles: {\n          halign: \"right\",\n        },\n      },\n      {\n        content: parseInt(item.harga).toLocaleString(\"kr-KO\"),\n        styles: {\n          halign: \"right\",\n        },\n      },\n      // item.berat.toFixed(1),\n      // parseInt(item.harga_nota).toLocaleString(\"kr-KO\"),\n      // parseInt(item.harga_rata).toLocaleString(\"kr-KO\"),\n      // item.kondisi,\n    ];\n\n    sub_jumlah = sub_jumlah + parseFloat(item.jumlah);\n    sub_harga = sub_harga + parseFloat(item.harga);\n    sub_berat = sub_berat + parseFloat(item.berat);\n    tableRows.push(rows);\n\n    // total_baraang = total_baraang+item.detail.length;\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\n    // console.log();\n  });\n  let footer = [\n    {\n      content: ``,\n      // colSpan: ,\n      styles: {\n        halign: \"center\",\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${sub_berat.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: \"right\",\n      },\n    },\n\n    {\n      content: sub_jumlah.toLocaleString(\"kr-KO\"),\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: \"right\",\n      },\n    },\n    {\n      content: sub_harga.toLocaleString(\"kr-KO\"),\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: \"right\",\n      },\n    },\n  ];\n  tableRows.push(footer);\n  let printed = [\n    {\n      colSpan: 9,\n      content: `Printed By ${\n        JSON.parse(localStoragedecryp(\"userdata\")).user_id\n      } / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ];\n  tableRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  footRows = [];\n  // sub_harga = 0;\n  // sub_harga_rata = 0;\n  // sub_harga_nota = 0;\n  // sub_berat = 0;\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n\n  // doc.text(\n  //   `User                        : ${\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\n  //   }`,\n  //   14,\n  //   finalY + 10\n  // );\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN PEMBELIAN PRAMUNIAGA.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN PEMBELIAN PRAMUNIAGA</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default ExportLaporanPembelianSales;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { getDataSales } from \"../../../../actions/datamaster_action\";\nimport {\n  InputDate, ReanderSelect,\n  // ReanderSelect,\n} from \"../../../../components/helpers/field\";\nimport { formatGram, getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\nimport ExportExelPembelianSales from \"./exel/ExportExelPembelianSales\";\nimport ExportLaporanPembelianSales from \"./pdf/ExportLaporanPembelianSales\"\nimport Loading from 'react-fullscreen-loading';\n// const maptostate = (state) => {\n//   return {\n//     datasales: state.datamaster.getDataSales,\n//   };\n// };\nclass HeadFormLaporanPembelianSales extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getDataSales())\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n  exportPdf() {\n    ExportLaporanPembelianSales(this.props.LaporanTransaksiPembelian);\n  }\n  render() {\n    let databarang = [];\n    let berat = 0;\n    let harga = 0;\n    let jumlah = 0;\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\n      // element.detail.forEach((detail) => {\n      let row = {\n        kode_sales: element._id.kode_sales,\n        berat: element.berat,\n        harga: element.harga,\n        jumlah: element.jumlah\n        }\n        databarang.push(row);\n        berat = berat + element.berat;\n        harga = harga + element.harga;\n        jumlah = jumlah + element.jumlah;\n       \n      // });\n    });\n    const columns = [\n      \n      // {\n      //   dataField: \"no_faktur_beli\",\n      //   text: \"No FB\",\n      //   footerAttrs: {\n      //     colSpan: \"4\",\n      //   },\n      //   footer: (cell, row, num, index) => {\n      //     return <div>Total Barang : {databarang.length} </div>;\n      //   },\n      // },\n      \n      {\n        dataField: \"kode_sales\",\n        text: \"Kode Sales\",\n        footer: \"\",\n        // footerAttrs: {\n        //   colSpan: \"3\",\n        // },\n        // footer: (cell, row, num, index) => {\n        //   return <div>Total Barang : {databarang.length} </div>;\n        // },\n      },\n     \n      {\n        dataField: \"berat\",\n        text: \"Berat\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{formatGram(berat,3)} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\"> {formatGram(cell,3)} </div>;\n        },\n      },\n     \n      {\n        dataField: \"jumlah\",\n        text: \"Total Qty\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{jumlah.toLocaleString(\"kr-KO\")} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\n        },\n      },\n      {\n        dataField: \"harga\",\n        text: \"Total Pembelian Rp\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{harga.toLocaleString(\"kr-KO\")} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\n        },\n      },\n     \n    ];\n    let sales = [\n      {\n        value: \"ALL\",\n        name : \"SEMUA\"\n      }\n    ]\n    this.props.datasales.map((row) => {\n      let data = {\n        value: row.kode_sales,\n        name: row.kode_sales + \" - \" + row.nama_sales,\n      };\n      sales.push(data);\n      return true\n    })\n    return (\n      <form onSubmit={this.props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\n        <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <Field\n            name=\"tgl_awal\"\n            component={InputDate}\n            label=\"Tanggal Dari\"\n            type=\"text\"\n            selected={this.state.tgl_awal}\n            onChange={(date) => this.setStartDate(date)}\n            placeholder=\"Masukan Tanggal Dari\"\n          />\n        </div>\n\n        <div className=\"col-lg-3\">\n          <Field\n            name=\"tgl_akhir\"\n            component={InputDate}\n            type=\"text\"\n            selected={this.state.tgl_akhir}\n            onChange={(date) => this.setLastDate(date)}\n            label=\"Tanggal Akhir\"\n            placeholder=\"Masukan Tanggal Akhir\"\n          />\n        </div>\n          <div className=\"col-lg-3\">\n            <Field\n              label=\"Kode Sales\"\n              name=\"kode_sales\"\n              options={sales}\n              placeholder={\"Silahkan Pilih Nama Sales\"}\n              component={ReanderSelect}\n            />\n          </div>\n\n          <div className=\"col-lg-3\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"kode_barcode\"\n              data={this.props.export ? databarang : []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <button\n                onClick={() => this.exportPdf()}\n                className=\"btn btn-warning btn-block\"\n              >\n                {\" \"}\n                Export PDF{\" \"}\n              </button>\n            </div>\n            <div className=\"col-lg-6\">\n              <ExportExelPembelianSales data={this.props.LaporanTransaksiPembelian} />\n            </div>\n          </div>\n        </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadFormLaporanPembelianSales = reduxForm({\n  form: \"HeadFormLaporanPembelianSales\",\n  enableReinitialize: true,\n  validate: ValidasiLaporanPenjualanSales,\n})(HeadFormLaporanPembelianSales);\n// export default connect(maptostate, null)(HeadFormLaporanPembelianSales);\nexport default connect((state) => {\n  return {\n    datasales: state.datamaster.getDataSales,\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadFormLaporanPembelianSales);\n","const ValidasiLaporanPenjualanSales = (value) => {\n    const errors = {};\n    if (!value.tanggal_awal) {\n        errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\n    }\n    if (!value.sampai_tgl) {\n        errors.sampai_tgl = \"Tanggal Tidak Boleh Kosong\";\n    }\n    if (!value.kode_sales) {\n        errors.kode_sales = \"Kode Tidak Boleh Kosong\";\n    }\n\n    return errors;\n}\n\nexport default ValidasiLaporanPenjualanSales;\n\n\n"],"sourceRoot":""}