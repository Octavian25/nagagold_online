{"version":3,"sources":["Validasi/ValidasiMasterTukang.jsx","pages/DataMaster/DataTukang/FormModalTukang.jsx","pages/DataMaster/DataTukang/MasterTukang.jsx"],"names":["ValidasiMasterTukang","value","event","errors","kode_tukang","nama_tukang","FormModalTukang","Component","[object Object]","args","super","this","state","aktif","componentDidMount","setTimeout","props","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","tabIndex","id","name","component","ReanderField","type","label","placeholder","readOnly","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Fragment","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalTukang","initialValues","kode_sales","hapusDataTukang","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataTukang","DataTukang","modalDialog","React","constructor","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditTukang","bind","data_edit","data_post","putData","ToastNotification","reset","catch","error","ErrorHandling","postData","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","title","content","DataTukang_FormModalTukang"],"mappings":"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","file":"static/js/36.50f88792.chunk.js","sourcesContent":["const ValidasiMasterTukang = (value, event) => {\n  const errors = {};\n  // console.log(event.charCode==13);\n  if (!value.kode_tukang) {\n    errors.kode_tukang = \"Kode Tukang Tidak Boleh Kosong\";\n  }\n  if (!value.nama_tukang) {\n    errors.nama_tukang = \"Nama Tukang Tidak Boleh Kosong\";\n  }\n  return errors;\n};\n\nexport default ValidasiMasterTukang;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterTukang from \"../../../Validasi/ValidasiMasterTukang.jsx\";\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalTukang !== null) {\n    return {\n      initialValues: {\n        kode_tukang: state.datamaster.ShowModalTukang.kode_sales,\n        nama_tukang: state.datamaster.ShowModalTukang.nama_tukang,\n      },\n    };\n  }\n};\nclass FormModalTukang extends Component {\n  state = {\n    aktif: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.isEdit\n        ? document.getElementById(\"nama_tukang\").focus()\n        : document.getElementById(\"kode_tukang\").focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        autoComplete=\"off\"\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n      >\n        <Field\n          tabIndex=\"1\"\n          id=\"kode_tukang\"\n          name=\"kode_tukang\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Tukang\"\n          placeholder=\"Masukan Kode Tukang\"\n          readOnly={this.props.isEdit}\n        />\n        <Field\n          tabIndex=\"2\"\n          id=\"nama_tukang\"\n          name=\"nama_tukang\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Nama Tukang\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Nama Tukang\"\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"3\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nFormModalTukang = reduxForm({\n  form: \"ModalTukang\",\n  enableReinitialize: true,\n  validate: ValidasiMasterTukang,\n})(FormModalTukang);\nexport default connect(maptostate, null)(FormModalTukang);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\n\nimport {\n  ShowModalTukang,\n  showModal,\n  getDataTukang,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport FormModalTukang from \"./FormModalTukang.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    DataTukang: state.datamaster.getDataTukang,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\nconst hapusDataTukang = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Tukang \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"tukang/delete/by-kode-tukang/\" + params, {\n        data: {\n          kode_tukang: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getDataTukang())\n        );\n      });\n    }\n  });\n};\nclass MasterTukang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      isLoading: false,\n      modalDialog: false,\n      columns: [\n        {\n          dataField: \"kode_tukang\",\n          text: \"Kode Tukang\",\n          sort: true,\n        },\n        {\n          dataField: \"nama_tukang\",\n          text: \"Nama Tukang\",\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_sales: row.kode_tukang,\n              nama_tukang: row.nama_tukang,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditTukang(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataTukang(row.kode_tukang, this.props.dispatch)\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n      // dataTukang: [\n      //   {\n      //     kode_tukang: \"SAM\",\n      //     nama_tukang: \"Samsul Arifin\",\n      //   },\n      // ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getDataTukang());\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    let data_edit = {\n      nama_tukang: data.nama_tukang,\n    };\n    let data_post = {\n      kode_tukang: data.kode_tukang,\n      nama_tukang: data.nama_tukang,\n    };\n    this.state.isEdit\n      ? putData(\"tukang/edit/by-kode-tukang/\" + data.kode_tukang, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataTukang());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalTukang\"));\n          })\n          .catch((error) => this.ErrorHandling(error))\n      : postData(\"tukang/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Simpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataTukang());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalTukang\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"tukang/reactive/by-kode-tukang/\",\n              data.kode_tukang,\n              data_post,\n              this.props.dispatch,\n              getDataTukang(),\n              hideModal(),\n              \"ModalTukang\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n  formEditTukang(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalTukang(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalTukang() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalTukang(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Tukang</li>\n        </ol>\n        <h1 className=\"page-header\">Master Tukang </h1>\n        <Panel>\n          <PanelHeader>Master Tukang</PanelHeader>\n          <br />\n\n          {/* Master Tukang */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_tukang\"\n              tambahData={true}\n              handleClick={() => this.ShowModalTukang()}\n              exportCsv={true}\n              data={this.props.DataTukang}\n              columns={this.state.columns}\n              empty={this.props.DataTukang}\n              textEmpty=\"Data Tukang Kosong\"\n            />\n          </div>\n          <br />\n          {/* End Master Tukang */}\n          <ModalGlobal\n            size=\"P\"\n            title={\n              this.state.isEdit ? \"Edit Data Tukang\" : \"Tambah Data Tukang\"\n            }\n            content={\n              <FormModalTukang\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Data Tukang' : 'Tambah Data Tukang' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\n\n          {/* End Tambah Master Tukang  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterTukang);\n"],"sourceRoot":""}