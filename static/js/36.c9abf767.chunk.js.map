{"version":3,"sources":["Validasi/ValidasiMasterSales.jsx","pages/DataMaster/DataSales/FormModalSales.jsx","pages/DataMaster/DataSales/MasterSales.jsx"],"names":["ValidasiMasterSales","value","event","errors","kode_sales","nama_sales","FormModalSales","Component","[object Object]","args","super","this","state","aktif","componentDidMount","setTimeout","props","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Field","tabIndex","id","name","component","ReanderField","type","label","placeholder","readOnly","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Fragment","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalSales","initialValues","hapusDataSales","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataSales","catch","err","ToastNotification","response","DataSales","modalDialog","React","constructor","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditSales","bind","data_edit","data_post","putData","reset","error","ErrorHandling","postData","showModal","showModalSales","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","title","size","content","DataSales_FormModalSales"],"mappings":"qOAYeA,MAZa,CAACC,EAAOC,KAClC,MAAMC,EAAS,GAQf,OANKF,EAAMG,aACTD,EAAOC,WAAa,iCAEjBH,EAAMI,aACTF,EAAOE,WAAa,iCAEfF,oBCST,MAAMG,UAAuBC,YAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KACrCC,MAAQ,CACNC,OAAQ,GAEVC,oBACEC,WAAW,KACTJ,KAAKK,MAAMC,OACTC,SAASC,eAAe,cAAcC,QACtCF,SAASC,eAAe,cAAcC,SACvC,KAELC,SACE,OACEC,EAAAC,EAAAC,cAAA,QACEC,SAAUd,KAAKK,MAAMU,aACrBC,WAAaC,IACD,UAAVA,EAAEC,KAAmBD,EAAEE,kBAEzBC,aAAa,OAEbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,SAAS,IACTC,GAAG,aACHC,KAAK,aACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,aACNC,YAAY,qBACZC,SAAU9B,KAAKK,MAAMC,SAEvBK,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,GAAG,aACHD,SAAS,IACTE,KAAK,aACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,aACNG,OAAQ,IAAM/B,KAAKgC,SAAS,CAAE9B,OAAO,IACrC2B,YAAY,uBAEdlB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,OACbtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,qBACbtB,EAAAC,EAAAC,cAAA,UACEoB,UAAU,gBACVC,QAAS,IAAMlC,KAAKK,MAAM8B,SAASC,gBACnCT,KAAK,SACLU,SAAUrC,KAAKK,MAAMiC,WAJvB,SADF,OAUE3B,EAAAC,EAAAC,cAAA,UACES,SAAS,IACTW,UAAWjC,KAAKC,MAAMC,MAAQ,kBAAoB,gBAClDmC,SAAUrC,KAAKK,MAAMkC,WACrBZ,KAAK,UAEJ3B,KAAKK,MAAMiC,UACV3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACE7B,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,2BADf,0BAKA,iBAKPjC,KAAKK,MAAMiC,UACZ3B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACA8B,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,OAMVjD,EAAiBkD,YAAU,CACzBC,KAAM,iBACNC,oBAAoB,EACpBC,SAAU3D,GAHKwD,CAIdlD,GACYsD,kBA9FKhD,IAClB,GAAwC,OAApCA,EAAMiD,WAAWC,eACnB,MAAO,CACLC,cAAe,CACb3D,WAAYQ,EAAMiD,WAAWC,eAAe1D,WAC5CC,WAAYO,EAAMiD,WAAWC,eAAezD,cAyFjB,KAApBuD,CAA0BtD,WChFzC,MAMM0D,EAAiB,CAACC,EAAQnB,KAC9BoB,IAAKC,KAAK,CAGRC,KACE,uDAGAH,EACA,cACFI,KAAM,UACNC,SAAU,aACVC,iBAAkB,QAClBC,kBAAkB,EAClBC,kBAAmB,KACnBC,mBAAmB,IAClBC,KAAMC,IACHA,EAAOC,aACTC,YAAW,8BAAgCb,EAAQ,CACjDc,KAAM,CACJ3E,WAAY6D,KAEbU,KAAK,KACNK,YAAY,0BAA0BL,KAAK,IACzC7B,EAASmC,mBAEVC,MAAOC,IACRC,YAAkB,QAASD,EAAIE,SAASN,WAgMjCnB,sBAjOKhD,IACX,CACL0E,UAAW1E,EAAMiD,WAAWoB,aAC5BlC,UAAWnC,EAAMiD,WAAW0B,cA8NG,KAApB3B,CA3Lf,cAA0B4B,IAAMjF,UAC9BkF,YAAYzE,GACVN,MAAMM,GACNL,KAAKC,MAAQ,CACXK,QAAQ,EACRsE,aAAa,EACbtC,WAAW,EACXyC,QAAS,CACP,CACEC,UAAW,aACXC,KAAM,aACNC,MAAM,GAER,CACEF,UAAW,aACXC,KAAM,cAER,CACED,UAAW,SACXC,KAAM,SACNE,WAAW,EACXC,cAAe,cACfC,UAAW,CAACC,EAAYC,KACtB,IAAIC,EAAW,CACb/F,WAAY8F,EAAI9F,WAChBC,WAAY6F,EAAI7F,YAGlB,OACEiB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,mBACbtB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,UACbtB,EAAAC,EAAAC,cAAA,UACEqB,QAAS,IAAMlC,KAAKyF,cAAcD,GAClCvD,UAAU,wBAEVtB,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,gBAEftB,EAAAC,EAAAC,cAAA,UACEqB,QAAS,IACPmB,EAAekC,EAAI9F,WAAYO,KAAKK,MAAM8B,UAE5CF,UAAU,kBAEVtB,EAAAC,EAAAC,cAAA,KAAGoB,UAAU,uBAe7BjC,KAAKe,aAAef,KAAKe,aAAa2E,KAAK1F,MAE7CG,oBACEH,KAAKK,MAAM8B,SAASmC,gBAEtBvD,aAAaqD,GACXpE,KAAKgC,SAAS,CACZM,WAAW,IAEb,IAAIqD,EAAY,CACdjG,WAAY0E,EAAK1E,YAEfkG,EAAY,CACdnG,WAAY2E,EAAK3E,WACjBC,WAAY0E,EAAK1E,YAEnBM,KAAKC,MAAMK,OACPuF,YAAQ,4BAA8BzB,EAAK3E,WAAYkG,GACpD3B,KAAK,KACJhE,KAAKK,MAAM8B,SAASC,kBAErB4B,KAAK,KACJS,YAAkB,UAAW,0BAE9BT,KAAK,KACJhE,KAAKK,MAAM8B,SAASmC,kBAErBN,KAAK,KACJhE,KAAKgC,SAAS,CAAEM,WAAW,MAE5B0B,KAAK,KACJhE,KAAKK,MAAM8B,SAAS2D,YAAM,qBAE3BvB,MAAOwB,GAAU/F,KAAKgG,cAAcD,IACvCE,YAAS,YAAaL,GACnB5B,KAAK,KACJhE,KAAKK,MAAM8B,SAASC,kBAErB4B,KAAK,KACJS,YAAkB,UAAW,0BAE9BT,KAAK,KACJhE,KAAKK,MAAM8B,SAASmC,kBAErBN,KAAK,KACJhE,KAAKK,MAAM8B,SAAS2D,YAAM,qBAE3B9B,KAAK,KACJhE,KAAKgC,SAAS,CAAEM,WAAW,MAE5BiC,MAAOwB,GACNC,YACED,EACA,gCACA3B,EAAK3E,WACLmG,EACA5F,KAAKK,MAAM8B,SACXmC,eACAlC,eACA,kBACA4B,KAAK,KACLhE,KAAKgC,SAAS,CAAEM,WAAW,OAIvCmD,cAAcD,GACZxF,KAAKK,MAAM8B,SAAS+D,gBACpBlG,KAAKK,MAAM8B,SAASgB,aAAeqC,IACnCxF,KAAKgC,SAAS,CACZ1B,QAAQ,IAGZ6F,iBACEnG,KAAKK,MAAM8B,SAAS+D,gBACpBlG,KAAKK,MAAM8B,SAASgB,cAAe,IACnCnD,KAAKgC,SAAS,CACZ1B,QAAQ,IAGZI,SACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,6BACZtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,mBACZtB,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAMC,GAAG,KAAT,gBAEF1F,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,0BAAd,iBAEFtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,eAAd,iBACAtB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,qBACA3F,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,aACbtB,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CACEC,SAAS,aACTC,YAAY,EACZC,YAAa,IAAM1G,KAAKmG,iBACxBQ,WAAW,EACXvC,KAAMpE,KAAKK,MAAMsE,UACjBI,QAAS/E,KAAKC,MAAM8E,QACpB6B,MAAO5G,KAAKK,MAAMsE,UAClBkC,UAAU,uBAGdlG,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEC,MAAO/G,KAAKC,MAAMK,OAAS,kBAAoB,oBAC/C0G,KAAK,IACLC,QACEtG,EAAAC,EAAAC,cAACqG,EAAD,CACE5E,UAAWtC,KAAKC,MAAMqC,UACtBhC,OAAQN,KAAKC,MAAMK,OACnBQ,SAAWsD,GAASpE,KAAKe,aAAaqD","file":"static/js/36.c9abf767.chunk.js","sourcesContent":["const ValidasiMasterSales = (value, event) => {\n  const errors = {};\n  // console.log(event.charCode==13);\n  if (!value.kode_sales) {\n    errors.kode_sales = \"Kode Sales Tidak Boleh Kosong\";\n  }\n  if (!value.nama_sales) {\n    errors.nama_sales = \"Nama Sales Tidak Boleh Kosong\";\n  }\n  return errors;\n};\n\nexport default ValidasiMasterSales;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterSales from \"../../../Validasi/ValidasiMasterSales.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalSales !== null) {\n    return {\n      initialValues: {\n        kode_sales: state.datamaster.ShowModalSales.kode_sales,\n        nama_sales: state.datamaster.ShowModalSales.nama_sales,\n      },\n    };\n  }\n};\nclass FormModalSales extends Component {\n  state = {\n    aktif : false\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.isEdit\n      ? document.getElementById(\"nama_sales\").focus()\n      : document.getElementById(\"kode_sales\").focus()\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <Field\n          tabIndex=\"1\"\n          id=\"kode_sales\"\n          name=\"kode_sales\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Sales\"\n          placeholder=\"Masukan Kode Sales\"\n          readOnly={this.props.isEdit}\n        />\n        <Field\n          id=\"nama_sales\"\n          tabIndex=\"2\"\n          name=\"nama_sales\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Nama Sales\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Nama Sales\"\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"3\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormModalSales = reduxForm({\n  form: \"ModalDataSales\",\n  enableReinitialize: true,\n  validate: ValidasiMasterSales,\n})(FormModalSales);\nexport default connect(maptostate, null)(FormModalSales);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\n\nimport {\n  ShowModalSales,\n  showModal,\n  getDataSales,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport FormModalSales from \"./FormModalSales.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nconst maptostate = (state) => {\n  return {\n    DataSales: state.datamaster.getDataSales,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\nconst hapusDataSales = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Sales \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"sales/delete/by-kode-sales/\" + params, {\n        data: {\n          kode_sales: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getDataSales())\n        );\n      }).catch((err) => {\n        ToastNotification(\"error\", err.response.data)\n      })\n    }\n  });\n};\nclass MasterSales extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_sales\",\n          text: \"Kode Sales\",\n          sort: true,\n        },\n        {\n          dataField: \"nama_sales\",\n          text: \"Nama Sales\",\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_sales: row.kode_sales,\n              nama_sales: row.nama_sales,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditSales(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataSales(row.kode_sales, this.props.dispatch)\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n      // dataSales: [\n      //   {\n      //     kode_sales: \"SAM\",\n      //     nama_sales: \"Samsul Arifin\",\n      //   },\n      // ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataSales());\n  }\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    let data_edit = {\n      nama_sales: data.nama_sales,\n    };\n    let data_post = {\n      kode_sales: data.kode_sales,\n      nama_sales: data.nama_sales,\n    };\n    this.state.isEdit\n      ? putData(\"sales/edit/by-kode-sales/\" + data.kode_sales, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataSales());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalDataSales\"));\n          })\n          .catch((error) => this.ErrorHandling(error))\n      : postData(\"sales/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Simpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataSales());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalDataSales\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"sales/reactive/by-kode-sales/\",\n              data.kode_sales,\n              data_post,\n              this.props.dispatch,\n              getDataSales(),\n              hideModal(),\n              \"ModalDataSales\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n  formEditSales(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalSales(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  showModalSales() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalSales(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Sales</li>\n        </ol>\n        <h1 className=\"page-header\">Master Sales </h1>\n        <Panel>\n          <PanelHeader>Master Sales</PanelHeader>\n          <br />\n\n          {/* Master Sales */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_sales\"\n              tambahData={true}\n              handleClick={() => this.showModalSales()}\n              exportCsv={true}\n              data={this.props.DataSales}\n              columns={this.state.columns}\n              empty={this.props.DataSales}\n              textEmpty=\"Data Sales Kosong\"\n            />\n          </div>\n          <br />\n          {/* End Master Sales */}\n          <ModalGlobal\n            title={this.state.isEdit ? \"Edit Data Sales\" : \"Tambah Data Sales\"}\n            size=\"P\"\n            content={\n              <FormModalSales\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Data Sales' : 'Tambah Data Sales' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\n\n          {/* End Tambah Master Sales  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterSales);\n"],"sourceRoot":""}