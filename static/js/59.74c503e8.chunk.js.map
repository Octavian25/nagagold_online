{"version":3,"sources":["pages/Laporan/LaporanService/LaporanTransaksiService/exel/CetakLaporanServiceExel.jsx","pages/Laporan/LaporanService/LaporanTransaksiService/pdf/ExportLaporanService.jsx","pages/Laporan/LaporanService/LaporanTransaksiService/HeadFormLaporanService.jsx"],"names":["CetakLaporanServiceExel","Component","constructor","props","super","this","state","render","total_barang","total_berat","total_ongkos","total_jumlah","data","forEach","barang","index","detail","item","detail_barang","parseInt","ongkos","jumlah","berat","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","textAlign","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","map","key","border","_id","no_faktur_service","row","tgl_system","kode_sales","nama_customer","no_hp","alamat_customer","kode_gudang","total","nama_barang","parseFloat","toFixed","deskripsi","toLocaleString","ExportLaporanService","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","tableColumn","tbl_barang","finalY","total_baraang","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","styles","halign","no_services","push","rows","fillColor","textColor","brg","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanService","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanServices","setState","total_service","databarang","columns","dataField","footerAttrs","footer","cell","num","headerClasses","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_CetakLaporanServiceExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem"],"mappings":"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","file":"static/js/59.74c503e8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\nclass CetakLaporanServiceExel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let total_barang = 0;\n    let total_berat = 0;\n    let total_ongkos = 0;\n    let total_jumlah = 0;\n\n    this.props.data.forEach((barang, index) => {\n      barang.detail.forEach((item, index) => {\n        item.detail_barang.forEach((detail_barang, index) => {\n          total_ongkos = total_ongkos +  parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\n          total_jumlah = total_jumlah + detail_barang.jumlah;\n          total_berat = total_berat + detail_barang.berat;\n        })\n        total_barang = total_barang + item.detail_barang.length;\n      });\n\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Transaksi Service\"\n          sheet=\"Laporan Transaksi Service\"\n          buttonText=\"Export Exel\"\n        />\n        <table\n          rowkey=\"kode_member\"\n          id=\"table-to-xls\"\n          style={{ display: \"none\" }}\n        >\n          <thead>\n            <tr>\n              <th colSpan=\"7\" style={{ textAlign: \"center\" }}>\n                {\" \"}\n                LAPORAN TRANSAKSI SERVICE{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"7\"> Periode </th>\n            </tr>\n            <tr>\n              <th colSpan=\"7\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \"s/d\" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"7\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"7\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr>\n              <th colSpan=\"7\"></th>\n            </tr>\n            <tr>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                TANGGAL TRANSAKSI\n              </th>\n              {/* <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                TANGGAL SELESAI\n              </th> */}\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                KODE SALES\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                NAMA CUSTOMER\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                NO HP\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                ALAMAT CUSTOMER\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                KODE GUDANG\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\n                }}\n              >\n                TOTAL SERVICE\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((item, index) => (\n              <div key={index}>\n                {/* {item._id.pembayaran.map((row, key) => ( */}\n                  <>\n                    <tr key={index}>\n                      <th colSpan=\"7\" style={{ textAlign: \"left\",border: \"1px solid #000\" }}>\n                      No Service\n                        {\" \"}\n                        {item._id.no_faktur_service}{\" \"}\n                      </th>\n                    </tr>\n                    {/* <tr>\n                      <th colSpan=\"7\" style={{ textAlign: \"left\",border: \"1px solid #000\" }}>\n                        {\" \"}\n                        {row.jenis} : {row.jumlah_rp}{\" \"}\n                      </th>\n                    </tr> */}\n                  </>\n\n                {item.detail.map((row, key) => (\n                  <>\n                    <tr  key={key}>\n                      <td>\n                        {\" \"}\n                        {row.tgl_system}\n                      </td>\n                      {/* <td>\n                        {\" \"}\n                        {row.tgl_selesai}\n                      </td> */}\n                      <td>\n                        {\" \"}\n                        {row.kode_sales}\n                      </td>\n                      <td>\n                        {\" \"}\n                        {row.nama_customer}\n                      </td>\n                      <td> {row.no_hp}</td>\n                      <td>\n                        {\" \"}\n                        {row.alamat_customer}\n                      </td>\n                      <td\n                        style={{\n                          textAlign: \"center\",\n                        }}\n                      >\n                        {\" \"}\n                        {row.kode_gudang}\n                      </td>\n                      <td\n                        style={{\n                          textAlign: \"center\",\n                        }}\n                      >\n                        {\" \"}\n                        {row.total}\n                      </td>\n                    </tr>\n                    <tr>\n                      <th colSpan=\"7\">\n                        {\" \"}\n                        Detail Barang{\" \"}\n                      </th>\n                    </tr>\n                    <tr>\n                      <th\n                        colSpan=\"3\"\n                        style={{\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\n                        }}\n                      >\n                        {\" \"}\n                        NAMA BARANG{\" \"}\n                      </th>\n                      <th\n                        style={{\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\n                        }}\n                      >\n                        {\" \"}\n                        BERAT{\" \"}\n                      </th>\n                      <th\n                        style={{\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\n                        }}\n                      >\n                        {\" \"}\n                        JUMLAH{\" \"}\n                      </th>\n                      <th\n                        colSpan=\"2\"\n                        style={{\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\n                        }}\n                      >\n                        {\" \"}\n                        DESKRIPSI{\" \"}\n                      </th>\n                    </tr>\n                    <>\n                      {row.detail_barang.map((detail, index) => (\n                        <>\n                          <tr>\n                            <td\n                              colSpan=\"3\"\n                              style={{\n                                textAlign: \"center\",\n                              }}\n                            >\n                              {\" \"}\n                              {detail.nama_barang}\n                            </td>\n                            <td\n                              style={{\n                                textAlign: \"center\",\n                              }}\n                            >\n                              {\" \"}\n                              {parseFloat(detail.berat.toFixed(3))}\n                            </td>\n                            <td\n                              style={{\n                                textAlign: \"center\",\n                              }}\n                            >\n                              {\" \"}\n                              {detail.jumlah}\n                            </td>\n                            <td\n                              colSpan=\"2\"\n                              style={{\n                                textAlign: \"center\",\n                              }}\n                            >\n                              {\" \"}\n                              {detail.deskripsi}\n                            </td>\n                          </tr>\n                        </>\n                      ))}\n                    </>\n                  </>\n                ))}\n              </div>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <th\n                colSpan=\"7\"\n                style={{ border: \"1px solid #000\", textAlign: \"left\" }}\n              >\n                Total Berat : { total_berat.toFixed(3) }<br />\n                Total Jumlah : { total_jumlah }<br />\n                Total Ongkos : {total_ongkos.toLocaleString(\"kr-KO\")} <br />\n                Total Barang : {total_barang }<br />\n              </th>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default CetakLaporanServiceExel;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {\n  getToday,\n  getUserdata,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst ExportLaporanService = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  // let footRows = [];\n  let tableColumn = [];\n  let tbl_barang = [];\n  let finalY = 30;\n  let total_baraang = 0;\n  let total_berat = 0;\n  let total_jumlah = 0;\n  let total_ongkos = 0;\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN SERVICES\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN SERVICES\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  tableColumn = [\n    [\n      {\n        content: `TANGGAL TRANSAKSI`,\n      },\n      // {\n      //   content: `TANGGAL SELESAI`,\n      // },\n      {\n        content: `KODE SALES`,\n      },\n      {\n        content: `NAMA CUSTOMER`,\n      },\n      {\n        content: `NO HP`,\n      },\n      {\n        content: `ALAMAT CUSTOMER`,\n      },\n      {\n        content: `KODE GUDANG`,\n      },\n      {\n        content: `Total Service`,\n        styles: {\n          halign: 'right'\n        },\n      },\n    ],\n  ];\n  data.forEach((item, index) => {\n    let no_services = [\n      {\n        content: `No Services : ${item._id.no_faktur_service} `,\n        colSpan: 7,\n      },\n    ];\n\n    tableRows.push(no_services);\n    // item._id.pembayaran.forEach((header_detail, index) => {\n      // console.log(item._id.pembayaran[0].jenis);\n      // let no_services = [\n      //   {\n      //     content: `No Services : ${item._id.no_faktur_service} `,\n      //     colSpan: 7,\n      //   },\n      // ];\n\n      // tableRows.push(no_services);\n    // });\n\n    item.detail.forEach((detail, index) => {\n      let rows = [\n        detail.tgl_system,\n        // detail.tgl_selesai,\n        detail.kode_sales,\n        detail.nama_customer,\n        detail.no_hp,\n        detail.alamat_customer,\n        detail.kode_gudang,\n        {\n          content : detail.total.toLocaleString(\"kr-KO\"),\n          styles: {\n            halign: 'right'\n          }\n        }\n      ];\n      tableRows.push(rows);\n      detail.detail_barang.forEach((detail_barang, index) => {\n        tbl_barang = [\n          {\n            content: `Detail Barang`,\n            colSpan: 7,\n            styles: {\n              halign: \"center\",\n              // fillColor: \"#E8E5E5\",\n              // textColor: \"#000\",\n            },\n          },\n        ];\n        tableRows.push(tbl_barang);\n\n        let tbLhead = [\n          {\n            content: `Nama Barang`,\n            colSpan: 2,\n            styles: {\n              fillColor: \"#E8E5E5\",\n              textColor: \"#000\",\n            },\n          },\n          {\n            content: `BERAT`,\n            styles: {\n              fillColor: \"#E8E5E5\",\n              textColor: \"#000\",\n            },\n          },\n          {\n            content: `JUMLAH`,\n            styles: {\n              fillColor: \"#E8E5E5\",\n              textColor: \"#000\",\n            },\n          },\n          {\n            content: `Ongkos`,\n            styles: {\n              fillColor: \"#E8E5E5\",\n              textColor: \"#000\",\n            },\n          },\n          {\n            content: `Deskripsi`,\n            colSpan: 3,\n            styles: {\n              fillColor: \"#E8E5E5\",\n              textColor: \"#000\",\n            },\n          },\n        ];\n        tableRows.push(tbLhead);\n        total_ongkos =\n          total_ongkos +\n          parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\n        total_jumlah = total_jumlah + detail_barang.jumlah;\n        total_berat = total_berat + detail_barang.berat;\n        let brg = [\n          {\n            content: detail_barang.nama_barang,\n            colSpan: 2,\n          },\n          detail_barang.berat.toFixed(3),\n          detail_barang.jumlah,\n          (\n            parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah)\n          ).toLocaleString(\"kr-KO\"),\n          {\n            content: detail_barang.deskripsi,\n            colSpan: 2,\n          },\n        ];\n        tableRows.push(brg);\n\n        // let detail_total = [\n        //   {\n        //     content: `Total Barang ${detail.detail_barang.length}`,\n        //     colSpan: 2,\n        //     styles: {\n        //       halign: \"center\",\n        //       fillColor: \"#E8E5E5\",\n        //       textColor: \"#000\",\n        //     },\n        //   },\n        //   {\n        //     content: `${total_berat}`,\n        //     styles: {\n        //       fillColor: \"#E8E5E5\",\n        //       textColor: \"#000\",\n        //     },\n        //   },\n        //   {\n        //     content: `${total_jumlah}`,\n        //     styles: {\n        //       fillColor: \"#E8E5E5\",\n        //       textColor: \"#000\",\n        //     },\n        //   },\n        // ];\n        // tableRows.push(detail_total);\n      });\n      total_baraang = total_baraang + detail.detail_barang.length;\n    });\n\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\n    // console.log();\n    // let footer = [``, ``, \"\"];\n    // footRows.push(footer);\n  });\n\n  let printed = [\n    {\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      colSpan: 8,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    // foot: tbl_barang,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    footStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n    tableLineColor: [255, 255, 255],\n    tableLineWidth: 1,\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  // footRows = [];\n  // tbl_barang = [];\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  doc.text(\n    `User                          : ${\n      JSON.parse(localStoragedecryp(\"userdata\")).user_id\n    }`,\n    14,\n    finalY + 10\n  );\n  doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  doc.text(\n    `Total Berat                : ${total_berat.toFixed(3)}`,\n    14,\n    finalY + 22\n  );\n  doc.text(`Total Jumlah             : ${total_jumlah}`, 14, finalY + 28);\n  doc.text(\n    `Total Ongkos            : ${parseInt(total_ongkos).toLocaleString(\n      \"kr-KO\"\n    )}`,\n    14,\n    finalY + 34\n  );\n  doc.text(`Total Barang             : ${total_baraang}`, 14, finalY + 40);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN SERVICES.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN SERVICES</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default ExportLaporanService;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { InputDate } from \"../../../../components/helpers/field\";\nimport {  getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\nimport CetakLaporanServiceExel from \"./exel/CetakLaporanServiceExel\";\n// import CetakLaporanBatalHutangExel from \"./exel/CetakLaporanBatalHutangExel\";\nimport ExportLaporanService from \"./pdf/ExportLaporanService\";\nimport Loading from 'react-fullscreen-loading';\nclass HeadFormLaporanService extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdf() {\n    ExportLaporanService(this.props.LaporanServices);\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n\n  render() {\n    // let total_barang = 0;\n    // let total_berat = 0;\n    // let total_ongkos = 0;\n    let total_service = 0;\n    let databarang = [];\n    this.props.LaporanServices.forEach((barang, index) => {\n      barang.detail.forEach((item, index) => {\n        databarang.push(item)\n        // item.detail_barang.forEach((detail_barang, index) => {\n        //   total_ongkos = total_ongkos +  parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\n        //   total_jumlah = total_jumlah + detail_barang.jumlah;\n          total_service = total_service + item.total;\n        // })\n        // total_barang = total_barang + item.detail_barang.length;\n      });\n    });\n\n    const columns = [\n      {\n        dataField: \"no_faktur_service\",\n        text: \"No Faktur\",\n        footerAttrs: {\n          colSpan: \"7\",\n        },\n        footer: (cell, row, num, index) => {\n          return <div>Total Services : {databarang.length} </div>;\n        },\n      },\n      {\n        dataField: \"tgl_system\",\n        text: \"Tgl Transaksi\",\n        // footerAttrs: {\n        //   colSpan: \"7\",\n        // },\n        // footer: (cell, row, num, index) => {\n        //   return <div>Total Services : {databarang.length} </div>;\n        // },\n      },\n     \n      {\n        dataField: \"kode_sales\",\n        text: \"Kode Sales\",\n      },\n      {\n        dataField: \"nama_customer\",\n        text: \"Nama Customer\",\n      },\n      {\n        dataField: \"no_hp\",\n        text: \"No Hp\",\n      },\n      {\n        dataField: \"alamat_customer\",\n        text: \"Alamat Customer\",\n      },\n      {\n        dataField: \"kode_gudang\",\n        text: \"Kode Gudang\",\n      },\n      {\n        dataField: \"total\",\n        text: \"Total Service\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{total_service.toLocaleString(\"kr-KO\")} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\n        },\n      },\n    ]\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_akhir\"\n              component={InputDate}\n              type=\"text\"\n              selected={this.state.tgl_akhir}\n              onChange={(date) => this.setLastDate(date)}\n              label=\"Tanggal Akhir\"\n              placeholder=\"Masukan Tanggal Akhir\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"no_hp\"\n              data={this.props.export ? databarang : []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Transaksi Service Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <button\n                  onClick={() => this.exportPdf()}\n                  className=\"btn btn-warning btn-block\"\n                >\n                  {\" \"}\n                  Export PDF{\" \"}\n                </button>\n              </div>\n              <div className=\"col-lg-6\">\n                <CetakLaporanServiceExel data={this.props.LaporanServices} />\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadFormLaporanService = reduxForm({\n  form: \"HeadFormLaporanService\",\n  enableReinitialize: true,\n  validate: ValidasiTanggalLaporan,\n})(HeadFormLaporanService);\n// export default connect()(HeadFormLaporanService);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadFormLaporanService);\n"],"sourceRoot":""}