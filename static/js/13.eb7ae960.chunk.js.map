{"version":3,"sources":["pages/Laporan/LaporanPembelian/PembelianSales/exel/ExportExelPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/pdf/ExportLaporanPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/HeadFormLaporanPembelianSales.jsx","Validasi/Penjualan/ValidasiLaporanPenjualanSales.jsx"],"names":["ExportExelPembelianSales","Component","constructor","props","super","this","state","render","total_berat","total_barang","harga","jumlah","data","forEach","item","index","parseFloat","berat","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","backgroundColor","color","textAlign","map","row","_id","kode_sales","ExportLaporanPembelianSales","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","finalY","setFontSize","text","setProperties","title","concat","sub_jumlah","sub_harga","sub_berat","rows","toFixed","parseInt","toLocaleString","push","footer","content","styles","halign","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanPembelianSales","date","Date","setStartDate","bind","setLastDate","componentDidMount","dispatch","getDataSales","setState","exportPdf","LaporanTransaksiPembelian","databarang","element","columns","dataField","cell","num","formatter","headerClasses","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_ExportExelPembelianSales","reduxForm","form","enableReinitialize","validate","ValidasiLaporanPenjualanSales","connect","datasales","datamaster","initialValues","getTglSystem","errors","tanggal_awal","sampai_tgl"],"mappings":"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","file":"static/js/13.eb7ae960.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass ExportExelPembelianSales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let total_berat = 0;\r\n    let total_barang = 0;\r\n    let harga = 0;\r\n    let jumlah = 0;\r\n    this.props.data.forEach((item, index) => {\r\n      // barang.detail.forEach((item, index) => {\r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      harga = harga + item.harga;\r\n      jumlah = jumlah + item.jumlah;\r\n      total_barang = total_barang + item.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Pembelian Pramuniaga\"\r\n          sheet=\"Laporan Pembelian Pramuniaga\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"4\"> Laporan Pembelian Pramuniaga </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"4\">\r\n                {\" \"}\r\n                Periode{\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                SALES\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                TOTAL QTY\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                TOTAL PEMBELIAN RP\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <>\r\n                {/* {item.detail.map((row, index) => ( */}\r\n                <tr>\r\n                  <td>{row._id.kode_sales}</td>\r\n                  <td\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {row.berat}\r\n                  </td>\r\n                  <td>{row.jumlah}</td>\r\n                  <td>{row.harga}</td>\r\n                </tr>\r\n                {/* ))} */}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                // colSpan=\"6\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n\r\n                  textAlign: \"center\",\r\n                }}\r\n              ></td>\r\n\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {total_berat}\r\n              </td>\r\n\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                {jumlah}\r\n              </td>\r\n\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                {harga}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ExportExelPembelianSales;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportLaporanPembelianSales = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"P\", \"mm\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 30;\r\n  // let total_baraang = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PEMBELIAN PRAMUNIAGA\", 14, 15);\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN PEMBELIAN PRAMUNIAGA\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `SALES`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n      },\r\n      {\r\n        content: `TOTAL QTY`,\r\n      },\r\n      {\r\n        content: `TOTAL PEMBELIAN RP`,\r\n        style: {\r\n          textAlign: \"right\",\r\n        },\r\n      },\r\n      // {\r\n      //   content: `NO FAKTUR`,\r\n      // },\r\n      // {\r\n      //   content: `NAMA CUSTOMER`,\r\n      // },\r\n      // {\r\n      //   content: `NO HP`,\r\n      // },\r\n      // {\r\n      //   content: `ALAMAT CUSTOMER`,\r\n      // },\r\n      // {\r\n      //   content: `KODE GUDANG`,\r\n      // },\r\n      // {\r\n      //   content: `KODE DEPT`,\r\n      // },\r\n      // {\r\n      //   content: `BERAT NOTA`,\r\n      // },\r\n      // {\r\n      //   content: `BERAT`,\r\n      // },\r\n      // {\r\n      //   content: `HARGA NOTA`,\r\n      // },\r\n      // {\r\n      //   content: `HARGA`,\r\n      // },\r\n      // {\r\n      //   content: `HARGA RATA`,\r\n      // },\r\n      // {\r\n      //   content: `KONDISI`,\r\n      // },\r\n    ],\r\n  ];\r\n  let sub_jumlah = 0;\r\n  let sub_harga = 0;\r\n  let sub_berat = 0;\r\n  data.forEach((item, index) => {\r\n    // let head = [\r\n    //   {\r\n    //     content: `KODE SALES : ${item._id.kode_sales}`,\r\n    //     colSpan: 12,\r\n    //   },\r\n    // ];\r\n    // tableRows.push(head);\r\n\r\n   \r\n      let rows = [\r\n        item._id.kode_sales,\r\n        // item.no_faktur_beli,\r\n        // item.nama_customer,\r\n        // item.no_hp,\r\n        // item.alamat_customer,\r\n        // item.kode_gudang,\r\n        // item.kode_dept,\r\n        item.berat.toFixed(3),\r\n        item.jumlah,\r\n        parseInt(item.harga).toLocaleString(\"ID-id\"),\r\n        // item.berat.toFixed(1),\r\n        // parseInt(item.harga_nota).toLocaleString(\"ID-id\"),\r\n        // parseInt(item.harga_rata).toLocaleString(\"ID-id\"),\r\n        // item.kondisi,\r\n      ];\r\n     \r\n      sub_jumlah = sub_jumlah + parseFloat(item.jumlah);\r\n      sub_harga = sub_harga + parseFloat(item.harga);\r\n      sub_berat = sub_berat + parseFloat(item.berat);\r\n      tableRows.push(rows);\r\n   \r\n    // total_baraang = total_baraang+item.detail.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    \r\n  });\r\n  let footer = [\r\n    {\r\n      content: ``,\r\n      // colSpan: ,\r\n      styles: {\r\n        halign: \"center\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${sub_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n\r\n    {\r\n      content: sub_jumlah.toLocaleString('ID-id'),\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: sub_harga.toLocaleString('ID-id'),\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // sub_harga = 0;\r\n  // sub_harga_rata = 0;\r\n  // sub_harga_nota = 0;\r\n  // sub_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(\r\n  //   `User                        : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN PEMBELIAN PRAMUNIAGA.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN PEMBELIAN PRAMUNIAGA</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportLaporanPembelianSales;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getDataSales } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  InputDate,\r\n  // ReanderSelect,\r\n} from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\r\nimport ExportExelPembelianSales from \"./exel/ExportExelPembelianSales\";\r\nimport ExportLaporanPembelianSales from \"./pdf/ExportLaporanPembelianSales\"\r\n// const maptostate = (state) => {\r\n//   return {\r\n//     datasales: state.datamaster.getDataSales,\r\n//   };\r\n// };\r\nclass HeadFormLaporanPembelianSales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales())\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  exportPdf() {\r\n    ExportLaporanPembelianSales(this.props.LaporanTransaksiPembelian);\r\n  }\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    let harga = 0;\r\n    let jumlah = 0;\r\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\r\n      // element.detail.forEach((detail) => {\r\n      let row = {\r\n        kode_sales: element._id.kode_sales,\r\n        berat: element.berat,\r\n        harga: element.harga,\r\n        jumlah: element.jumlah\r\n        }\r\n        databarang.push(row);\r\n        berat = berat + element.berat;\r\n        harga = harga + element.harga;\r\n        jumlah = jumlah + element.jumlah;\r\n       \r\n      // });\r\n    });\r\n    const columns = [\r\n      \r\n      // {\r\n      //   dataField: \"no_faktur_beli\",\r\n      //   text: \"No FB\",\r\n      //   footerAttrs: {\r\n      //     colSpan: \"4\",\r\n      //   },\r\n      //   footer: (cell, row, num, index) => {\r\n      //     return <div>Total Barang : {databarang.length} </div>;\r\n      //   },\r\n      // },\r\n      \r\n      {\r\n        dataField: \"kode_sales\",\r\n        text: \"Kode Sales\",\r\n        footer: \"\",\r\n        // footerAttrs: {\r\n        //   colSpan: \"3\",\r\n        // },\r\n        // footer: (cell, row, num, index) => {\r\n        //   return <div>Total Barang : {databarang.length} </div>;\r\n        // },\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        footer: (cell, row, num, index) => {\r\n          return <div>{berat.toFixed(3)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return cell.toFixed(3);\r\n        },\r\n      },\r\n     \r\n      {\r\n        dataField: \"jumlah\",\r\n        text: \"Total Qty\",\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{jumlah.toLocaleString('ID-id')} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString('ID-id')}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga\",\r\n        text: \"Total Pembelian Rp\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{harga.toLocaleString('ID-id')} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString('ID-id')}</div>;\r\n        },\r\n      },\r\n     \r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <Field\r\n            name=\"tgl_awal\"\r\n            component={InputDate}\r\n            label=\"Tanggal Dari\"\r\n            type=\"text\"\r\n            selected={this.state.tgl_awal}\r\n            onChange={(date) => this.setStartDate(date)}\r\n            placeholder=\"Masukan Tanggal Dari\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-lg-4\">\r\n          <Field\r\n            name=\"tgl_akhir\"\r\n            component={InputDate}\r\n            type=\"text\"\r\n            selected={this.state.tgl_akhir}\r\n            onChange={(date) => this.setLastDate(date)}\r\n            label=\"Tanggal Akhir\"\r\n            placeholder=\"Masukan Tanggal Akhir\"\r\n          />\r\n        </div>\r\n          {/* <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Kode Sales\"\r\n              name=\"kode_sales\"\r\n              options={this.props.datasales.map((row) => {\r\n                let data = {\r\n                  value: row.kode_sales,\r\n                  name: row.kode_sales\r\n                };\r\n                return data || [];\r\n              })}\r\n              placeholder={\"Silahkan Pilih Nama Sales\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div> */}\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <button\r\n                onClick={() => this.exportPdf()}\r\n                className=\"btn btn-warning btn-block\"\r\n              >\r\n                {\" \"}\r\n                Export PDF{\" \"}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <ExportExelPembelianSales data={this.props.LaporanTransaksiPembelian} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanPembelianSales = reduxForm({\r\n  form: \"HeadFormLaporanPembelianSales\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiLaporanPenjualanSales,\r\n})(HeadFormLaporanPembelianSales);\r\n// export default connect(maptostate, null)(HeadFormLaporanPembelianSales);\r\nexport default connect((state) => {\r\n  return {\r\n    datasales: state.datamaster.getDataSales,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanPembelianSales);\r\n","const ValidasiLaporanPenjualanSales = (value) => {\r\n    const errors = {};\r\n    if (!value.tanggal_awal) {\r\n        errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.sampai_tgl) {\r\n        errors.sampai_tgl = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kode_sales) {\r\n        errors.kode_sales = \"Kode Tidak Boleh Kosong\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiLaporanPenjualanSales;\r\n\r\n\r\n"],"sourceRoot":""}