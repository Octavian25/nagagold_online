{"version":3,"sources":["pages/Laporan/LaporanBarang/LaporanHancurBarang/exel/LaporanHancurBarangExel.jsx","pages/Laporan/LaporanBarang/LaporanHancurBarang/pdf/CetakLaporanHancurBarang.jsx","pages/Laporan/LaporanBarang/LaporanHancurBarang/HeadHancurBarang.jsx","pages/Laporan/LaporanBarang/LaporanHancurBarang/FormLaporanHancurBarang.jsx"],"names":["LaporanHancurBarangExel","Component","constructor","props","super","this","state","render","stock_on_hand","berat","berat_atribut","total_barang","data","forEach","barang","index","detail","item","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","backgroundColor","color","map","no","row","kode_gudang","kode_baki","kode_barcode","nama_barang","toFixed","nama_atribut","kondisi_barang","textAlign","CetakLaporanHancurBarang","doc","jsPDF","tableRows","finalY","grand_total_berat","grand_berat_atribut","setFontSize","text","setProperties","title","concat","i","total_berat","total_berat_atribut","rows","parseFloat","push","total","content","styles","halign","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadHancurBarang","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanDataBarang","setState","databarang","element","columns","dataField","footerAttrs","footer","cell","num","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_LaporanHancurBarangExel","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","FormLaporanHancurBarang","React","isEdit","modalDialog","username","data_post","formatDate","moment","format","postData","then","res","ToastNotification","localStorageencryp","stringify","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","LaporanHancurBarang_HeadHancurBarang","hideModal","datamaster"],"mappings":"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","file":"static/js/41.285490d8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\nclass LaporanHancurBarangExel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let stock_on_hand = 0;\n    let berat = 0;\n    let berat_atribut = 0;\n    let total_barang = 0;\n    this.props.data.forEach((barang, index) => {\n      barang.detail.forEach((item, index) => {\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\n        berat_atribut = berat_atribut + item.berat_atribut;\n        berat = berat + item.berat;\n      });\n      total_barang = total_barang + barang.detail.length;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Hancur Barang\"\n          sheet=\"Laporan Hancur Barang\"\n          buttonText=\"Export Exel\"\n        />\n        <table\n          rowkey=\"kode_member\"\n          id=\"table-to-xls\"\n          style={{ display: \"none\" }}\n        >\n          <thead>\n            <tr>\n              <th colSpan=\"8\"> Laporan Hancur Barang </th>\n            </tr>\n            <tr>\n              <th colSpan=\"8\"> Periode </th>\n            </tr>\n            <tr>\n              <th colSpan=\"8\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"8\"></th>\n            </tr>\n            <tr>\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NO\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                KODE GUDANG\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                KODE BAKI\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                KODE BARCODE\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NAMA BARANG\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                BERAT\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NAMA ATRIBUT\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                BERAT ATRIBUT\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                KONDISI BARANG\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((item, no) => (\n              <>\n                {/* <tr>\n                <th> No Hancur </th>\n                <th colSpan=\"7\" style={{ textAlign: \"left\" }}>\n                  {\" \"}\n                  {item._id.no_hancur}{\" \"}\n                </th>\n              </tr> */}\n\n                {item.detail.map((row, index) => (\n                  <tr>\n                    <td> {++no}</td>\n                    <td> {row.kode_gudang}</td>\n                    <td> {row.kode_baki}</td>\n                    <td> {row.kode_barcode}</td>\n                    <td> {row.nama_barang}</td>\n                    <td> {row.berat.toFixed(3)}</td>\n                    <td> {row.nama_atribut}</td>\n                    <td> {row.berat_atribut.toFixed(3)}</td>\n                    <td> {row.kondisi_barang}</td>\n                  </tr>\n                ))}\n                {/* <tr>\n                <td colSpan=\"4\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                  {\" \"}\n                  Total \n                </td>\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                  {\" \"}\n                  {item.detail\n                    .map((list) => list.berat)\n                    .reduce((a, b) => a + b, 0)}{\" \"}\n                </td>\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                  {\" \"}\n                  {item.detail\n                    .map((list) => list.berat_atribut)\n                    .reduce((a, b) => a + b, 0)}{\" \"}\n                </td>\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\n              </tr> */}\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                colSpan=\"5\"\n                style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }}\n              >\n                {\" \"}\n                Total\n              </td>\n            \n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> {berat} </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                {\" \"}\n                {berat_atribut}{\" \"}\n              </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\n              {/* <th\n              colSpan=\"8\"\n              style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"left\" }}\n            >\n              Total Brang : {total_barang} Pcs<br />\n              Total Berat : {berat.toFixed(3)} <br />\n              Total Berat Atribut : {berat_atribut.toFixed(3) }\n            </th> */}\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanHancurBarangExel;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {\n  getToday,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst CetakLaporanHancurBarang = (data = \"\") => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let finalY = 30;\n\n  let total_barang = 0;\n  let grand_total_berat = 0;\n  let grand_berat_atribut = 0;\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN HANCUR BARANG\", 14, 15);\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"Laporan Hancur Barang\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  let tableColumn = [\n    // [\n    //   {\n    //     content: `No Hancur : ${item._id.no_hancur}`,\n    //     colSpan: 8,\n    //   },\n    // ],\n    [\n      {\n        content: `No`,\n      },\n      {\n        content: `Kode Gudang`,\n      },\n      {\n        content: `Kode Baki`,\n      },\n      {\n        content: `BARCODE`,\n      },\n      {\n        content: `NAMA BARANG`,\n      },\n      {\n        content: `BERAT`,\n      },\n      {\n        content: `NAMA ATR`,\n      },\n      {\n        content: `BRT ATR`,\n      },\n      {\n        content: `Kondisi Barang`,\n      },\n    ],\n  ];\n  let i = 1;\n  data.forEach((item, no) => {\n    let total_berat = 0;\n    let total_berat_atribut = 0;\n\n    // let data = [\n    //   {\n    //     content: `NO HANCUR : ${item._id.no_hancur}`,\n    //     colSpan: \"9\",\n    //   },\n    // ];\n    // tableRows.push(data);\n    item.detail.forEach((barang, index) => {\n      let rows = [\n        i,\n        barang.kode_gudang,\n        barang.kode_baki,\n        barang.kode_barcode,\n        barang.nama_barang,\n        barang.berat.toFixed(3),\n        barang.nama_atribut,\n        barang.berat_atribut.toFixed(3),\n        barang.kondisi_barang,\n      ];\n\n      total_berat = total_berat + parseFloat(barang.berat);\n      total_berat_atribut =\n      total_berat_atribut + parseFloat(barang.berat_atribut);\n\n      grand_total_berat = grand_total_berat + parseFloat(barang.berat);\n      grand_berat_atribut =\n      grand_berat_atribut + parseFloat(barang.berat_atribut);\n\n      tableRows.push(rows);\n      ++i\n    });\n    total_barang = total_barang + item.detail.length;\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\n    // console.log();\n    \n  });\n\n  let total = [\n    {\n      content: `Total`,\n      colSpan: 5,\n      styles: {\n        halign: \"center\",\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${grand_total_berat.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: ``,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${grand_berat_atribut.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: ``,\n      styles: {\n        halign: \"center\",\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    // `${sub_qty}`,\n  ];\n  tableRows.push(total);\n  // let footer = [\n  //   {\n  //     content: `Total Barang : ${total_barang} Pcs\\nTotal Berat : ${grand_total_berat.toFixed(\n  //       3\n  //     )}\\nTotal Berat Atribut : ${grand_berat_atribut.toFixed(3)}`,\n  //     colSpan: 10,\n  //     styles: {\n  //       fillColor: \"#E8E5E5\",\n  //       textColor: \"#000\",\n  //     },\n  //   },\n  // ];\n\n  // tableRows.push(footer);\n  // let footer = [\n  //   {\n  //     content: `Sub total : ${item.detail.length}`,\n  //     colSpan: 4,\n  //   },\n  //   `${sub_total.toFixed(3)}`,\n  //   \"\",\n  //   `${berat_atribut.toFixed(3)}`,\n  // ];\n  // footRows.push(footer);\n  let printed = [\n    {\n      colSpan:9,\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    // foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    footStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n\n  // doc.text(\n  //   `User                        : ${\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\n  //   }`,\n  //   14,\n  //   finalY + 10\n  // );\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\n  // doc.text(\n  //   `Grand Total Berat   : ${parseFloat(grandtotalberat).toFixed(3)}`,\n  //   14,\n  //   finalY + 22\n  // );\n  // doc.text(`Grand Total Barang: ${parseFloat(total_baraang)}`, 14, finalY + 28);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`Laporan Hancur Barang.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>Laporan Hancur Barang</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default CetakLaporanHancurBarang;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { InputDate } from \"../../../../components/helpers/field\";\nimport { getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\nimport LaporanHancurBarangExel from \"./exel/LaporanHancurBarangExel\";\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\nimport CetakLaporanHancurBarang from \"./pdf/CetakLaporanHancurBarang\";\n\nclass HeadHancurBarang extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdf() {\n    CetakLaporanHancurBarang(this.props.LaporanDataBarang);\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n\n  render() {\n    let databarang = [];\n    let berat = 0;\n    this.props.LaporanDataBarang.forEach((element) => {\n      element.detail.forEach((detail) => {\n        databarang.push(detail);\n        berat = berat + detail.berat\n      });\n    });\n    const columns = [\n  \n      {\n        dataField: \"kode_gudang\",\n        text: \"Kode Gudang\",\n        footerAttrs: {\n          colSpan: \"4\",\n        },\n        footer: (cell, row, num, index) => {\n          return <div>Total Barang  : {databarang.length} </div>;\n        },\n      },\n      {\n        dataField: \"kode_baki\",\n        text: \"Kode Baki\",\n      },\n      {\n        dataField: \"kode_barcode\",\n        text: \"Kode Barcode\",\n      },\n\n      {\n        dataField: \"nama_barang\",\n        text: \"Nama Barang\",\n      },\n     \n      {\n        dataField: \"berat\",\n        text: \"Berat\",\n        footer: (cell, row, num, index) => {\n          return <div>{berat.toFixed(3)} </div>;\n        },\n        formatter: (cell) => {\n          return cell.toFixed(3);\n        },\n      }\n    ];\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_akhir\"\n              component={InputDate}\n              type=\"text\"\n              selected={this.state.tgl_akhir}\n              onChange={(date) => this.setLastDate(date)}\n              label=\"Tanggal Akhir\"\n              placeholder=\"Masukan Tanggal Akhir\"\n            />\n          </div>\n         \n          <div className=\"col-lg-4\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n          <div className=\"col-12\">\n            <Tabel\n              keyField=\"kode_gudang\"\n              data={this.props.export ? databarang  :  []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Hancur Barang Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <button\n                  onClick={() => this.exportPdf()}\n                  className=\"btn btn-warning btn-block\"\n                >\n                  {\" \"}\n                  Export PDF{\" \"}\n                </button>\n              </div>\n              <div className=\"col-lg-6\">\n                <LaporanHancurBarangExel data={this.props.LaporanDataBarang} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nHeadHancurBarang = reduxForm({\n  form: \"HeadHancurBarang\",\n    enableReinitialize: true,\n  validate: ValidasiTanggalLaporan \n})(HeadHancurBarang);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadHancurBarang);\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\n\nimport { connect } from \"react-redux\";\nimport { postData } from \"../../../../config/axios.jsx\";\nimport { reduxForm } from \"redux-form\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { NotifError, ToastNotification } from \"../../../../components/helpers/notification.jsx\";\nimport HeadHancurBarang from \"./HeadHancurBarang.jsx\";\nimport { formatDate, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\nimport * as moment from \"moment-timezone\";\n\n\nconst maptostate = (state) => {\n  return {\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nclass FormLaporanHancurBarang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      username: false,\n      export: false,\n      LaporanDataBarang: [],\n      tgl_awal: new Date(),\n      tgl_akhir: new Date(),\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    let data_post = {\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir)).format('YYYY-MM-DD')),\n    };\n\n    postData(\"hancurbarang/get/report\", data_post)\n      .then((res) => {\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\n          this.setState({\n            isLoading: false,\n            export: false,\n          });\n        } else {\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\n          ToastNotification(\"success\", \"Laporan Hancur Barang Tersedia\");\n          this.setState({\n            LaporanDataBarang: res.data,\n            isLoading: false,\n            export: true,\n          })\n        }\n      })\n      .catch((error) => this.errorHandling(error));\n  }\n\n  errorHandling(err) {\n    NotifError(err);\n    this.setState({\n      isLoading: false,\n      export: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Laporan Barang</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Laporan Hancur Barang</li>\n        </ol>\n        <h1 className=\"page-header\">Laporan Hancur Barang </h1>\n        <Panel>\n          <PanelHeader>Filter Laporan</PanelHeader>\n          <br />\n          <div className=\"container\">\n            <HeadHancurBarang\n              export={this.state.export}\n              LaporanDataBarang={this.state.LaporanDataBarang}\n              isLoading={this.state.isLoading}\n              onSubmit={(data) => this.handleSubmit(data)}\n            />\n          </div>\n          <br/>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nFormLaporanHancurBarang = reduxForm({\n  form: \"FormLaporanHancurBarang\",\n  enableReinitialize: true,\n})(FormLaporanHancurBarang);\nexport default connect(maptostate, null)(FormLaporanHancurBarang);\n"],"sourceRoot":""}