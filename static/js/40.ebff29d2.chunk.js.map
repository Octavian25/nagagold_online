{"version":3,"sources":["pages/Laporan/LaporanBarang/FormLaporanDetailBarang/pdf/CetakLaporanDetailBarang.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/exel/LaporanDetailBarangExel.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/HeadFilterLaporan.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/FormDetailBarang.jsx"],"names":["CetakLaporanDetailBarang","data","kode_baki","doc","jsPDF","tableRows","tableColumn","finalY","total_berat","total_stock","total_berat_atribut","setFontSize","text","setProperties","title","concat","content","forEach","item","index","rows","styles","cellWidth","kode_barang","kode_barcode","kode_intern","kode_gudang","nama_barang","berat","nama_atribut","berat_atribut","stock_on_hand","push","footer","colSpan","halign","fillColor","textColor","toFixed","printed","JSON","parse","localStoragedecryp","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","LaporanDetailBarangExel","Component","constructor","props","super","this","state","render","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","textAlign","backgroundColor","color","map","key","list","reduce","b","HeadFilterLaporan","loading","componentDidMount","dispatch","getDataBaki","exportPdf","onSubmit","handleSubmit","autoComplete","onKeyPress","e","preventDefault","Field","label","name","options","databaki","value","nama_baki","placeholder","component","ReanderSelect","field","disabled","submitting","type","isLoading","tabel","keyField","columns","empty","textEmpty","export","onClick","exel_LaporanDetailBarangExel","reduxForm","form","enableReinitialize","connect","datamaster","FormDetailBarang","React","isEdit","modalDialog","LaporanBarangDetail","dataField","sort","footerAttrs","cell","row","num","length","formatter","columnData","acc","bind","setState","username","kode_toko","data_post","undefined","Swal","fire","icon","position","timer","confirmButtonText","showConfirmButton","postData","then","res","ToastNotification","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","FormLaporanDetailBarang_HeadFilterLaporan","hideModal"],"mappings":"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","file":"static/js/40.ebff29d2.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanDetailBarang = (\r\n  data = \"\",\r\n  kode_baki = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat = 0;\r\n  let total_stock = 0;\r\n  let total_berat_atribut = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN BARANG DETAIL\", 14, 15);\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN BARANG DETAIL\",\r\n  });\r\n  doc.text(`KODE BAKI : ${kode_baki}`, 14, 25);\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KODE BARANNG`,\r\n      },\r\n      {\r\n        content: `KODE BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE INTERN`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUTE`,\r\n      },\r\n      {\r\n        content: `BERAT ATRIBUTE`,\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.kode_barang,\r\n      item.kode_barcode,\r\n      item.kode_intern,\r\n      item.kode_gudang,\r\n      item.nama_barang,\r\n      item.berat,\r\n      item.nama_atribut,\r\n      item.berat_atribut,\r\n      // item.stock_on_hand,\r\n     \r\n    ];\r\n    total_berat = total_berat + item.berat;\r\n    total_stock = total_stock + item.stock_on_hand;\r\n    total_berat_atribut = total_berat_atribut + item.berat_atribut;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString('ID-id')}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 6,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat_atribut.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('ID-id')}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN BARANG DETAIL.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanDetailBarang;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanDetailBarang = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"id-ID\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanDetailBarang;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nclass LaporanDetailBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Barang Detail\"\r\n          sheet=\"Laporan Barang Detail\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"9\" style={{textAlign : \"center\"}}> LAPORAN BARANG DETAIL </th>\r\n              </tr>\r\n              <tr>\r\n                <th> Kode Baki </th>\r\n                <th colSpan=\"9\" style={{textAlign : \"left\"}}> {this.props.kode_baki} </th>\r\n              </tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARCODE</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE INTERN</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GUDANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BARANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA ATRIBUT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ATRIBUT</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        <td> {item.kode_barang}</td>\r\n                        <td> {item.kode_barcode}</td>\r\n                        <td> {item.kode_intern}</td>\r\n                        <td> {item.kode_gudang}</td>\r\n                        <td> {item.nama_barang}</td>\r\n                        <td> {item.berat}</td>\r\n                        <td> {item.nama_atribut}</td>\r\n                        <td> {item.berat_atribut}</td>\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"6\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}> {this.props.data.map(list => list.berat).reduce((a,b) => a+b,0)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}>  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"  }}> {this.props.data.map(list => list.berat_atribut).reduce((a,b) => a+b,0)}  </th>    \r\n                    {/* <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}> {this.props.data.map(list => list.stock_on_hand).reduce((a,b) => a+b,0)}  </th>     */}\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanDetailBarangExel;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  ReanderSelect,\r\n  SkeletonLoading,\r\n} from \"../../../../components/helpers/field\";\r\nimport { getDataBaki } from \"../../../../actions/datamaster_action\";\r\nimport CetakLaporanDetailBarang from \"./pdf/CetakLaporanDetailBarang\";\r\nimport LaporanDetailBarangExel from \"./exel/LaporanDetailBarangExel\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n  };\r\n};\r\nclass HeadFilterLaporan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataBaki());\r\n  }\r\n  exportPdf() {\r\n    CetakLaporanDetailBarang(this.props.data, this.props.kode_baki);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <form\r\n          onSubmit={(data) => this.props.handleSubmit(data)}\r\n          autoComplete=\"off\"\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Kode Baki\"\r\n                  name=\"kode_baki\"\r\n                  options={this.props.databaki.map((databaki) => {\r\n                    let data = {\r\n                      value: databaki.kode_baki,\r\n                      name: databaki.kode_baki + \" - \" + databaki.nama_baki,\r\n                    };\r\n                    return data || [];\r\n                  })}\r\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Baki\" />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col-6\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Filter Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <Tabel\r\n                keyField=\"kode_barcode\"\r\n                data={this.props.data}\r\n                columns={this.props.columns}\r\n                empty={true}\r\n                textEmpty=\"Data Laporan Barang Detail Kosong\"\r\n              />\r\n            </div>\r\n            {this.props.export ? (\r\n              <>\r\n                <div className=\"col-lg-6\">\r\n                  <button\r\n                    onClick={() => this.exportPdf()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export PDF{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <LaporanDetailBarangExel\r\n                    data={this.props.data}\r\n                    kode_baki={this.props.kode_baki}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFilterLaporan = reduxForm({\r\n  form: \"HeadFilterLaporan\",\r\n  enableReinitialize: true,\r\n})(HeadFilterLaporan);\r\nexport default connect(maptostate, null)(HeadFilterLaporan);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { localStoragedecryp } from \"../../../../components/helpers/function.jsx\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification.jsx\";\r\n// import CetakLaporanDetailBarang from \"./CetakLaporanDetailBarang.jsx\";\r\n// import FormFilter from \"./FormFilter.jsx\";\r\nimport Swal from \"sweetalert2\";\r\nimport { postData } from \"../../../../config/axios.jsx\";\r\nimport HeadFilterLaporan from \"./HeadFilterLaporan.jsx\";\r\n// import LaporanDetailexel from \"./LaporanDetailExel.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormDetailBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      export: false,\r\n      kode_baki: [],\r\n      LaporanBarangDetail: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_barang\",\r\n          text: \"Kode Barang \",\r\n          sort: true,\r\n          footerAttrs: {\r\n            colSpan: \"5\",\r\n          },\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div>Total Barang : {this.state.LaporanBarangDetail.length || 0} </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode\",\r\n        },\r\n        {\r\n          dataField: \"kode_gudang\",\r\n          text: \"Kode Gudang\",\r\n        },\r\n\r\n        {\r\n          dataField: \"kode_toko\",\r\n          text: \"Kode Toko\",\r\n        },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          formatter: (cell) => {\r\n            return cell.toFixed(3);\r\n          },\r\n          footer: (columnData) =>\r\n            columnData.reduce((acc, item) => acc + item, 0).toFixed(3),\r\n        },\r\n        // {\r\n        //   dataField: \"stock_on_hand\",\r\n        //   text: \"Jumlah\",\r\n        //   formatter: (cell) => {\r\n        //     return cell;\r\n        //   },\r\n        //   footer: (columnData) =>\r\n        //     columnData.reduce((acc, item) => acc + item, 0),\r\n        // },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    let data = JSON.parse(localStoragedecryp(\"userdata\"));\r\n    this.setState({ username: data.user_id });\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true, kode_toko: data.kode_baki });\r\n    let data_post = {\r\n      kode_toko: data.kode_baki,\r\n    };\r\n    if (data.kode_baki === undefined) {\r\n      Swal.fire({\r\n        // title: 'Good Job',\r\n        text: \"Kode Baki Tidak Boleh Kosong\",\r\n        icon: \"info\",\r\n        position: \"top-center\",\r\n        timer: 2000,\r\n        width: \"300px\",\r\n        height: \"100px\",\r\n        confirmButtonText: \"OK\",\r\n        showConfirmButton: true,\r\n      });\r\n      //   this.props.dispatch(reset(\"FormFilter\"));\r\n      this.setState({ isLoading: false });\r\n      return false;\r\n    }\r\n    //   console.log(data_post);\r\n\r\n    postData(\"reportbarang/barangdetail\", data_post)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Barang Detail Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Barang Detail Tersedia\");\r\n          this.setState({\r\n            export: true,\r\n            kode_baki: data.kode_baki,\r\n            LaporanBarangDetail: res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Detail Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Detail Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <HeadFilterLaporan\r\n                  kode_baki={this.state.kode_baki}\r\n                  export={this.state.export}\r\n                  columns={this.state.columns}\r\n                  data={this.state.LaporanBarangDetail}\r\n                  isLoading={this.state.isLoading}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n        \r\n            </div>\r\n          </div>\r\n          <br />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormDetailBarang = reduxForm({\r\n  form: \"FormDetailBarang\",\r\n  enableReinitialize: true,\r\n})(FormDetailBarang);\r\nexport default connect(maptostate, null)(FormDetailBarang);\r\n"],"sourceRoot":""}