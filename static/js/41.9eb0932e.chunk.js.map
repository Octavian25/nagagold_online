{"version":3,"sources":["pages/Laporan/LaporanBarang/FormLaporanDetailBarang/pdf/CetakLaporanDetailBarang.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/exel/LaporanDetailBarangExel.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/HeadFilterLaporan.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/FormDetailBarang.jsx"],"names":["CetakLaporanDetailBarang","data","kode_baki","doc","jsPDF","tableRows","tableColumn","finalY","total_berat","total_stock","total_berat_atribut","setFontSize","text","setProperties","title","concat","content","forEach","item","index","rows","styles","cellWidth","kode_barcode","kode_group","kode_dept","kode_intern","kode_gudang","nama_barang","berat","nama_atribut","berat_atribut","stock_on_hand","push","footer","colSpan","halign","fillColor","textColor","toFixed","printed","JSON","parse","localStoragedecryp","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","LaporanDetailBarangExel","Component","constructor","props","super","this","state","render","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","textAlign","backgroundColor","color","map","key","list","reduce","b","HeadFilterLaporan","loading","list_baki","value","name","componentDidMount","dispatch","GetDataGroup","getDataJenis","getDataGudang","getDataBaki","exportPdf","console","log","dataJenis","databaki","nama_baki","dataGroup","nama_group","nama_dept","dataGudang","nama_gudang","onSubmit","handleSubmit","autoComplete","onKeyPress","e","preventDefault","Field","label","options","placeholder","component","ReanderSelect","field","onChange","getDataBakiByGudang","disabled","submitting","type","isLoading","tabel","keyField","columns","empty","textEmpty","export","onClick","exel_LaporanDetailBarangExel","loading_default","background","loaderColor","reduxForm","form","enableReinitialize","connect","datamaster","FormDetailBarang","React","isEdit","modalDialog","LaporanBarangDetail","dataField","footerAttrs","cell","row","num","length","formatter","columnData","acc","bind","setState","username","kode_toko","getData","kode_jenis","then","res","ToastNotification","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","FormLaporanDetailBarang_HeadFilterLaporan","hideModal"],"mappings":"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","file":"static/js/41.9eb0932e.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { getToday, localStoragedecryp } from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst CetakLaporanDetailBarang = (\n  data = \"\",\n  kode_baki = \"\",\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  // let footRows = [];\n  let tableColumn = [];\n  let finalY = 30;\n  let total_berat = 0;\n  let total_stock = 0;\n  let total_berat_atribut = 0;\n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN BARANG DETAIL\", 14, 15);\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN BARANG DETAIL\",\n  });\n  doc.text(`KODE BAKI : ${kode_baki}`, 14, 25);\n  tableColumn = [\n    [\n      {\n        content: `NO`,\n      },\n      // {\n      //   content: `KODE BARANG`,\n      // },\n      {\n        content: `KODE BARCODE`,\n      },\n      {\n        content: `KODE GROUP`,\n      },\n      {\n        content: `KODE JENIS`,\n      },\n      {\n        content: `KODE INTERN`,\n      },\n      {\n        content: `KODE GUDANG`,\n      },\n      {\n        content: `NAMA BARANG`,\n      },\n      {\n        content: `BERAT`,\n      },\n      {\n        content: `NAMA ATRIBUTE`,\n      },\n      {\n        content: `BERAT ATRIBUTE`,\n      },\n      // {\n      //   content: `JUMLAH`,\n      // },\n    ],\n  ];\n\n  data.forEach((item, index) => {\n    // item.list_barang.forEach((barang, index) => {\n    let rows = [\n      // ++index,\n      {\n        content: `${++index}`,\n        styles: {\n          cellWidth : 10\n        },\n      },\n      // item.kode_barang,\n      item.kode_barcode,\n      item.kode_group,\n      item.kode_dept,\n      item.kode_intern,\n      item.kode_gudang,\n      item.nama_barang,\n      item.berat,\n      item.nama_atribut,\n      item.berat_atribut,\n      // item.stock_on_hand,\n     \n    ];\n    total_berat = total_berat + item.berat;\n    total_stock = total_stock + item.stock_on_hand;\n    total_berat_atribut = total_berat_atribut + item.berat_atribut;\n    tableRows.push(rows);\n  });\n  \n  // let footer = [\n  //   ``,\n  //   ``,\n  //   ``,\n  //   ``,\n  //   ``,\n  //   ``,\n  //   `${total_berat.toFixed(1)}`,\n  //   ``,\n  //   `${total_berat_atribut.toFixed(1)}`,\n  //   `${total_stock.toLocaleString('ID-id')}`,\n  // ];\n  let footer = [\n    {\n      content: `Total`,\n      colSpan: 7,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${total_berat.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: ``,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${total_berat_atribut.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n\n    // `${sub_qty}`,\n  ];\n  tableRows.push(footer);\n  let printed = [\n    {\n      colSpan: 6,\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    // foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      textColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n    },\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  // footRows = [];\n  // total_berat = 0;\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('ID-id')}`, 14, finalY + 22);\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN BARANG DETAIL.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default CetakLaporanDetailBarang;\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\n// import { getToday } from \"../../../../components/helpers/function\";\n// // Date Fns is used to format the dates we receive\n\n// // define a generatePDF function that accepts a tickets argument\n// const CetakLaporanDetailBarang = (data = \"\", username = \"\", kode_baki = \"\") => {\n//   const doc = new jsPDF(\"l\");\n//   doc.setFontSize(15);\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\n//   doc.setFontSize(10);\n//   doc.setProperties({\n//     title: \"LAPORAN  BARANG DETAIL\",\n//   });\n//   //row 1\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\n//   let tableRows = [];\n//   let finalY = 10;\n//   let footRows = [];\n//   let total = 0;\n//   let sub_qty = 0;\n//   let sub_brt = 0;\n//   let tableColumn = [\n//     \"NO\",\n//     \"KODE BARANG\",\n//     \"KODE BARCODE\",\n//     \"KODE INTERN\",\n//     \"KODE GUDANG\",\n//     \"NAMA BARANG\",\n//     \"BERAT\",\n//     \"NAMA ATRIBUTE\",\n//     \"BERAT ATRIBUTE\",\n//     \"JUMLAH\",\n//   ];\n\n//   // console.log(JSON.stringify(data));\n//   // localStorage.setItem('hasil',JSON.stringify(data));\n//   data.forEach((item, index) => {\n//     // item.list_barang.forEach((barang, index) => {\n//     let rows = [\n//       ++index,\n//       item.kode_barang,\n//       item.kode_barcode,\n//       item.kode_intern,\n//       item.kode_gudang,\n//       item.nama_barang,\n//       item.berat,\n//       item.nama_atribut,\n//       item.berat_atribut,\n//       item.stock_on_hand,\n//     ];\n//     total = index;\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\n//     sub_brt = sub_brt + parseFloat(item.berat);\n//     tableRows.push(rows);\n//     let footer = [\n//       \"\",\n//       \"\",\n//       \"\",\n//       \"\",\n//       \"Sub Total\",\n//       \"\",\n//       `${sub_brt.toFixed(3)}`,\n//       \"\",\n//       \"\",\n//       `${sub_qty}`,\n//     ];\n//     footRows.push(footer);\n//     doc.autoTable(tableColumn, tableRows, {\n//       startY: index === 0 ? 35 : finalY + 15,\n//         theme: \"plain\",\n//       foot: footRows,\n//       rowPageBreak: \"avoid\",\n//       pageBreak: \"avoid\",\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\n//       headStyles: {\n//         lineWidth: 0.02,\n//         lineColor: \"#000\",\n//         fillColor: [187, 187, 187],\n//       },\n//       // theme: \"\",\n//     });\n//     finalY = doc.lastAutoTable.finalY + 10;\n//     tableRows = [];\n//   });\n//   // let footer = [\n//   //   \"\",\n//   //   \"\",\n//   //   \"\",\n//   //   \"Total Barang : \",\n//   //   \"\" + parseFloat(total).toLocaleString(\"id-ID\"),\n//   // ];\n//   // tableRows.push(footer);\n\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\n\n//   // doc.autoPrint();\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\n//   var string = doc.output(\"datauristring\");\n//   var x = window.open();\n//   x.document.open();\n//   x.document.write(\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n//       string +\n//       \"></embed></body></html>\"\n//   );\n//   x.document.close();\n// };\n\n// export default CetakLaporanDetailBarang;\n","import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nclass LaporanDetailBarangExel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n    render() {\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Barang Detail\"\n          sheet=\"Laporan Barang Detail\"\n          buttonText=\"Export Exel\"\n        />\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\n        <thead>\n              <tr>\n                <th colSpan=\"9\" style={{textAlign : \"center\"}}> LAPORAN BARANG DETAIL </th>\n              </tr>\n              <tr>\n                <th> Kode Baki </th>\n                <th colSpan=\"9\" style={{textAlign : \"left\"}}> {this.props.kode_baki} </th>\n              </tr>\n            <tr >\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARANG</th> */}\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARCODE</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GROUP</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE JENIS</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE INTERN</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GUDANG</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BARANG</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA ATRIBUT</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ATRIBUT</th>\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\n            </tr>\n        </thead>\n            \n            <tbody>\n            {this.props.data.map((item, index) => (\n                    <tr key={index}>\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\n                        {/* <td> {item.kode_barang}</td> */}\n                        <td> {item.kode_barcode}</td>\n                        <td> {item.kode_group}</td>\n                        <td> {item.kode_dept}</td>\n                        <td> {item.kode_intern}</td>\n                        <td> {item.kode_gudang}</td>\n                        <td> {item.nama_barang}</td>\n                        <td> {item.berat}</td>\n                        <td> {item.nama_atribut}</td>\n                        <td> {item.berat_atribut}</td>\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\n                    </tr>\n             ))}\n            </tbody>\n                    \n            <tfoot>\n                <tr>\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"5\">  </th>    \n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}> {this.props.data.map(list => list.berat).reduce((a,b) => a+b,0)}   </th>    \n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}>  </th>    \n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"  }}> {this.props.data.map(list => list.berat_atribut).reduce((a,b) => a+b,0)}  </th>    \n                    {/* <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}> {this.props.data.map(list => list.stock_on_hand).reduce((a,b) => a+b,0)}  </th>     */}\n                </tr>\n            </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanDetailBarangExel;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  ReanderSelect,\n  SkeletonLoading,\n} from \"../../../../components/helpers/field\";\nimport { getDataBaki, getDataBakiByGudang, GetDataGroup, getDataGudang, getDataJenis } from \"../../../../actions/datamaster_action\";\nimport CetakLaporanDetailBarang from \"./pdf/CetakLaporanDetailBarang\";\nimport LaporanDetailBarangExel from \"./exel/LaporanDetailBarangExel\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  return {\n    databaki: state.datamaster.getDataBaki,\n    dataGroup : state.datamaster.GetDataGroup,\n    dataJenis : state.datamaster.getDataJenis,\n    dataGudang : state.datamaster.getDataGudang\n  };\n};\nclass HeadFilterLaporan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      list_baki: [\n        {\n          value : \"SEMUA\",\n          name : \"SEMUA\"\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(GetDataGroup());\n    this.props.dispatch(getDataJenis());\n    this.props.dispatch(getDataGudang());\n    this.props.dispatch(getDataBaki());\n  }\n  exportPdf() {\n    CetakLaporanDetailBarang(this.props.data, this.props.kode_baki);\n  }\n  render() {\n    console.log(this.props.dataJenis);\n    let databaki =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.databaki.forEach(list => {\n      let data = {\n        value: list.kode_baki,\n        name: list.kode_baki + \" - \" + list.nama_baki,\n      };\n      databaki.push(data)\n    });\n\n    let dataGroup =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.dataGroup.forEach(list => {\n      let data = {\n        value: list.kode_group,\n        name: list.kode_group + \" - \" + list.nama_group,\n      };\n      dataGroup.push(data)\n    });\n\n    let dataJenis =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.dataJenis.forEach(list => {\n      let data = {\n        value: list.kode_dept,\n        name: list.kode_dept + \" - \" + list.nama_dept,\n      };\n      dataJenis.push(data)\n    });\n\n    let dataGudang =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.dataGudang.forEach(list => {\n      let data = {\n        value: list.kode_gudang,\n        name: list.kode_gudang + \" - \" + list.nama_gudang,\n      };\n      dataGudang.push(data)\n    });\n    return (\n      <>\n        <form\n          onSubmit={(data) => this.props.handleSubmit(data)}\n          autoComplete=\"off\"\n          onKeyPress={(e) => {\n            e.key === \"Enter\" && e.preventDefault();\n          }}\n        >\n          <div className=\"row\">\n          <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Group\"\n                  name=\"kode_group\"\n                  options={dataGroup}\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Baki\" />\n              )}\n            </div>\n            <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Jenis\"\n                  name=\"kode_jenis\"\n                  options={dataJenis}\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Baki\" />\n              )}\n            </div>\n            <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Gudang\"\n                  name=\"kode_gudang\"\n                  options={dataGudang}\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\n                  onChange={(e) => {\n                      if(e !== \"ALL\"){\n                        this.props.dispatch(getDataBakiByGudang(e))\n                      } else {\n                        this.props.dispatch(getDataBaki())\n                      }\n                  }}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Baki\" />\n              )}\n            </div>\n            <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Kode Baki\"\n                  name=\"kode_baki\"\n                  options={databaki}\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Baki\" />\n              )}\n            </div>\n              <div className=\"col-lg-9\"></div>\n            <div className=\"col-3\">\n              <label> &nbsp; </label>\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.submitting}\n                type=\"submit\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Memfilter\n                  </>\n                ) : (\n                  \"Filter Laporan\"\n                )}\n              </button>\n            </div>\n            <div className=\"col-12\">\n              <Tabel\n                keyField=\"kode_barcode\"\n                data={this.props.data}\n                columns={this.props.columns}\n                empty={true}\n                textEmpty=\"Data Laporan Barang Detail Kosong\"\n              />\n            </div>\n            {this.props.export ? (\n              <>\n                <div className=\"col-lg-6\">\n                  <button\n                    onClick={() => this.exportPdf()}\n                    className=\"btn btn-warning btn-block\"\n                  >\n                    {\" \"}\n                    Export PDF{\" \"}\n                  </button>\n                </div>\n                <div className=\"col-lg-6\">\n                  <LaporanDetailBarangExel\n                    data={this.props.data}\n                    kode_baki={this.props.kode_baki}\n                  />\n                </div>\n              </>\n            ) : null}\n          </div>\n          {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n        </form>\n      </>\n    );\n  }\n}\n\nHeadFilterLaporan = reduxForm({\n  form: \"HeadFilterLaporan\",\n  enableReinitialize: true,\n})(HeadFilterLaporan);\nexport default connect(maptostate, null)(HeadFilterLaporan);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { localStoragedecryp } from \"../../../../components/helpers/function.jsx\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  NotifError,\n  ToastNotification,\n} from \"../../../../components/helpers/notification.jsx\";\n// import CetakLaporanDetailBarang from \"./CetakLaporanDetailBarang.jsx\";\n// import FormFilter from \"./FormFilter.jsx\";\nimport { getData } from \"../../../../config/axios.jsx\";\nimport HeadFilterLaporan from \"./HeadFilterLaporan.jsx\";\n// import LaporanDetailexel from \"./LaporanDetailExel.jsx\";\nconst maptostate = (state) => {\n  return {\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nclass FormDetailBarang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      export: false,\n      kode_baki: [],\n      LaporanBarangDetail: false,\n      columns: [\n        // {\n        //   dataField: \"kode_barang\",\n        //   text: \"Kode Barang \",\n        //   sort: true,\n        //   footerAttrs: {\n        //     colSpan: \"5\",\n        //   },\n        //   footer: (cell, row, num, index) => {\n        //     return (\n        //       <div>Total Barang : {this.state.LaporanBarangDetail.length || 0} </div>\n        //     );\n        //   },\n        // },\n        {\n          dataField: \"kode_barcode\",\n          text: \"Kode Barcode\",\n          footerAttrs: {\n            colSpan: \"4\",\n          },\n          footer: (cell, row, num, index) => {\n            return (\n              <div>Total Barang : {this.state.LaporanBarangDetail.length || 0} </div>\n            );\n          },\n        },\n        {\n          dataField: \"kode_group\",\n          text: \"Kode Group\",\n        },\n        {\n          dataField: \"kode_dept\",\n          text: \"Kode Jenis\",\n        },\n        {\n          dataField: \"kode_gudang\",\n          text: \"Kode Gudang\",\n        },\n        {\n          dataField: \"kode_toko\",\n          text: \"Kode Baki\",\n        },\n        {\n          dataField: \"nama_barang\",\n          text: \"Nama Barang\",\n        },\n        {\n          dataField: \"berat\",\n          text: \"Berat\",\n          formatter: (cell) => {\n            return cell.toFixed(3);\n          },\n          footer: (columnData) =>\n            columnData.reduce((acc, item) => acc + item, 0).toFixed(3),\n        },\n        // {\n        //   dataField: \"stock_on_hand\",\n        //   text: \"Jumlah\",\n        //   formatter: (cell) => {\n        //     return cell;\n        //   },\n        //   footer: (columnData) =>\n        //     columnData.reduce((acc, item) => acc + item, 0),\n        // },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    let data = JSON.parse(localStoragedecryp(\"userdata\"));\n    this.setState({ username: data.user_id });\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true, kode_toko: data.kode_baki });\n    // if (data.kode_baki === undefined) {\n    //   Swal.fire({\n    //     // title: 'Good Job',\n    //     text: \"Kode Baki Tidak Boleh Kosong\",\n    //     icon: \"info\",\n    //     position: \"top-center\",\n    //     timer: 2000,\n    //     width: \"300px\",\n    //     height: \"100px\",\n    //     confirmButtonText: \"OK\",\n    //     showConfirmButton: true,\n    //   });\n    //   //   this.props.dispatch(reset(\"FormFilter\"));\n    //   this.setState({ isLoading: false });\n    //   return false;\n    // }\n    //   console.log(data_post);\n\n    getData(`reportbarang/barangdetail?kode_gudang=${data.kode_gudang || \"ALL\"}&kode_toko=${data.kode_baki || \"ALL\"}&kode_jenis=${data.kode_jenis || \"ALL\"}&kode_group=${data.kode_group || \"ALL\"}`)\n      .then((res) => {\n        if (res.data.length === 0) {\n          this.setState({\n            export: false,\n            LaporanBarangDetail: [],\n          });\n          ToastNotification(\"info\", \"Laporan Barang Detail Tidak Tersedia\");\n        } else {\n          ToastNotification(\"success\", \"Laporan Barang Detail Tersedia\");\n          this.setState({\n            export: true,\n            kode_baki: data.kode_baki,\n            LaporanBarangDetail: res.data,\n          });\n        }\n      })\n      .then(() => {\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => this.errorHandling(error));\n  }\n  errorHandling(err) {\n    NotifError(err);\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Laporan Barang</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Laporan Barang Detail</li>\n        </ol>\n        <h1 className=\"page-header\">Laporan Barang Detail</h1>\n        <Panel>\n          <PanelHeader>Filter Laporan</PanelHeader>\n          <br />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <HeadFilterLaporan\n                  kode_baki={this.state.kode_baki}\n                  export={this.state.export}\n                  columns={this.state.columns}\n                  data={this.state.LaporanBarangDetail}\n                  isLoading={this.state.isLoading}\n                  onSubmit={(data) => this.handleSubmit(data)}\n                />\n              </div>\n        \n            </div>\n          </div>\n          <br />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nFormDetailBarang = reduxForm({\n  form: \"FormDetailBarang\",\n  enableReinitialize: true,\n})(FormDetailBarang);\nexport default connect(maptostate, null)(FormDetailBarang);\n"],"sourceRoot":""}