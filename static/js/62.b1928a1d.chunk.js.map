{"version":3,"sources":["Validasi/ValidasiLogin.jsx","pages/auth/FormLogin.jsx"],"names":["ValidasiLogin","value","errors","username","password","AppName","process","FormLogin","Component","[object Object]","args","super","this","state","render","react_default","a","createElement","scrollAnimation_min_default","animateIn","className","onSubmit","props","handleSubmit","autoComplete","Field","name","component","ReanderField","type","label","placeholder","isLoading","helpers_function","text","Fragment","Date","getFullYear","reduxForm","form","enableReinitialize","validate","connect"],"mappings":"wJAaiBA,MAbMC,IACnB,MAAMC,EAAS,GASf,OAPKD,EAAME,WACTD,EAAOC,SAAW,wBAEfF,EAAMG,WACTF,EAAOE,SAAW,wBAGbF,uCCFX,MAAMG,EAAUC,kBAEhB,MAAMC,UAAkBC,YAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KAChCC,MAAQ,GACRC,SACE,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAiBG,UAAU,WACzBJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,SADlB,IACkCf,GAElCU,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAEfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,QACEG,UAAU,kBACVC,SAAUT,KAAKU,MAAMC,aACrBC,aAAa,OAEbT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAEbL,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,UACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,WACNC,YAAY,sBAIhBhB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWC,IACXC,KAAK,WACLC,MAAM,WACNC,YAAY,sBAKhBhB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACZR,KAAKU,MAAMU,UACVjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEb,UAAU,mCACVc,KAAK,iBAGPnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACEpB,EAAAC,EAAAC,cAAA,UACEY,KAAK,SACLT,UAAU,oCAFZ,WAUNL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gCAAb,QACUf,EADV,sBACsC,KACnC,IAAI+B,MAAOC,cACZtB,EAAAC,EAAAC,cAAA,WAHF,eAedV,EAAY+B,YAAU,CACpBC,KAAM,YACNC,oBAAoB,EACpBC,SAAUzC,GAHAsC,CAIT/B,GACYmC,wBAAUnC","file":"static/js/62.b1928a1d.chunk.js","sourcesContent":["const ValidasiLogin = (value) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.username) {\r\n      errors.username = \"Username Harus Diisi\";\r\n    }\r\n    if (!value.password) {\r\n      errors.password = \"Password Harus Diisi\";\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiLogin;\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { ReanderField } from \"../../components/helpers/field\";\r\nimport ValidasiLogin from \"../../Validasi/ValidasiLogin\";\r\nimport ScrollAnimation from \"react-animate-on-scroll\";\r\nimport \"animate.css/animate.min.css\";\r\nimport LoadingButton from \"../../components/helpers/function\";\r\nconst AppName = process.env.REACT_APP_NAME;\r\n\r\nclass FormLogin extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <ScrollAnimation animateIn=\"flipInY\">\r\n        <div className=\"login-header\">\r\n          <div className=\"brand\">\r\n            <span className=\"logo\"></span> {AppName}\r\n          </div>\r\n          <div className=\"icon\">\r\n            <i className=\"fa fa-sign-in\"></i>\r\n          </div>\r\n          <div className=\"login-content\">\r\n            <form\r\n              className=\"margin-bottom-0\"\r\n              onSubmit={this.props.handleSubmit}\r\n              autoComplete=\"off\"\r\n            >\r\n              <div className=\"form-group m-b-15\">\r\n                {/* <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Email Address\" required /> */}\r\n                <Field\r\n                  name=\"user_id\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Username\"\r\n                  placeholder=\"Masukan Username\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group m-b-15\">\r\n                <Field\r\n                  name=\"password\"\r\n                  component={ReanderField}\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"Masukan Password\"\r\n                />\r\n                {/* <input type=\"password\" className=\"form-control form-control-lg\" placeholder=\"Password\" required /> */}\r\n              </div>\r\n              {/* <i className=\"fas fa-spinner fa-spin\"></i> */}\r\n              <div className=\"login-buttons\">\r\n                {this.props.isLoading ? (\r\n                  <LoadingButton\r\n                    className=\"btn btn-success btn-block btn-lg\"\r\n                    text=\"Sedang Login\"\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-success btn-block btn-lg\"\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <hr />\r\n              <p className=\"text-center text-grey-darker\">\r\n                &copy; {AppName} All Right Reserved{\" \"}\r\n                {new Date().getFullYear()}\r\n                <br />\r\n                V.1.17\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </ScrollAnimation>\r\n    );\r\n  }\r\n}\r\n\r\n// export default FormLogin;\r\nFormLogin = reduxForm({\r\n  form: \"FormLogin\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiLogin,\r\n})(FormLogin);\r\nexport default connect()(FormLogin);\r\n"],"sourceRoot":""}