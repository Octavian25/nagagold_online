{"version":3,"sources":["Validasi/ValidasiMasterKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/FormModalKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/MasterKodeTransaksi.jsx"],"names":["ValidasiMasterKodeTransaksi","value","event","errors","kode_transaksi","FormModalKodeTrransaksi","Component","[object Object]","args","super","this","state","aktif","componentDidMount","setTimeout","document","getElementById","focus","render","react_default","a","createElement","onSubmit","props","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","type","name","Field","tabIndex","id","component","ReanderField","label","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Fragment","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalKodeTransaksi","initialValues","kode_transaksi_lama","HapusDataKodeTransaksi","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getParamterTransaksi","DataTransaksi","modalDialog","React","constructor","isEdit","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","FormEditKodeTransaksi","dataKodeTransaksi","bind","data_edit","data_post","putData","ToastNotification","reset","catch","error","ErrorHandling","postData","showModal","showModalKodeTranaksi","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","title","size","content","FormModalKodeTransaksi"],"mappings":"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","file":"static/js/33.74e4212a.chunk.js","sourcesContent":["const ValidasiMasterKodeTransaksi = (value,event) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.kode_transaksi) {\n        errors.kode_transaksi = \"Kode Transaksi Tidak Boleh Kosong\";\n    }\n   \n    return errors;\n}\n\nexport default ValidasiMasterKodeTransaksi;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterKodeTransaksi from \"../../../Validasi/ValidasiMasterKodeTransaksi.jsx\";\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalKodeTransaksi !== null) {\n    return {\n      initialValues: {\n        kode_transaksi: state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\n        kode_transaksi_lama:\n          state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\n      },\n    };\n  }\n};\n\nclass FormModalKodeTrransaksi extends Component {\n  state = {\n    aktif: false,\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      document.getElementById(\"kode_transaksi\").focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        autoComplete=\"off\"\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n      >\n        <input type=\"hidden\" name=\"kode_transaksi_lama\" />\n        <Field\n          tabIndex=\"1\"\n          id=\"kode_transaksi\"\n          name=\"kode_transaksi\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Transaksi\"\n          placeholder=\"Masukan Kode Transaksi\"\n          onBlur={() => this.setState({ aktif: true })}\n        />\n        {/* <Select options={options} /> */}\n\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"2\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nFormModalKodeTrransaksi = reduxForm({\n  form: \"ModalKodeTrransaksi\",\n  enableReinitialize: true,\n  validate: ValidasiMasterKodeTransaksi,\n})(FormModalKodeTrransaksi);\nexport default connect(maptostate, null)(FormModalKodeTrransaksi);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport {\n  ShowModalKodeTransaksi,\n  showModal,\n  getParamterTransaksi,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { reset } from \"redux-form\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nimport FormModalKodeTransaksi from \"./FormModalKodeTransaksi.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    DataTransaksi: state.datamaster.getParamterTransaksi,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst HapusDataKodeTransaksi = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Transaksi \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"paratransaksi/delete/by-kode-transaksi/\" + params, {\n        data: {\n          kode_transaksi: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getParamterTransaksi())\n        );\n      });\n    }\n  });\n};\nclass MasterKodeTransaksi extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_transaksi\",\n          text: \"Kode Transaksi \",\n          sort: true,\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_transaksi: row.kode_transaksi,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.FormEditKodeTransaksi(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      HapusDataKodeTransaksi(\n                        row.kode_transaksi,\n                        this.props.dispatch\n                      )\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n      dataKodeTransaksi: [\n        {\n          kode_transaksi: \"Uang Makan\",\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getParamterTransaksi());\n  }\n\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    let data_edit = {\n      kode_transaksi: data.kode_transaksi,\n    };\n    let data_post = {\n      kode_transaksi: data.kode_transaksi,\n    };\n    this.state.isEdit\n      ? putData(\n          \"paratransaksi/edit/by-kode-transaksi/\" + data.kode_transaksi_lama,\n          data_edit\n        )\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\n          .then(() => {\n            this.props.dispatch(getParamterTransaksi());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\n          })\n          .catch((error) => this.ErrorHandling(error))\n      : postData(\"paratransaksi/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getParamterTransaksi());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"paratransaksi/reactive/by-kode-transaksi/\",\n              data.kode_transaksi,\n              data_post,\n              this.props.dispatch,\n              getParamterTransaksi(),\n              hideModal(),\n              \"ModalKodeTrransaksi\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n\n  FormEditKodeTransaksi(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalKodeTransaksi(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  showModalKodeTranaksi() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalKodeTransaksi(false));\n    this.setState({\n      isEdit: false,\n      isLoading: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Kode Transaksi</li>\n        </ol>\n        <h1 className=\"page-header\">Master Kode Transaksi </h1>\n        <Panel>\n          <PanelHeader>Master Kode Transaksi</PanelHeader>\n          <br />\n\n          {/* Master Kode Transaksi */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_transaksi\"\n              tambahData={true}\n              handleClick={() => this.showModalKodeTranaksi()}\n              exportCsv={true}\n              data={this.props.DataTransaksi}\n              columns={this.state.columns}\n              empty={this.props.DataTransaksi}\n              textEmpty=\"Data Jenis Kosong\"\n            />\n            {/* <ToolkitProvider\n              keyField=\"kode_transaksi\"\n              data={this.props.DataTransaksi || []}\n              columns={this.state.columns}\n              search\n              exportCSV={{\n                fileName: \"Export Master Kondisi Transaksi.csv\",\n              }}\n            >\n              {(props) => (\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <button\n                      onClick={() => this.showModalKodeTranaksi()}\n                      className=\"btn btn-primary\"\n                    >\n                      {\" \"}\n                      <i className=\"fa fa-plus\"></i>{\" \"}\n                    </button>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-right\">\n                      <SearchBar {...props.searchProps} />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"col-12\">\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <br />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                </div>\n              )}\n            </ToolkitProvider> */}\n          </div>\n          <br />\n          {/* End Master Kode Transaksi */}\n          <ModalGlobal\n            title={\n              this.state.isEdit\n                ? \"Edit Data Kode Transaksi\"\n                : \"Tambah Data Kode Transaksi\"\n            }\n            size=\"P\"\n            content={\n              <FormModalKodeTransaksi\n                isLoading={this.state.isLoading}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Kode Transaksi  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterKodeTransaksi);\n"],"sourceRoot":""}