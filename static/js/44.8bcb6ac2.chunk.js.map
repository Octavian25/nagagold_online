{"version":3,"sources":["pages/Laporan/LaporanKeuangan/Kas/pdf/CetakLaporanRekap.jsx","pages/Laporan/LaporanKeuangan/Kas/pdf/CetakLaporanKeuanganDetail.jsx","pages/Laporan/LaporanKeuangan/Kas/exel/LaporanKeaunagnRekap.jsx","pages/Laporan/LaporanKeuangan/Kas/exel/LaporanKeuanganDetail.jsx","pages/Laporan/LaporanKeuangan/Kas/LaporanKeuanganKas.jsx"],"names":["CetakLaporanRekap","data","username","tanggal","doc","jsPDF","tableRows","footRows","tableColumn","finalY","total_masuk","total_keluar","setFontSize","text","setProperties","title","concat","localStoragedecryp","length","JSON","parse","forEach","item","index","content","rows","parseInt","jumlah_in","toLocaleString","jumlah_out","push","footer","styles","fillColor","textColor","printed","user_id","getToday","colSpan","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","fontSize","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","CetakLaporanTerimaBarang","hasilku","deskripsi","split","hasilakhir","ia","kategori","LaporanKeaunagnRekap","Component","constructor","props","super","this","state","render","no","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","textAlign","backgroundColor","color","map","key","LaporanKeuanganDetail","e","hasil","undefined","verticalAlign","rowSpan","HeadLaporanKeuanganKas","lazy","__webpack_require__","then","bind","SearchBar","Search","LaporanKeuanganKas","isLoading","hidden","istypeRekap","LaporanKeuanganReakap","columnsdetail","dataField","formatter","csvFormatter","footerAttrs","headerClasses","parseFloat","columnData","reduce","acc","columnsrekap","handleSubmit","data_post","formatDate","moment","Date","tgl_awal","format","setState","tanggal_awal","type","postData","res","localStorageencryp","stringify","catch","error","NotifInfo","ToastNotification","componentDidMount","onChange","total_uang_keluar_detail","total_uang_masuk_detail","hasil_laporan_keuangan_detail","element","total_uang_keluar_rekap","total_uang_masuk_rekap","hasil_laporan_keuangan_rekap","react_router_dom","to","panel","onSubmit","react_bootstrap_table2_toolkit_lib_default","keyField","columns","search","exportCSV","fileName","toString","replace","searchProps","react_bootstrap_table_next_lib_default","Object","assign","pagination","paginationFactory","baseProps","onClick","exel_LaporanKeaunagnRekap","CetakLaporanKeuanganDetail","exel_LaporanKeuanganDetail","lib_default"],"mappings":"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","file":"static/js/44.8bcb6ac2.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanRekap = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_masuk = 0;\r\n  let total_keluar = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN KEUANGAN REKAP\", 14, 15);\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN KEUANGAN REKAP\",\r\n  });\r\n  doc.text(\r\n    `Tanggal : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tanggal\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  data.forEach((item, index) => {\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `UANG MASUK`,\r\n      },\r\n      {\r\n        content: `UANG KELUAR`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      ++index,\r\n      parseInt(item.jumlah_in).toLocaleString(\"ID-id\"),\r\n      parseInt(item.jumlah_out).toLocaleString(\"ID-id\"),\r\n    ];\r\n    total_masuk = total_masuk + item.jumlah_in;\r\n    total_keluar = total_keluar + item.jumlah_out;\r\n    tableRows.push(rows);\r\n  });\r\n\r\n  let footer = [\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content:  `${total_masuk.toLocaleString('ID-id')}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content:  `${total_keluar.toLocaleString('ID-id')}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n\r\n  ];\r\n  footRows.push(footer);\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 3,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  footRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`User                           : ${username}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN KEUANGAN REKAP.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN KEUANGAN REKAP</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanRekap;\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanRekap = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN KEUANGAN REKAP\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`TANGGAL : ${tanggal}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n// //   let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"UANG MASUK\",\r\n//     \"UANG KELUAR\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         parseInt(item.jumlah_in).toLocaleString(\"ID-id\"),\r\n//         parseInt(item.jumlah_out).toLocaleString(\"ID-id\"),\r\n//     ];\r\n//     // total = index;\r\n//       tableRows.push(rows);\r\n//       // console.log(tableRows);\r\n//     // });\r\n\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"id-ID\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n//   doc.autoTable(tableColumn, tableRows, {\r\n//     startY: 40\r\n//     // theme: \"\",\r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n// //   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Cetak Laporan Keuangan Rekap.pdf`);\r\n//   // var string = doc.output(\"datauristring\");\r\n//   // var embed = \"<div style='width: 100%; height: 100%'><embed style='margin:-10px; margin-bottom:-10px;min-height:100vh; margin-left:-10px' width='100%' height='100%' src='\" + string + \"'/></div>\";\r\n//   // var x = window.open();\r\n//   // x.document.open();\r\n//   // x.document.write(embed);\r\n//   // x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanRekap;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTerimaBarang = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_masuk = 0;\r\n  let total_keluar = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN KEUANGAN DETAIL\", 14, 15);\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN KEUANGAN DETAIL\",\r\n  });\r\n  doc.text(\r\n    `Tanggal : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tanggal\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  data.forEach((item, index) => {\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KATEGORI`,\r\n      },\r\n      {\r\n        content: `DESKRIPSI`,\r\n      },\r\n      {\r\n        content: `UANG MASUK`,\r\n      },\r\n      {\r\n        content: `UANG KELUAR`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let dataku = item.deskripsi;\r\n    let hasilku = dataku.split('<br/>');\r\n    let hasilakhir = \"\";\r\n    if (hasilku.length > 2) {\r\n      for (let ia = 1; ia < hasilku.length; ia++) {\r\n        if (hasilakhir === \"\") {\r\n          hasilakhir += hasilku[ia];\r\n        } else {\r\n        hasilakhir += `\\n` + hasilku[ia];\r\n        }\r\n      }\r\n    } else {\r\n      hasilakhir = hasilku[1]  \r\n    }\r\n    let rows = [\r\n      ++index,\r\n      item.kategori,\r\n      hasilakhir,\r\n      parseInt(item.jumlah_in).toLocaleString(\"ID-id\"),\r\n      parseInt(item.jumlah_out).toLocaleString(\"ID-id\"),\r\n    ];\r\n    total_masuk = total_masuk + item.jumlah_in;\r\n    total_keluar = total_keluar + item.jumlah_out;\r\n    tableRows.push(rows);\r\n \r\n    \r\n  });\r\n  let footer = [\r\n    {\r\n      content: ``,\r\n      colSpan: 3,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content:  `${total_masuk.toLocaleString('ID-id')}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content:  `${total_keluar.toLocaleString('ID-id')}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  \r\n  ];\r\n  footRows.push(footer);\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 5,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  footRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`User                           : ${username}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN KEUANGAN DETAIL.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN KEUANGAN DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTerimaBarang;\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTerimaBarang = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN KEUANGAN DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`TANGGAL : ${tanggal}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n//   // let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KATEGORI\",\r\n//     \"DESKRIPSI\",\r\n//     \"MASUK\",\r\n//     \"KELUAR\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         item.kategori,\r\n//         item.deskripsi,\r\n//         item.jumlah_in,\r\n//         item.jumlah_out,\r\n//     ];\r\n//     // total = index;\r\n//       tableRows.push(rows);\r\n//       // console.log(tableRows);\r\n//     // });\r\n    \r\n   \r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"id-ID\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n//   doc.autoTable(tableColumn, tableRows, {\r\n//     startY: 40\r\n//     // theme: \"\",\r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n//   // doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Laporan Keuangan Detail.pdf`);\r\n//   // var string = doc.output(\"datauristring\");\r\n//   // var embed = \"<div style='width: 100%; height: 100%'><embed style='margin:-10px; margin-bottom:-10px;min-height:100vh; margin-left:-10px' width='100%' height='100%' src='\" + string + \"'/></div>\";\r\n//   // var x = window.open();\r\n//   // x.document.open();\r\n//   // x.document.write(embed);\r\n//   // x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTerimaBarang;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass LaporanKeaunagnRekap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n\r\n    let total_masuk = 0;\r\n    let total_keluar = 0;\r\n      let no = 1;\r\n    this.props.data.forEach((item, index) => {\r\n        total_masuk = total_masuk + item.jumlah_in;\r\n        total_keluar = total_keluar + item.jumlah_out;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Keuangan Rekap\"\r\n          sheet=\"Laporan Keuangan Rekap\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"3\" style={{ textAlign: \"center\" }}>\r\n              {\" \"}\r\n              LAPORAN KEUANGAN REKAP{\" \"}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"3\"> Tanggal  </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"3\"> {localStoragedecryp('tgl_laporan').length === 0 ? null : JSON.parse(localStoragedecryp('tgl_laporan')).tanggal } </th>\r\n          </tr>\r\n          <tr>\r\n              <th colSpan=\"3\"></th>\r\n            </tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>No</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Uang Masuk</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Uang Keluar</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.data.map((item, index) => (\r\n            <tr key={index}>\r\n                <td> {no++}</td>\r\n                <td> {item.jumlah_in}</td>\r\n                <td> {item.jumlah_out}</td>\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n          <tfoot>\r\n          <tr>\r\n          <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }} > </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }}>{ total_masuk} </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>{total_keluar}</th>\r\n          </tr>\r\n          </tfoot>\r\n\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanKeaunagnRekap;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass LaporanKeuanganDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  deskripsi(e){\r\n    let hasil = e.split('<br/>');\r\n    return e === undefined ? \"-\" : <> {hasil[1]} <br/> {hasil[2]} </>;\r\n  }\r\n  render() {\r\n\r\n    let total_masuk = 0;\r\n    let total_keluar = 0;\r\n      let no = 1;\r\n        this.props.data.forEach((item, index) => {\r\n            total_masuk = total_masuk + item.jumlah_in;\r\n            total_keluar = total_keluar + item.jumlah_out;\r\n        });\r\n   \r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Keuangan Detail\"\r\n          sheet=\"Laporan Keuangan Detail\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"7\" style={{ textAlign: \"center\" }}>\r\n              {\" \"}\r\n              LAPORAN KEUANGAN DETAIL{\" \"}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"5\"> Tanggal  </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"5\"> {localStoragedecryp('tgl_laporan').length === 0 ? null : JSON.parse(localStoragedecryp('tgl_laporan')).tanggal} </th>\r\n          </tr>\r\n          <tr>\r\n              <th colSpan=\"5\"></th>\r\n            </tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>No</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Kategori</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Deskripsi</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Uang Masuk</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Uang Keluar</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            \r\n          {this.props.data.map((item, index) => (\r\n            <tr key={index} style={{verticalAlign:\"top\" }}>\r\n                <td style={{ textAlign:\"center\" }}> {no++}</td>\r\n                <td> {item.kategori}</td>\r\n                <td style={{ rowSpan: \"2\"}}> { this.deskripsi(item.deskripsi) }</td>\r\n                <td> {item.jumlah_in}</td>\r\n                <td> {item.jumlah_out}</td>\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n          <tfoot>\r\n          <tr>\r\n          <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }} > </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }} colSpan=\"2\"></th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }}>{ total_masuk} </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>{total_keluar}</th>\r\n          </tr>\r\n          </tfoot>\r\n\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanKeuanganDetail;\r\n","import React, { Component, lazy } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NotifInfo, ToastNotification } from \"../../../../components/helpers/notification\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../../components/panel/panel\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  // CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport { postData } from \"../../../../config/axios\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { formatDate, localStoragedecryp, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\r\nimport CetakLaporanRekap from \"./pdf/CetakLaporanRekap\";\r\nimport CetakLaporanKeuanganDetail from \"./pdf/CetakLaporanKeuanganDetail\";\r\n// import { disableButtonValidasi } from \"../../../../actions/hutang_action\";\r\nimport * as moment from \"moment-timezone\";\r\nimport LaporanKeaunagnRekap from \"./exel/LaporanKeaunagnRekap\";\r\nimport LaporanKeuanganDetail from \"./exel/LaporanKeuanganDetail\";\r\nconst HeadLaporanKeuanganKas = lazy(() => import(\"./HeadLaporanKeuanganKas\"));\r\n\r\n\r\nconst { SearchBar } = Search;\r\n// const { ExportCSVButton } = CSVExport;\r\n\r\nclass LaporanKeuanganKas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      hidden: false,\r\n      istypeRekap: false,\r\n      tanggal: false,\r\n      LaporanKeuanganDetail: [],\r\n      LaporanKeuanganReakap: [],\r\n      columnsdetail: [\r\n        {\r\n          dataField: \"kategori\",\r\n          text: \"Kategori\",\r\n          formatter: (data) => {\r\n            return data === undefined ? \"-\" : data;\r\n          },\r\n          csvFormatter: (data) => {\r\n            return data === undefined ? '-' : data;\r\n          },\r\n          footerAttrs: {\r\n            'colSpan': '2'\r\n          },\r\n          footer: \"Total\"\r\n        },\r\n        {\r\n          dataField: \"deskripsi\",\r\n          text: \"Deskripsi\",\r\n          formatter: (data) => {\r\n            // console.log(data);\r\n               // console.log(data);\r\n            let row = data;\r\n            let hasil = row.split('<br/>');\r\n            return data === undefined ? \"-\" : <> {hasil[1]} <br/> {hasil[2]} </>;\r\n          },\r\n          csvFormatter: (data) => {\r\n            return data === undefined ? '-' : data;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"jumlah_in\",\r\n          text: \"Uang Masuk\",\r\n          headerClasses: 'text-right',\r\n          formatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? 0 : parseFloat(data).toLocaleString(\"id-ID\")}</div>;\r\n          },\r\n          csvFormatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? '0' : data} </div>\r\n          },\r\n          footer: (columnData) =>\r\n          <div className=\"text-right\"> {parseInt(\r\n            columnData.reduce((acc, item) => acc + item, 0)\r\n          ).toLocaleString(\"id-ID\")} </div>\r\n        },\r\n        {\r\n          dataField: \"jumlah_out\",\r\n          text: \"Uang Keluar\",\r\n          headerClasses: 'text-right',\r\n          formatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? 0 : parseFloat(data).toLocaleString(\"id-ID\")}</div>;\r\n          },\r\n          csvFormatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? '0' : data} </div>\r\n          },\r\n          footer: (columnData) =>\r\n          <div className=\"text-right\"> {parseInt(\r\n            columnData.reduce((acc, item) => acc + item, 0)\r\n          ).toLocaleString(\"id-ID\")} </div>\r\n        },\r\n      ],\r\n      columnsrekap: [\r\n        {\r\n          dataField: \"_id\",\r\n          text: \"Kategori\",\r\n          footer: 'Total',\r\n        },\r\n        {\r\n          dataField: \"jumlah_in\",\r\n          text: \"Uang Masuk\",\r\n          headerClasses: 'text-right',\r\n          formatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? 0 : parseFloat(data).toLocaleString(\"id-ID\")}</div>;\r\n          },\r\n          csvFormatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? '0' : data} </div>\r\n          },\r\n          footer: (columnData) =>\r\n          <div className=\"text-right\"> {parseInt(\r\n            columnData.reduce((acc, item) => acc + item, 0)\r\n          ).toLocaleString(\"id-ID\")} </div>\r\n        },\r\n        {\r\n          dataField: \"jumlah_out\",\r\n          text: \"Uang Keluar\",\r\n          headerClasses: 'text-right',\r\n          formatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? 0 : parseFloat(data).toLocaleString(\"id-ID\")}</div>;\r\n          },\r\n          csvFormatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined || null ? '0' : data} </div>\r\n          },\r\n          footer: (columnData) =>\r\n          <div className=\"text-right\"> {parseInt(\r\n            columnData.reduce((acc, item) => acc + item, 0)\r\n          ).toLocaleString(\"id-ID\")} </div>\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tanggal : formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\r\n    };\r\n    this.setState({ tanggal: data.tanggal_awal });\r\n    this.setState({ isLoading: true });\r\n    if (data.type === \"detail\") {\r\n      postData(\"reportcash/detail\", data_post)\r\n        .then((res) => {\r\n         localStorageencryp('tgl_laporan',JSON.stringify(data_post))\r\n          this.setState({ LaporanKeuanganDetail: res.data });\r\n        })\r\n        .then(() => {\r\n          this.setState({ isLoading: false });\r\n        })\r\n        .catch((error) => NotifInfo(error));\r\n    }\r\n\r\n    if (data.type === \"rekap\") {\r\n      postData(\"reportcash/rekap\", data_post)\r\n        .then((res) => {\r\n          if (res.data.length === 0) {\r\n            ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n          } else {\r\n            this.setState({\r\n              LaporanKeuanganReakap: res.data,\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.setState({ isLoading: false });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ isLoading: false });\r\n          ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let data = JSON.parse(localStoragedecryp(\"userdata\"));\r\n    this.setState({ username: data.user_id });\r\n  }\r\n  onChange(e) {\r\n    if (e.type === \"rekap\") {\r\n      this.setState({ istypeRekap: true });\r\n      this.setState({ LaporanKeuanganDetail: [] });\r\n    } else {\r\n      this.setState({ LaporanKeuanganReakap: [] });\r\n      this.setState({ istypeRekap: false });\r\n    }\r\n  }\r\n  render() {\r\n    let total_uang_keluar_detail = 0;\r\n    let total_uang_masuk_detail = 0;\r\n    let hasil_laporan_keuangan_detail = 0;\r\n    if (this.state.LaporanKeuanganDetail.length === 0) {\r\n      // null\r\n    }else{\r\n      this.state.LaporanKeuanganDetail.forEach(element => {\r\n        total_uang_keluar_detail = total_uang_keluar_detail + element.jumlah_out;\r\n        total_uang_masuk_detail = total_uang_masuk_detail + element.jumlah_in;\r\n      });\r\n      hasil_laporan_keuangan_detail = parseInt(total_uang_masuk_detail) - parseInt(total_uang_keluar_detail);\r\n    }\r\n\r\n    let total_uang_keluar_rekap = 0;\r\n    let total_uang_masuk_rekap = 0;\r\n    let hasil_laporan_keuangan_rekap = 0;\r\n    if (this.state.LaporanKeuanganReakap.length === 0) {\r\n      // null\r\n    }else{\r\n      this.state.LaporanKeuanganReakap.forEach(element => {\r\n        total_uang_keluar_rekap = total_uang_keluar_rekap + element.jumlah_out;\r\n        total_uang_masuk_rekap = total_uang_masuk_rekap + element.jumlah_in;\r\n      });\r\n      hasil_laporan_keuangan_rekap = parseInt(total_uang_masuk_rekap) - parseInt(total_uang_keluar_rekap);\r\n    }\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Keuangan</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Keuangan </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Keuangan</PanelHeader>\r\n          <PanelBody>\r\n            {/* {console.log(this.state.hidden)} */}\r\n            <HeadLaporanKeuanganKas\r\n              onChange={(data) => this.onChange(data)}\r\n              isLoading={this.state.isLoading}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n        <Panel>\r\n          <PanelHeader>Laporan Keuangan</PanelHeader>\r\n          <br />\r\n          {/* Laporan Keuangan */}\r\n          <div className=\"container\">\r\n            {this.state.isLoading === false ? (\r\n              <ToolkitProvider\r\n                keyField=\"deskripsi\"\r\n                data={\r\n                  this.state.istypeRekap === true\r\n                    ? this.state.LaporanKeuanganReakap || []\r\n                    : this.state.LaporanKeuanganDetail || []\r\n                }\r\n                columns={\r\n                  this.state.istypeRekap === true\r\n                    ? this.state.columnsrekap\r\n                    : this.state.columnsdetail\r\n                }\r\n                search\r\n                exportCSV={{\r\n                  fileName: this.state.istypeRekap\r\n                    ? \"Laporan Rekap Keuangan.csv\"\r\n                    : \"Laporan Detail Keuangan.csv\",\r\n                }}\r\n              >\r\n                {(props) => (\r\n                  <div className=\"row\">\r\n                    {this.state.LaporanKeuanganReakap.length === 0 ? null : (\r\n                      <>\r\n                        {this.state.LaporanKeuanganReakap ? (\r\n                          <>\r\n                            <div className=\"col-6\">\r\n                            <h3>Saldo Akhir : {hasil_laporan_keuangan_rekap.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h3>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar {...props.searchProps} />\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        ) : null}\r\n                      </>\r\n                    )}\r\n\r\n                    {this.state.LaporanKeuanganDetail.length === 0 ? null : (\r\n                      <>\r\n                        {this.state.LaporanKeuanganDetail ? (\r\n                          <>\r\n                            <div className=\"col-6\">\r\n                            <h3> Saldo Akhir : {hasil_laporan_keuangan_detail.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </h3>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar {...props.searchProps} />\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        ) : null}\r\n                      </>\r\n                    )}\r\n                    <hr />\r\n                    <div className=\"col-12\">\r\n                      <BootstrapTable\r\n                        pagination={paginationFactory()}\r\n                        {...props.baseProps}\r\n                      />\r\n                      <br />\r\n                    </div>\r\n                    {this.state.LaporanKeuanganReakap.length === 0 ? null : (\r\n                      <>\r\n                        {this.state.LaporanKeuanganReakap ? (\r\n                          <>\r\n                            <div className=\"col-6\">\r\n                            <button\r\n                                className=\"btn btn-warning btn-block\"\r\n                                onClick={() =>\r\n                                  CetakLaporanRekap(\r\n                                    this.state.LaporanKeuanganReakap,\r\n                                    this.state.username,\r\n                                    this.state.tanggal\r\n                                  )\r\n                                }\r\n                              >\r\n                               Export PDF\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                            <LaporanKeaunagnRekap data={ this.state.LaporanKeuanganReakap} />\r\n                                \r\n                            </div>\r\n                          </>\r\n                        ) : null}\r\n                      </>\r\n                    )}\r\n                    {this.state.LaporanKeuanganDetail.length === 0 ? null : (\r\n                      <>\r\n                        {this.state.LaporanKeuanganDetail ? (\r\n                          <>\r\n                            <div className=\"col-6\">\r\n                            <button\r\n                                className=\"btn btn-warning btn-block\"\r\n                                onClick={() =>\r\n                                  CetakLaporanKeuanganDetail(\r\n                                    this.state.LaporanKeuanganDetail,\r\n                                    this.state.username,\r\n                                    this.state.tanggal\r\n                                  )\r\n                                }\r\n                              >\r\n                               Export PDF\r\n                              </button>\r\n                             \r\n                              \r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                             <LaporanKeuanganDetail data={ this.state.LaporanKeuanganDetail} />\r\n                              &nbsp;\r\n                            </div>\r\n                          </>\r\n                        ) : null}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={200} />\r\n            )}\r\n          </div>\r\n          <br />\r\n\r\n          {/* End Tambah Master Baki  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanKeuanganKas;\r\n"],"sourceRoot":""}