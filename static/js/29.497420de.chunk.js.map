{"version":3,"sources":["Validasi/ValidasiMasterGroup.jsx","pages/DataMaster/DataGroup/FormDataGroup.jsx","pages/DataMaster/DataGroup/MasterGroup.jsx"],"names":["ValidasiMasterGroup","value","event","errors","kode_group","nama_group","harga","persentase","currencyMask","createNumberMask","prefix","locale","FormDataGroup","Component","constructor","props","super","this","state","aktif","componentDidMount","setTimeout","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Field","tabIndex","id","name","component","ReanderField","type","label","readOnly","placeholder","Object","assign","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Fragment","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalGroup","initialValues","hapusDataGroup","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","GetDataGroup","DataGroup","modalDialog","React","columns","dataField","text","sort","formatter","cell","parseFloat","toLocaleString","csvExport","headerClasses","rowcontent","row","dataEdit","toFixed","formEditDataGroup","bind","setState","data_edit","data_post","putData","ToastNotification","reset","catch","error","ErrorHandling","postData","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","title","content","DataGroup_FormDataGroup"],"mappings":"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","file":"static/js/29.497420de.chunk.js","sourcesContent":["const ValidasiMasterGroup = (value, event) => {\n  const errors = {};\n  // console.log(event.charCode==13);\n  if (!value.kode_group) {\n    errors.kode_group = \"Kode Group Tidak Boleh Kosong\";\n  }\n  if (!value.nama_group) {\n    errors.nama_group = \"Nama Group Tidak Boleh Kosong\";\n  }\n  if (!value.harga) {\n    errors.harga = \"Harga Tidak Boleh Kosong\";\n  }\n  if (!value.persentase) {\n    errors.persentase = \"Persentase Tidak Boleh Kosong\";\n  }\n\n  return errors;\n};\n\nexport default ValidasiMasterGroup;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { createNumberMask } from \"redux-form-input-masks\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterGroup from \"../../../Validasi/ValidasiMasterGroup\";\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalGroup !== null) {\n    return {\n      initialValues: {\n        kode_group: state.datamaster.ShowModalGroup.kode_group,\n        nama_group: state.datamaster.ShowModalGroup.nama_group,\n        harga: state.datamaster.ShowModalGroup.harga,\n        persentase: state.datamaster.ShowModalGroup.persentase,\n      },\n    };\n  }\n};\nconst currencyMask = createNumberMask({\n  prefix: \"Rp. \",\n  locale: \"id-ID\",\n});\nclass FormDataGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aktif: false,\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.props.isEdit) {\n        document.getElementById(\"nama_group\").focus();\n      } else {\n        document.getElementById(\"kode_group\").focus();\n      }\n    }, 100);\n  }\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\n        <Field\n          tabIndex=\"1\"\n          id=\"kode_group\"\n          name=\"kode_group\"\n          component={ReanderField}\n          type=\"text\"\n          label=\" Kode Group\"\n          readOnly={this.props.isEdit}\n          placeholder=\"Masukan Kode Group\"\n        />\n        <Field\n          tabIndex=\"2\"\n          id=\"nama_group\"\n          name=\"nama_group\"\n          component={ReanderField}\n          type=\"text\"\n          label=\" Nama Group\"\n          placeholder=\"Masukan Nama Group\"\n        />\n        <Field\n          tabIndex=\"3\"\n          name=\"harga\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Harga\"\n          {...currencyMask}\n          placeholder=\"Masukan Harga\"\n        />\n        {/* <Field\n          className=\"d-none\"\n          tabIndex=\"4\"\n          name=\"persentase\"\n          component={Gramasi}\n          type=\"text\"\n          label=\"Persentase\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Persentase\"\n        /> */}\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"5\"\n              className={\n                this.state.aktif ? \"btn btn-success\" : \"btn btn-primary\"\n              }\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nFormDataGroup = reduxForm({\n  form: \"ModalFormDataGroup\",\n  enableReinitialize: true,\n  validate: ValidasiMasterGroup,\n})(FormDataGroup);\nexport default connect(maptostate, null)(FormDataGroup);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport {\n  ShowModalGroup,\n  showModal,\n  hideModal,\n  GetDataGroup,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { reset } from \"redux-form\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport FormDataGroup from \"./FormDataGroup.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    DataGroup: state.datamaster.GetDataGroup,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\nconst hapusDataGroup = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Group \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"group/delete/by-kode-group/\" + params, {\n        data: {\n          kode_group: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(GetDataGroup())\n        );\n      });\n    }\n  });\n};\nclass MasterGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      isLoading: false,\n      modalDialog: false,\n      columns: [\n        {\n          dataField: \"kode_group\",\n          text: \"Kode Group\",\n          sort: true,\n        },\n        {\n          dataField: \"nama_group\",\n          text: \"Nama Group\",\n        },\n        {\n          dataField: \"harga\",\n          text: \"Harga\",\n          formatter: (cell) => {\n            return <span>{parseFloat(cell).toLocaleString(\"ID-id\")}</span>;\n          },\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_group: row.kode_group,\n              nama_group: row.nama_group,\n              persentase: row.persentase.toFixed(1),\n              harga: row.harga,\n            };\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditDataGroup(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataGroup(row.kode_group, this.props.dispatch)\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(GetDataGroup());\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    let data_edit = {\n      nama_group: data.nama_group,\n      harga: data.harga,\n      persentase: 0,\n    };\n    let data_post = {\n      kode_group: data.kode_group,\n      nama_group: data.nama_group,\n      harga: data.harga,\n      persentase: 0,\n    };\n    this.state.isEdit\n      ? putData(\"group/edit/by-kode-group/\" + data.kode_group, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Diupdate\");\n          })\n          .then(() => {\n            this.props.dispatch(GetDataGroup());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalFormDataGroup\"));\n          })\n          .catch((error) => this.ErrorHandling(error))\n      : postData(\"group/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(GetDataGroup());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalFormDataGroup\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"group/reactive/by-kode-group/\",\n              data.kode_group,\n              data_post,\n              this.props.dispatch,\n              GetDataGroup(),\n              hideModal(),\n              \"ModalFormDataGroup\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n\n  formEditDataGroup(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalGroup(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalGroup() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalGroup(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Group</li>\n        </ol>\n        <h1 className=\"page-header\">Master Group </h1>\n        <Panel>\n          <PanelHeader>Master Group</PanelHeader>\n          <br />\n\n          {/* Master Group */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_group\"\n              tambahData={true}\n              handleClick={() => this.ShowModalGroup()}\n              exportCsv={true}\n              data={this.props.DataGroup}\n              columns={this.state.columns}\n              empty={this.props.DataGroup}\n              textEmpty=\"Data Group Kosong\"\n            />\n          </div>\n          <br />\n          {/* End Master Pinjaman */}\n          <ModalGlobal\n            size=\"P\"\n            title={\n              this.state.isEdit\n                ? \"Edit Data Data Group\"\n                : \"Tambah Data Data Group\"\n            }\n            content={\n              <FormDataGroup\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Group  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterGroup);\n"],"sourceRoot":""}