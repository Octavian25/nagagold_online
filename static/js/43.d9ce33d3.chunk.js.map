{"version":3,"sources":["pages/Laporan/LaporanBarang/LaporanTerimaBarang/exel/LaporanTerimaBarangExel.jsx","pages/Laporan/LaporanBarang/LaporanTerimaBarang/pdf/LaporanTerimaBarangPdf.jsx","pages/Laporan/LaporanBarang/LaporanTerimaBarang/HeadLaporanTerimaBarang.jsx","pages/Laporan/LaporanBarang/LaporanTerimaBarang/FormLaporanTerimaBarang.jsx"],"names":["LaporanTerimaBarangExel","Component","constructor","props","super","this","state","render","stock_on_hand","berat","berat_atribut","total_barang","data","forEach","barang","index","detail","item","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","backgroundColor","color","map","no","row","textAlign","tgl_terima","kode_barang","kode_barcode","kode_intern","nama_barang","kode_gudang","kode_toko","nama_atribut","toFixed","LaporanTerimaBarangPdf","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","finalY","grandtotalqty","grantotalberat","grantotalberatatr","setFontSize","text","setProperties","title","concat","i","sub_qty","sub_berat","rows","content","halign","push","parseFloat","footer","styles","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadLaporanTerimaBarang","date","Date","handleSubmit","bind","setStartDate","setLastDate","console","log","exportPdf","dataterimabarang","setState","databarang","element","columns","dataField","footerAttrs","cell","num","formatter","onSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","export","value","isLoading","tabel","keyField","empty","textEmpty","onClick","exel_LaporanTerimaBarangExel","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","FormLaporanTerimaBarang","React","isEdit","modalDialog","data_post","formatDate","moment","format","postData","then","res","ToastNotification","localStorageencryp","stringify","catch","err","react_router_dom","to","panel","LaporanTerimaBarang_HeadLaporanTerimaBarang","hideModal","datamaster"],"mappings":"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","file":"static/js/43.d9ce33d3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTerimaBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    // const total = this.props.data.map((row) =>\r\n    // row.detail.map((key) => key.stock_on_hand).reduce((a, b) => a + b, 0)\r\n    // )\r\n\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Terima Barang\"\r\n          sheet=\"Laporan Terima Barang\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table\r\n          rowkey=\"kode_member\"\r\n          id=\"table-to-xls\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"10\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \"s/d\" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"></th>\r\n            </tr>\r\n            <tr>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                TANGGAL TERIMA\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE BARANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE BARCODE\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE INTERN\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE GUDANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE TOKO\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA ATRIBUT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT ATRIBUT\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, no) => (\r\n              <>\r\n                {/* <>\r\n                  <tr>\r\n                    <th style={{ textAlign: \"left\" }}> No Terima </th>\r\n                    <th colSpan=\"9\" style={{ textAlign: \"left\" }}>\r\n                      {\" \"}\r\n                      {item._id.no_terima}{\" \"}\r\n                    </th>\r\n                  </tr>\r\n                </> */}\r\n                {item.detail.map((row, index) => (\r\n                  <>\r\n                    <tr>\r\n                      <td style={{textAlign : \"center\"}}> {++no}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.tgl_terima}</td>\r\n                      <td> {row.kode_barang}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.kode_barcode}</td>\r\n                      <td> {row.kode_intern}</td>\r\n                      <td> {row.nama_barang}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.kode_gudang}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.kode_toko}</td>\r\n                      <td> {row.berat}</td>\r\n                      <td> {row.nama_atribut}</td>\r\n                      <td> {row.berat_atribut}</td>\r\n                    </tr>\r\n                  </>\r\n                ))}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th\r\n                colSpan=\"8\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Total{\" \"}\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>\r\n                {berat.toFixed(3)}\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"  }}>\r\n                {berat_atribut}\r\n              </th>\r\n            </tr>\r\n            {/* <tr>\r\n              <th\r\n                colSpan=\"10\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                Total Brang : {total_barang} Pcs\r\n                <br />\r\n                Total Berat : {berat.toFixed(3)} <br />\r\n                Total Berat Atribut : {berat_atribut}\r\n              </th>\r\n            </tr> */}\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTerimaBarangExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTerimaBarangPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 30;\r\n\r\n  let grandtotalqty = 0;\r\n  let grantotalberat = 0;\r\n  let grantotalberatatr = 0;\r\n  let total_barang = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TERIMA BARANG\", 14, 15);\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"Laporan Terima Barang\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let tableColumn = [\r\n    // [\r\n    //   {\r\n    //     content: `NO TERIMA : ${item._id.no_terima}`,\r\n    //     colSpan: 9,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `TANGGAL TERIMA`,\r\n      },\r\n      {\r\n        content: `KODE BARANG`,\r\n      },\r\n      {\r\n        content: `KODE BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE INTERN`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `KODE BAKI`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUTE`,\r\n      },\r\n      {\r\n        content: `BERAT ATRIBUTE`,\r\n      },\r\n      // {\r\n      //   content: `STOCK ON HAND`,\r\n      // },\r\n    ],\r\n  ];\r\n  let i = 1;\r\n  data.forEach((item, no) => {\r\n    let sub_qty = 0;\r\n    let berat_atribut = 0;\r\n    let sub_berat = 0;\r\n\r\n    // let data = [\r\n    //   {\r\n    //     content: `NO TERIMA : ${item._id.no_terima}`,\r\n    //     colSpan: \"9\",\r\n    //   },\r\n    // ];\r\n    // tableRows.push(data);\r\n    item.detail.forEach((barang, index) => {\r\n      let rows = [\r\n        i,\r\n        {\r\n          content: barang.tgl_terima,\r\n          style : {\r\n            halign : 'center'\r\n          }\r\n        },\r\n        barang.kode_barang,\r\n        barang.kode_barcode,\r\n        barang.kode_intern,\r\n        barang.nama_barang,\r\n        barang.kode_gudang,\r\n        barang.kode_toko,\r\n        barang.berat.toFixed(3),\r\n        barang.nama_atribut,\r\n        barang.berat_atribut.toFixed(3),\r\n        // barang.stock_on_hand,\r\n      ];\r\n      tableRows.push(rows);\r\n\r\n      sub_qty = sub_qty + parseFloat(barang.stock_on_hand);\r\n      berat_atribut = berat_atribut + parseFloat(barang.berat_atribut);\r\n      sub_berat = sub_berat + parseFloat(barang.berat);\r\n\r\n      grandtotalqty = grandtotalqty + parseFloat(barang.stock_on_hand);\r\n      grantotalberat = grantotalberat + parseFloat(barang.berat);\r\n      grantotalberatatr = grantotalberatatr + parseFloat(barang.berat_atribut);\r\n      ++i\r\n    });\r\n    total_barang = total_barang + item.detail.length;\r\n\r\n    // let total = [\r\n    //   {\r\n    //     content: `Total`,\r\n    //     colSpan: 7,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${sub_berat.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: ``,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${berat_atribut.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   // {\r\n    //   //   content: `Total`,\r\n    //   //   colSpan: 7,\r\n    //   // },\r\n    //   // `${sub_berat.toFixed(3)}`,\r\n    //   // \"\",\r\n    //   // `${berat_atribut.toFixed(3)}`,\r\n    //   // `${sub_qty}`,\r\n    // ];\r\n    // tableRows.push(total);\r\n  });\r\n\r\n  let footer = [\r\n    {\r\n      content: `Total `,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${grantotalberat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${grantotalberatatr.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    // {\r\n    //   content: `Total Barang : ${total_barang} Pcs\\nTotal Berat : ${grantotalberat.toFixed(\r\n    //     3\r\n    //   )}\\nTotal Berat Atribut : ${grantotalberatatr.toFixed(3)}`,\r\n    //   colSpan: 10,\r\n    //   styles: {\r\n    //     fillColor: \"#E8E5E5\",\r\n    //     textColor: \"#000\",\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    // bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    // footStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 10;\r\n  // tableRows = [];\r\n  // footRows = [];\r\n  // sub_qty = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(\r\n  //   `User \\t\\t\\t:  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak\\t\\t\\t: ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Grand Total Qty\\t: ${grandtotalqty}`, 14, finalY + 22);\r\n  // doc.text(\r\n  //   `Grand Total Berat     : ${grantotalberat.toFixed(3)}`,\r\n  //   14,\r\n  //   finalY + 28\r\n  // );\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>Laporan Terima Barang</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTerimaBarangPdf;\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTerimaBarang = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal_dari = \"\",\r\n//   tanggal_sampai = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN TERIMA BARANG\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`PERIODE : ${tanggal_dari} S/d ${tanggal_sampai}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n//   let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"GUDANG\",\r\n//     \"BAKI\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"NAMA BARANG\",\r\n//     \"JUMLAH\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         item.kode_gudang,\r\n//         item.kode_toko,\r\n//         item.kode_barang,\r\n//         item.kode_barcode,\r\n//         item.nama_barang,\r\n//         item.stock_on_hand,\r\n//         item.berat,\r\n//         item.nama_atribut,\r\n//         item.berat_atribut,\r\n//     ];\r\n//     total = index;\r\n//     tableRows.push(rows);\r\n\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: 40\r\n//     });\r\n\r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Laporan Terima Barang.pdf`);\r\n// };\r\n\r\n// export default CetakLaporanTerimaBarang;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\n// import Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanTerimaBarangExel from \"./exel/LaporanTerimaBarangExel\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport LaporanTerimaBarangPdf from \"./pdf/LaporanTerimaBarangPdf\";\r\n\r\nclass HeadLaporanTerimaBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n  }\r\n  exportPdf() {\r\n    LaporanTerimaBarangPdf(this.props.dataterimabarang);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    this.props.dataterimabarang.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat = berat + detail.berat\r\n      });\r\n    });\r\n    const columns = [\r\n  \r\n      {\r\n        dataField: \"tgl_terima\",\r\n        text: \"Tanggal Terima\",\r\n        footerAttrs: {\r\n          colSpan: \"4\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_barang\",\r\n        text: \"Kode Barang\",\r\n      },\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n      },\r\n\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        footer: (cell, row, num, index) => {\r\n          return <div>{berat.toFixed(3)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return cell.toFixed(3);\r\n        },\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n              // customInput={<CustomeInputDate />}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className={this.props.export ? \"col-lg-4  d-none\" : \"col-lg-4\"}>\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-4\" : \"col-lg-4 d-none\"}>\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_gudang\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Terima Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanTerimaBarangExel data={this.props.dataterimabarang} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanTerimaBarang = reduxForm({\r\n  form: \"HeadLaporanTerimaBarang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanTerimaBarang);\r\n// export default connect()(HeadLaporanTerimaBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanTerimaBarang);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../../../config/axios.jsx\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport HeadLaporanTerimaBarang from \"./HeadLaporanTerimaBarang.jsx\";\r\nimport { formatDate, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\r\nimport { ToastNotification } from \"../../../../components/helpers/notification.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\n\r\n// import ExportExel from \"./ExportExel.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormLaporanTerimaBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      dataterimabarang: [],\r\n      export: false,\r\n      \r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_post = {\r\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\r\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir)).format('YYYY-MM-DD')),\r\n    };\r\n    postData(\"terimabarang/get/report\", data_post)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Terima Barang Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          this.setState({\r\n            export: true,\r\n            isLoading: false,\r\n            dataterimabarang: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n        ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n      });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Terima Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Terima Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <HeadLaporanTerimaBarang\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n              dataterimabarang={this.state.dataterimabarang}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </div>\r\n          <br />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanTerimaBarang = reduxForm({\r\n  form: \"LaporanTerimaBarang\",\r\n  enableReinitialize: true,\r\n})(FormLaporanTerimaBarang);\r\nexport default connect(maptostate, null)(FormLaporanTerimaBarang);\r\n"],"sourceRoot":""}