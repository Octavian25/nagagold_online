{"version":3,"sources":["pages/Laporan/LaporanPembelian/LaporanPembelianBarang/exel/ExportTransaksiPembelianPdf.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarang/pdf/ExportTransaksiPembelian.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarang/HeadFormLaporanPembelianBarang.jsx","Validasi/LaporanKeuangan/ValidasiLaporanKeuangan.jsx"],"names":["ExportTransaksiPembelianPdf","Component","constructor","props","super","this","state","render","total_berat","total_berat_nota","total_harga_nota","total_harga","total_harga_rata","total_barang","data","forEach","barang","index","detail","item","parseFloat","berat","berat_nota","harga_nota","harga","harga_rata","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","backgroundColor","color","map","_id","pembayaran","header_detail","jenis","parseInt","jumlah_rp","toLocaleString","row","no_faktur_beli","kode_sales","kode_member","nama_customer","nama_barang","kode_dept","kondisi","textAlign","list","reduce","b","ExportTransaksiPembelian","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","tableColumn","finalY","setFontSize","text","setProperties","title","concat","content","tot_berat","tot_berat_nota","tot_harga_nota","tot_harga","tot_harga_rata","push","rows","toFixed","total","styles","halign","fillColor","textColor","grand","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanPembelianBarang","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanTransaksiPembelian","setState","databarang","ongkos","harga_gram","element","columns","dataField","footerAttrs","footer","cell","num","formatter","headerClasses","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_ExportTransaksiPembelianPdf","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiLaporanKeuangan","connect","initialValues","getTglSystem","event","errors","tanggal_awal","type_laporan"],"mappings":"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","file":"static/js/9.a06d73fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\nclass ExportTransaksiPembelianPdf extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let total_berat = 0;\n    let total_berat_nota = 0;\n    let total_harga_nota = 0;\n    let total_harga = 0;\n    let total_harga_rata = 0;\n    let total_barang = 0;\n\n    this.props.data.forEach((barang, index) => {\n      barang.detail.forEach((item, index) => {\n        total_berat = total_berat + parseFloat(item.berat);\n        total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\n        total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\n        total_harga = total_harga + parseFloat(item.harga);\n        total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\n      });\n      total_barang = total_barang + barang.detail.length;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Transaksi Pembelian\"\n          sheet=\"Laporan Transaksi Pembelian\"\n          buttonText=\"Export Exel\"\n        />\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\n          <thead>\n            <tr>\n              <th colSpan=\"12\"> Laporan Transaksi Pembelian </th>\n            </tr>\n            <tr>\n              <th colSpan=\"12\"> Periode </th>\n            </tr>\n            <tr>\n              <th colSpan=\"12\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"12\"></th>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NO BELI\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE SALES\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE MEMBER\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NAMA MEMBER\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NAMA BARANG\n              </td>\n              {/* <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NO HP\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                ALAMT CUSTOMER\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE GUDANG\n              </td> */}\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE DEPT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                BERAT NOTA\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                BERAT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                HARGA NOTA\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                HARGA BELI\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                HARGA RATA\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KONDISI\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((item, index) => (\n              <>\n                {item._id.pembayaran.map((header_detail, index) => (\n                  <>\n                    {/* <tr>\n                      <td\n                        style={{\n                          textAlign: \"center\",\n                         \n                        }}\n                      >\n                        No Faktur Group\n                      </td>\n                      <td colSpan=\"11\" style={{ border: \"1px solid #000\" }}>\n                        {\" \"}\n                        {header_detail.no_faktur_group}\n                      </td>\n                    </tr> */}\n                    <tr>\n                      <td colSpan=\"12\">\n                        {header_detail.jenis}{\" \"}\n                        {parseInt(header_detail.jumlah_rp).toLocaleString(\n                          \"ID-id\"\n                        )}\n                      </td>\n                    </tr>\n                  </>\n                ))}\n\n                {item.detail.map((row, index) => (\n                  <tr>\n                    <td>{row.no_faktur_beli}</td>\n                    <td>{row.kode_sales}</td>\n                    <td>{row.kode_member}</td>\n                    <td>{row.nama_customer}</td>\n                    <td>{row.nama_barang}</td>\n                    {/* <td style={{ whiteSpace: \"nowrap\" }}>{row.no_hp}</td>\n                    <td>{row.alamat_customer}</td>\n                    <td>{row.kode_gudang}</td> */}\n                    <td>{row.kode_dept}</td>\n                    <td>{row.berat_nota}</td>\n                    <td>{row.berat}</td>\n                    <td>{row.harga_nota}</td>\n                    <td>{row.harga}</td>\n                    <td>{row.harga_rata}</td>\n                    <td>{row.kondisi}</td>\n                  </tr>\n                ))}\n                <tr>\n                  <td\n                    colSpan=\"6\"\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n\n                      textAlign: \"center\",\n                    }}\n                  >\n                    Subtotal : {item.detail.length} Transaksi\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.berat_nota)\n                      .reduce((a, b) => a + b, 0)}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.berat)\n                      .reduce((a, b) => a + b, 0)}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.harga_nota)\n                      .reduce((a, b) => a + b, 0)}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.harga)\n                      .reduce((a, b) => a + b, 0)}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.harga_rata)\n                      .reduce((a, b) => a + b, 0)}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                    }}\n                  >\n                    {\" \"}\n                  </td>\n                </tr>\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                colSpan=\"6\"\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n\n                  textAlign: \"center\",\n                }}\n              >\n                Grand Total : {total_barang} Transaksi\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {total_berat_nota}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {total_berat}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {total_harga_nota}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {total_harga}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {total_harga_rata}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {\" \"}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default ExportTransaksiPembelianPdf;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { getToday, localStoragedecryp } from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst ExportTransaksiPembelian = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let tableColumn = []\n  let finalY = 30;\n \n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN TRANSAKSI PEMBELIAN\", 14, 15);\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN TRANSAKSI PEMBELIAN\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  let total_berat = 0;\n  let total_berat_nota = 0;\n  let total_harga_nota = 0;\n  let total_harga = 0;\n  let total_harga_rata = 0;\n  let total_barang = 0;\n  tableColumn = [\n    // [\n    //   {\n    //     content: `No Faktur Group : ${item._id.no_faktur_group} \\n${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"ID-id\")})`,\n    //     colSpan: 13,\n    //   },\n    // ],\n    [\n      {\n        content: `NO BELI`,\n      },\n      {\n        content: `KODE SALES`,\n      },\n      {\n        content: `KODE MEMNBER`,\n      },\n      {\n        content: `NAMA MEMBER`,\n      },\n      {\n        content: `NAMA BARANG`,\n      },\n      // {\n      //   content: `NO HP`,\n      // },\n      // {\n      //   content: `ALAMAT CUSTOMER`,\n      // },\n      // {\n      //   content: `KODE GUDANG`,\n      // },\n      {\n        content: `KODE DEPT`,\n      },\n      {\n        content: `BERAT NOTA`,\n      },\n      {\n        content: `BERAT`,\n      },\n      {\n        content: `HARGA NOTA`,\n      },\n      {\n        content: `HARGA BELI`,\n      },\n      {\n        content: `HARGA RATA`,\n      },\n      {\n        content: `KONDISI`,\n      },\n    ],\n    ];\n  data.forEach((item, index) => {\n    let tot_berat = 0;\n    let tot_berat_nota = 0;\n    let tot_harga_nota = 0;\n    let tot_harga = 0;\n    let tot_harga_rata = 0;\n  \n  \n    item._id.pembayaran.forEach((header_detail, index) => {\n    // console.log(item._id.pembayaran[0].jenis);\n      let pembayaran = [\n        {\n          content: `${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"ID-id\")})`,\n          colSpan: 13,\n        },\n      ]\n      tableRows.push(pembayaran)\n    });\n      \n    item.detail.forEach((item, index) => {\n      let rows = [\n        item.no_faktur_beli,\n        item.kode_sales,\n        item.kode_member,\n        item.nama_customer,\n        item.nama_barang,\n        // item.no_hp,\n        // item.alamat_customer,\n        // item.kode_gudang,\n        item.kode_dept,\n        item.berat_nota.toFixed(3),\n        item.berat.toFixed(3),\n        parseInt(item.harga_nota).toLocaleString(\"ID-id\"),\n        parseInt(item.harga).toLocaleString(\"ID-id\"),\n        parseInt(item.harga_rata).toLocaleString(\"ID-id\"),\n        item.kondisi,\n      ];\n      tot_berat = tot_berat + parseFloat(item.berat);\n      tot_berat_nota = tot_berat_nota + parseFloat(item.berat_nota);\n      tot_harga_nota = tot_harga_nota + parseFloat(item.harga_nota);\n      tot_harga = tot_harga + parseFloat(item.harga);\n      tot_harga_rata = tot_harga_rata + parseFloat(item.harga_rata);\n      \n      total_berat = total_berat + parseFloat(item.berat);\n      total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\n      total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\n      total_harga = total_harga + parseFloat(item.harga);\n      total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\n     \n      tableRows.push(rows);\n    });\n    total_barang = total_barang + item.detail.length;\n    let total = [\n      {\n        content: `Subtotal : ${item.detail.length} Transaksi`,\n        colSpan: 7,\n        styles: {\n          halign: 'center',\n          fillColor: \"#E8E5E5\",\n          textColor: \"#000\",\n        },\n      },\n      {\n        content:`${tot_berat_nota.toFixed(3)}`,\n        styles: {\n          fillColor: \"#E8E5E5\",\n          textColor: \"#000\",\n        },\n      },\n      {\n        content:`${tot_berat.toFixed(3)}`,\n        styles: {\n          fillColor: \"#E8E5E5\",\n          textColor: \"#000\",\n        },\n      },\n      {\n        content:`${parseInt(tot_harga_nota).toLocaleString(\"ID-id\")}`,\n        styles: {\n          fillColor: \"#E8E5E5\",\n          textColor: \"#000\",\n        },\n      },\n      {\n        content:`${parseInt(tot_harga).toLocaleString(\"ID-id\")}`,\n        styles: {\n          fillColor: \"#E8E5E5\",\n          textColor: \"#000\",\n        },\n      },\n      {\n        content:`${parseInt(tot_harga_rata).toLocaleString(\"ID-id\")}`,\n        styles: {\n          fillColor: \"#E8E5E5\",\n          textColor: \"#000\",\n        },\n      },\n      {\n        content:``,\n        styles: {\n          fillColor: \"#E8E5E5\",\n          textColor: \"#000\",\n        },\n      },\n    ];\n    tableRows.push(total);\n\n  });\n  let grand = [\n    {\n      content: `Grand Total : ${total_barang} Transaksi`,\n      colSpan: 7,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:`${total_berat_nota.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:`${total_berat.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:`${parseInt(total_harga_nota).toLocaleString(\"ID-id\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:`${parseInt(total_harga).toLocaleString(\"ID-id\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:`${parseInt(total_harga_rata).toLocaleString(\"ID-id\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:``,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n  ];\n  tableRows.push(grand);\n  let printed = [\n    {\n      colSpan:9,\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    foot: footRows,\n    startY:  finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n \n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  footRows = [];\n\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(`User                           : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN TRANSAKSI PEMBELIAN.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN TRANSAKSI PEMBELIAN</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default ExportTransaksiPembelian;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  InputDate,\n} from \"../../../../components/helpers/field\";\nimport { getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiLaporanKeuangan from \"../../../../Validasi/LaporanKeuangan/ValidasiLaporanKeuangan\";\nimport ExportTransaksiPembelianPdf from \"./exel/ExportTransaksiPembelianPdf\";\nimport ExportTransaksiPembelian from \"./pdf/ExportTransaksiPembelian\"\nimport Loading from 'react-fullscreen-loading';\nclass HeadFormLaporanPembelianBarang extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdf() {\n    ExportTransaksiPembelian(this.props.LaporanTransaksiPembelian);\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n  render() {\n    let databarang = [];\n    let berat = 0;\n    let ongkos = 0;\n    let harga = 0;\n    let harga_nota = 0;\n    let harga_gram = 0;\n    let berat_nota = 0;\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\n      element.detail.forEach((detail) => {\n        databarang.push(detail);\n        berat_nota = berat_nota + detail.berat_nota;\n        berat = berat + detail.berat;\n        ongkos = ongkos + detail.ongkos;\n        harga = harga + detail.harga;\n        harga_nota = harga_nota + detail.harga_nota;\n        harga_gram = harga_gram + detail.harga_gram;\n      });\n    });\n    const columns = [\n      {\n        dataField: \"no_faktur_beli\",\n        text: \"No FB\",\n        footerAttrs: {\n          colSpan: \"4\",\n        },\n        footer: (cell, row, num, index) => {\n          return <div>Total Transaksi : {databarang.length} </div>;\n        },\n      },\n      {\n        dataField: \"kode_sales\",\n        text: \"Kode Sales\",\n      },\n      {\n        dataField: \"kode_member\",\n        text: \"Kode Member\",\n      },\n      {\n        dataField: \"nama_customer\",\n        text: \"Nama Member\",\n      },\n      {\n        dataField: \"nama_barang\",\n        text: \"Nama Barang\",\n      },\n      \n     \n      {\n        dataField: \"berat_nota\",\n        text: \"Berat Nota\",\n        footer: (cell, row, num, index) => {\n          return <div>{berat_nota.toFixed(3)} </div>;\n        },\n        formatter: (cell) => {\n          return cell.toFixed(3);\n        },\n      },\n      {\n        dataField: \"berat\",\n        text: \"Berat\",\n        footer: (cell, row, num, index) => {\n          return <div>{berat.toFixed(3)} </div>;\n        },\n        formatter: (cell) => {\n          return cell.toFixed(3);\n        },\n      },\n      {\n        dataField: \"harga_nota\",\n        text: \"Harga Nota\",\n        headerClasses: \"text-right\",\n        footer: (cell, row, num, index) => {\n          return (\n            <div className=\"text-right\">{harga_nota.toLocaleString(\"ID-id\")} </div>\n          );\n        },\n        formatter: (cell) => {\n          return (\n            <div className=\"text-right\">{cell.toLocaleString(\"ID-id\")}</div>\n          );\n        },\n      },\n    \n      {\n        dataField: \"harga\",\n        text: \"Harga/Gram\",\n        headerClasses: \"text-right\",\n        footer: (cell, row, num, index) => {\n          return (\n            <div className=\"text-right\">\n              {harga.toLocaleString(\"ID-id\")}{\" \"}\n            </div>\n          );\n        },\n        formatter: (cell) => {\n          return (\n            <div className=\"text-right\">{cell.toLocaleString(\"ID-id\")}</div>\n          );\n        },\n      },\n      {\n        dataField: \"kondisi\",\n        text: \"Kondisi\",\n        footer : ''\n      },\n    ];\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n      <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <Field\n            name=\"tgl_awal\"\n            component={InputDate}\n            label=\"Tanggal Dari\"\n            type=\"text\"\n            selected={this.state.tgl_awal}\n            onChange={(date) => this.setStartDate(date)}\n            placeholder=\"Masukan Tanggal Dari\"\n          />\n        </div>\n\n        <div className=\"col-lg-4\">\n          <Field\n            name=\"tgl_akhir\"\n            component={InputDate}\n            type=\"text\"\n            selected={this.state.tgl_akhir}\n            onChange={(date) => this.setLastDate(date)}\n            label=\"Tanggal Akhir\"\n            placeholder=\"Masukan Tanggal Akhir\"\n          />\n        </div>\n\n        <div className=\"col-lg-4\">\n          <div className=\"text-right\">\n            <label>&nbsp;</label>\n            <button\n              type=\"submit\"\n              value=\"PDF\"\n              name=\"type_btn\"\n              className=\"btn btn-primary btn-block\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Mencari\n                </>\n              ) : (\n                \"Cari Laporan\"\n              )}\n            </button>\n          </div>\n          </div>\n          \n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"kode_barcode\"\n              data={this.props.export ? databarang : []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\n            />\n          </div>\n        <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <button\n                onClick={() => this.exportPdf()}\n                className=\"btn btn-warning btn-block\"\n              >\n                {\" \"}\n                Export PDF{\" \"}\n              </button>\n            </div>\n            <div className=\"col-lg-6\">\n              <ExportTransaksiPembelianPdf data={this.props.LaporanTransaksiPembelian} />\n            </div>\n          </div>\n        </div>\n      </div>\n      {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n    </form>\n    );\n  }\n}\n\nHeadFormLaporanPembelianBarang = reduxForm({\n  form: \"HeadFormLaporanPembelianBarang\",\n  enableReinitialize: true,\n  validate: ValidasiLaporanKeuangan,\n})(HeadFormLaporanPembelianBarang);\n// export default connect(null)(HeadFormLaporanPembelianBarang);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadFormLaporanPembelianBarang);\n","const ValidasiLaporanKeuangan = (value, event) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.tanggal_awal) {\n      errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\n    }\n    if (!value.type) {\n      errors.type = \"Type Tidak Boleh Kosong\";\n    }\n    if (!value.type_laporan) {\n      errors.type_laporan = \"Type Laporan Tidak Boleh Kosong\";\n    }\n    return errors;\n  };\n  \n  export default ValidasiLaporanKeuangan;\n  "],"sourceRoot":""}