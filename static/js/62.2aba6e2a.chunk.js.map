{"version":3,"sources":["Validasi/ValidasiLogin.jsx","pages/auth/FormLogin.jsx"],"names":["ValidasiLogin","value","errors","username","password","AppName","process","FormLogin","Component","[object Object]","args","super","this","state","render","react_default","a","createElement","scrollAnimation_min_default","animateIn","className","onSubmit","props","handleSubmit","autoComplete","Field","name","component","ReanderField","type","label","placeholder","isLoading","helpers_function","text","Fragment","Date","getFullYear","reduxForm","form","enableReinitialize","validate","connect"],"mappings":"uJAaiBA,MAbMC,IACnB,MAAMC,EAAS,GASf,OAPKD,EAAME,WACTD,EAAOC,SAAW,wBAEfF,EAAMG,WACTF,EAAOE,SAAW,wBAGbF,uCCFX,MAAMG,EAAUC,kBAEhB,MAAMC,UAAkBC,YAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KAChCC,MAAQ,GACRC,SACE,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAiBG,UAAU,WACzBJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,SADlB,IACkCf,GAElCU,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAEfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,QACEG,UAAU,kBACVC,SAAUT,KAAKU,MAAMC,aACrBC,aAAa,OAEbT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBAEbL,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,UACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,WACNC,YAAY,sBAIhBhB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWC,IACXC,KAAK,WACLC,MAAM,WACNC,YAAY,sBAKhBhB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACZR,KAAKU,MAAMU,UACVjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEb,UAAU,mCACVc,KAAK,iBAGPnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACEpB,EAAAC,EAAAC,cAAA,UACEY,KAAK,SACLT,UAAU,oCAFZ,WAUNL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gCAAb,QACUf,EADV,sBACsC,KACnC,IAAI+B,MAAOC,cACZtB,EAAAC,EAAAC,cAAA,WAHF,eAedV,EAAY+B,YAAU,CACpBC,KAAM,YACNC,oBAAoB,EACpBC,SAAUzC,GAHAsC,CAIT/B,GACYmC,wBAAUnC","file":"static/js/62.2aba6e2a.chunk.js","sourcesContent":["const ValidasiLogin = (value) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.username) {\n      errors.username = \"Username Harus Diisi\";\n    }\n    if (!value.password) {\n      errors.password = \"Password Harus Diisi\";\n    }\n  \n    return errors;\n  };\n  \n  export default ValidasiLogin;\n  ","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { ReanderField } from \"../../components/helpers/field\";\nimport ValidasiLogin from \"../../Validasi/ValidasiLogin\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport \"animate.css/animate.min.css\";\nimport LoadingButton from \"../../components/helpers/function\";\nconst AppName = process.env.REACT_APP_NAME;\n\nclass FormLogin extends Component {\n  state = {};\n  render() {\n    return (\n      <ScrollAnimation animateIn=\"flipInY\">\n        <div className=\"login-header\">\n          <div className=\"brand\">\n            <span className=\"logo\"></span> {AppName}\n          </div>\n          <div className=\"icon\">\n            <i className=\"fa fa-sign-in\"></i>\n          </div>\n          <div className=\"login-content\">\n            <form\n              className=\"margin-bottom-0\"\n              onSubmit={this.props.handleSubmit}\n              autoComplete=\"off\"\n            >\n              <div className=\"form-group m-b-15\">\n                {/* <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Email Address\" required /> */}\n                <Field\n                  name=\"user_id\"\n                  component={ReanderField}\n                  type=\"text\"\n                  label=\"Username\"\n                  placeholder=\"Masukan Username\"\n                />\n              </div>\n\n              <div className=\"form-group m-b-15\">\n                <Field\n                  name=\"password\"\n                  component={ReanderField}\n                  type=\"password\"\n                  label=\"Password\"\n                  placeholder=\"Masukan Password\"\n                />\n                {/* <input type=\"password\" className=\"form-control form-control-lg\" placeholder=\"Password\" required /> */}\n              </div>\n              {/* <i className=\"fas fa-spinner fa-spin\"></i> */}\n              <div className=\"login-buttons\">\n                {this.props.isLoading ? (\n                  <LoadingButton\n                    className=\"btn btn-success btn-block btn-lg\"\n                    text=\"Sedang Login\"\n                  />\n                ) : (\n                  <>\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-success btn-block btn-lg\"\n                    >\n                      Login\n                    </button>\n                  </>\n                )}\n              </div>\n\n              <hr />\n              <p className=\"text-center text-grey-darker\">\n                &copy; {AppName} All Right Reserved{\" \"}\n                {new Date().getFullYear()}\n                <br />\n                V.1.17\n              </p>\n            </form>\n          </div>\n        </div>\n      </ScrollAnimation>\n    );\n  }\n}\n\n// export default FormLogin;\nFormLogin = reduxForm({\n  form: \"FormLogin\",\n  enableReinitialize: true,\n  validate: ValidasiLogin,\n})(FormLogin);\nexport default connect()(FormLogin);\n"],"sourceRoot":""}