{"version":3,"sources":["pages/DataMaster/DataJenis/FormModalDataJenis.jsx","pages/DataMaster/DataJenis/MasterJenis.jsx","Validasi/ValidasiMasterJenis.jsx"],"names":["FormModalDataJenis","Component","constructor","props","super","this","state","listgroup","aktif","componentDidMount","getData","then","res","setState","data","catch","err","console","log","setTimeout","isEdit","document","getElementById","focus","setIndex","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","Field","onChange","tabIndex","id","label","name","options","filter","list","undefined","kode_group","map","value","nama_group","disabled","placeholder","component","ReanderSelect","ReanderField","type","readOnly","onBlur","onClick","dispatch","hideModal","isLoading","submitting","Fragment","reduxForm","form","enableReinitialize","validate","ValidasiMasterJenis","connect","datamaster","ShowModalJenis","initialValues","kode_dept","nama_dept","hapusDataJenis","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","NotifSucces","getDataJenis","DataJenis","modalDialog","React","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","fomrEditDataJenis","bind","title","data_edit","data_post","putData","ToastNotification","reset","error","ErrorHandling","postData","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","content","DataJenis_FormModalDataJenis","event","errors","kode_kategori","kode_jenis","nama_jenis"],"mappings":"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","file":"static/js/20.04eb6f72.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\n\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\nimport { getData } from \"../../../config/axios\";\nimport ValidasiMasterJenis from \"../../../Validasi/ValidasiMasterJenis.jsx\";\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalJenis !== null) {\n    return {\n      initialValues: {\n        // DataGroup: state.datamaster.GetDataGroup,\n        kode_group: state.datamaster.ShowModalJenis.kode_group,\n        kode_dept: state.datamaster.ShowModalJenis.kode_dept,\n        nama_dept: state.datamaster.ShowModalJenis.nama_dept,\n      },\n    };\n  }\n};\nclass FormModalDataJenis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listgroup: [],\n      aktif: false\n    };\n  }\n  componentDidMount() {\n    getData(\"group/get/all\")\n      .then((res) => {\n        this.setState({\n          listgroup: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setTimeout(() => {\n      if (this.props.isEdit) {\n        document.getElementById('nama_dept').focus()\n      } else {\n        document.getElementById('kode_group').focus()\n      }\n    }, 100);\n   \n  }\n  setIndex() {\n    document.getElementById('kode_dept').focus()\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"form-group\">\n          <Field\n            onChange={()=>this.setIndex()}\n            tabIndex=\"1\"\n            id=\"kode_group\"\n            label=\"Kode Group\"\n            name=\"kode_group\"\n            options={this.state.listgroup\n              .filter((list) => list.kode_group !== undefined)\n              .map((list) => {\n                let data = {\n                  value: list.kode_group,\n                  name: list.kode_group + \" - \" + list.nama_group,\n                };\n                return data;\n              })}\n            value={this.props.kode_group}\n            disabled={this.props.isEdit}\n            placeholder={\"Silahkan Pilih Kode Group\"}\n            component={ReanderSelect}\n          />\n        </div>\n        <Field\n          id=\"kode_dept\"\n          tabIndex=\"2\"\n          name=\"kode_dept\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Jenis\"\n          readOnly={this.props.isEdit}\n          placeholder=\"Masukan Kode Jenis\"\n        />\n        <Field\n          tabIndex=\"3\"\n          id=\"nama_dept\"\n          name=\"nama_dept\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Nama Jenis\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Nama Jenis\"\n        />\n\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"3\"\n              className={\n                this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"\n              }\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nFormModalDataJenis = reduxForm({\n  form: \"ModalDataJenis\",\n  enableReinitialize: true,\n  validate: ValidasiMasterJenis,\n})(FormModalDataJenis);\nexport default connect(maptostate, null)(FormModalDataJenis);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport {\n  ShowModalJenis,\n  showModal,\n  getDataJenis,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nimport FormModalDataJenis from \"./FormModalDataJenis.jsx\";\nconst maptostate = (state) => {\n  return {\n    DataJenis: state.datamaster.getDataJenis,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst hapusDataJenis = (params, dispatch) => {\n  Swal.fire({\n    // title: 'Anda Yakin !!',\n    // text: 'Ingin Menghapus Data Ini ?',\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Jenis \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"jenis/delete/by-kode-jenis/\" + params, {\n        data: {\n          kode_group: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getDataJenis())\n        );\n      });\n    }\n  });\n};\nclass MasterJenis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_group\",\n          text: \"Kode Group\",\n        },\n        {\n          dataField: \"kode_dept\",\n          text: \"Kode Dept \",\n          sort: true,\n        },\n        {\n          dataField: \"nama_dept\",\n          text: \"Nama Dept\",\n        },\n\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_dept: row.kode_dept,\n              nama_dept: row.nama_dept,\n              kode_group: row.kode_group,\n            };\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.fomrEditDataJenis(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    {\" \"}\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataJenis(row.kode_dept, this.props.dispatch)\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataJenis());\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    // console.log(data);\n    if (data.kode_dept === undefined) {\n      Swal.fire({\n        title: \"Oopss!! \",\n        text: \"Kode Group Harus Diisi !!!\",\n        icon: \"info\",\n      });\n      this.setState({ isLoading: false });\n      return false;\n    }\n    let data_edit = {\n      nama_dept: data.nama_dept,\n    };\n    let data_post = {\n      kode_dept: data.kode_dept,\n      nama_dept: data.nama_dept,\n      kode_group: data.kode_group,\n    };\n    this.state.isEdit\n      ? putData(\"jenis/edit/by-kode-jenis/\" + data.kode_dept, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataJenis());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalDataJenis\"));\n          })\n          .catch((error) => this.ErrorHandling(error))\n      : postData(\"jenis/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataJenis());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalDataJenis\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"jenis/reactive/by-kode-jenis/\",\n              data.kode_dept,\n              data_post,\n              this.props.dispatch,\n              getDataJenis(),\n              hideModal(),\n              \"ModalDataJenis\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n\n  fomrEditDataJenis(dataEdit) {\n    // console.log(dataEdit);\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalJenis(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalJenis() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalJenis(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Jenis</li>\n        </ol>\n        <h1 className=\"page-header\">Master Jenis </h1>\n        <Panel>\n          <PanelHeader>Master Jenis</PanelHeader>\n          <br />\n\n          {/* Master Jenis */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_dept\"\n              tambahData={true}\n              handleClick={() => this.ShowModalJenis()}\n              exportCsv={true}\n              data={this.props.DataJenis}\n              columns={this.state.columns}\n              empty={this.props.DataJenis}\n              textEmpty=\"Data Jenis Kosong\"\n            />\n          </div>\n          <br />\n          {/* End Master Jenis */}\n          <ModalGlobal\n            size=\"P\"\n            title={this.state.isEdit ? \"Edit Data Jenis\" : \"Tambah Data Jenis\"}\n            content={\n              <FormModalDataJenis\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Jenis  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterJenis);\n","const ValidasiMasterJenis = (value,event) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.kode_group) {\n        errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\n    }\n    if (!value.kode_jenis) {\n        errors.kode_jenis = \"Kode Jenis Tidak Boleh Kosong\";\n    }\n    if (!value.nama_jenis) {\n        errors.nama_jenis = \"Nama Jenis Tidak Boleh Kosong\";\n    }\n    // console.log(value.kode_group);\n   \n    return errors;\n}\n\nexport default ValidasiMasterJenis;"],"sourceRoot":""}