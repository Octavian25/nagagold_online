{"version":3,"sources":["Validasi/Barang/PindahBarangSatuBaki/ValidasiPindahBarangBaki.jsx","pages/Barang/PindahBarangSatuBaki/HeadPindahBarangSatuBaki.jsx","pages/Barang/PindahBarangSatuBaki/FormPindahBarangSatuBaki.jsx"],"names":["ValidasiPindahBarangBaki","value","errors","baki_asal","baki_tujuan","gudang_asal","gudang_tujuan","HeadPindahBarangSatuBaki","Component","constructor","props","super","this","state","date","Date","isLoadingBaki","isLoadingBatal","bakigudangtujuan","loadingpencarian","componentDidMount","dispatch","getDataGudang","getDataBaki","setTimeout","setState","change","filterLaporan","getData","then","res","data","length","ToastNotification","localStorage","setItem","JSON","stringify","setBarangPindahSatuBaki","catch","err","errorHandling","batalHancur","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","Field","label","name","onChange","options","datagudang","filter","list","undefined","kode_gudang","map","nama_gudang","placeholder","component","ReanderSelect","databaki","kode_baki","nama_baki","field","disabled","submitting","onClick","type","Fragment","tabel","keyField","exportCsv","parse","getItem","columns","empty","pagination","textEmpty","isLoading","reduxForm","form","enableReinitialize","validate","connect","datamaster","databarang","React","isEdit","modalDialog","dataField","text","footerAttrs","colSpan","footer","cell","row","num","index","formatter","toFixed","columnData","reduce","acc","item","bind","hapusdata","id","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","splice","hasil","kode_toko","kode_gudang_asal","kode_toko_asal","postData","reset","error","errorhandling","NotifError","response","react_router_dom","to","panel","PindahBarangSatuBaki_HeadPindahBarangSatuBaki"],"mappings":"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","file":"static/js/25.776f4153.chunk.js","sourcesContent":["const ValidasiPindahBarangBaki = (value) => {\n    const errors = {};\n    if (!value.baki_asal) {\n        errors.baki_asal = \"Baki Asal Tidak Boleh Kosong\";\n    }\n    if (!value.baki_tujuan) {\n        errors.baki_tujuan = \"Baki Tujuan Tidak Boleh Kosong\";\n    }\n    if (!value.gudang_asal) {\n        errors.gudang_asal = \"Gudang Asal Tidak Boleh Kosong\";\n    }\n    if (!value.gudang_tujuan) {\n        errors.gudang_tujuan = \"Gudang Tujuan Tidak Boleh Kosong\";\n    }\n\n    return errors;\n}\nexport default ValidasiPindahBarangBaki;\n\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { setBarangPindahSatuBaki } from \"../../../actions/databarang_action\";\nimport { getDataBaki, getDataGudang } from \"../../../actions/datamaster_action\";\nimport {\n  ReanderSelect,\n  SkeletonLoading,\n} from \"../../../components/helpers/field\";\nimport { ToastNotification } from \"../../../components/helpers/notification\";\nimport Tabel from \"../../../components/helpers/tabel\";\nimport { getData } from \"../../../config/axios\";\nimport ValidasiPindahBarangBaki from \"../../../Validasi/Barang/PindahBarangSatuBaki/ValidasiPindahBarangBaki\";\nconst maptostate = (state) => {\n  return {\n    datagudang: state.datamaster.getDataGudang,\n    databaki: state.datamaster.getDataBaki,\n    setBarangPindahSatuBaki: state.databarang.setBarangPindahSatuBaki,\n  };\n};\nclass HeadPindahBarangSatuBaki extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      isLoadingBaki: false,\n      isLoadingBatal: false,\n      bakigudangtujuan: false,\n      loadingpencarian: false,\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataGudang());\n    this.props.dispatch(getDataBaki());\n    setTimeout(() => {\n      // document.getElementById('kode_gudang').p\n      this.setState({ gudang_asal: 'TOKO' });\n      this.props.change('gudang_asal','TOKO')\n    }, 100);\n  }\n\n  filterLaporan() {\n    this.setState({ loadingpencarian: true });\n    this.setState({ bakigudangtujuan: true });\n    getData(\"barang/get/by-kode-baki/\" + this.state.baki_asal)\n      .then((res) => {\n        if (res.data.length === 0) {\n          this.setState({ loadingpencarian: false, bakigudangtujuan: false });\n          ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\n          localStorage.setItem(\"data_barang_satu_baki_tmp\", JSON.stringify([]));\n          this.props.dispatch(setBarangPindahSatuBaki([]));\n          // return false\n        } else {\n          localStorage.setItem(\"data_barang_satu_baki_tmp\", JSON.stringify([]));\n          localStorage.setItem(\n            \"data_barang_satu_baki_tmp\",\n            JSON.stringify(res.data)\n          );\n          this.props.dispatch(setBarangPindahSatuBaki(res.data));\n          this.setState({ loadingpencarian: false });\n        }\n      })\n      .catch((err) => {\n        this.setState({ bakigudangtujuan: false });\n        this.errorHandling(err);\n      });\n  }\n\n  errorHandling(err) {\n    this.setState({ loadingpencarian: false, bakigudangtujuan: false });\n    ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\n    localStorage.setItem(\"data_barang_satu_baki_tmp\", JSON.stringify([]));\n    this.props.dispatch(setBarangPindahSatuBaki([]));\n  }\n  batalHancur() {\n    this.setState({ isLoadingBatal: true })\n    setTimeout(() => {\n      this.props.dispatch(setBarangPindahSatuBaki([]));\n      localStorage.setItem('data_barang_satu_baki_tmp', JSON.stringify([]))\n      this.setState({ isLoadingBatal: false })\n    }, 500);\n  }\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\"\n      onKeyPress={(e) => {\n        e.key === \"Enter\" && e.preventDefault();\n      }}\n      >\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Field\n              label=\"Gudang Asal\"\n              name=\"gudang_asal\"\n              onChange={(e) => {\n                this.setState({\n                  gudang_asal: e,\n                  bakigudangtujuan: false,\n                });\n                this.props.change(\"baki_asal\", \"\");\n                this.props.dispatch(setBarangPindahSatuBaki([]));\n                localStorage.setItem(\n                  \"data_barang_satu_baki_tmp\",\n                  JSON.stringify([])\n                );\n              }}\n              options={this.props.datagudang\n                .filter((list) => list.kode_gudang !== undefined)\n                .map((list) => {\n                  let data = {\n                    value: list.kode_gudang,\n                    name: list.kode_gudang + \" - \" + list.nama_gudang,\n                  };\n                  return data;\n                })}\n              placeholder={\"Silahkan Pilih Gudang Asal\"}\n              component={ReanderSelect}\n            />\n          </div>\n          <div className=\"col-lg-4\">\n            {this.state.isLoadingBaki === false ? (\n              <Field\n                label=\"Baki Asal\"\n                name=\"baki_asal\"\n                onChange={(e) => {\n                  this.setState({ baki_asal: e });\n                }}\n                options={this.props.databaki\n                  .filter((list) => list.kode_gudang === this.state.gudang_asal)\n                  .map((databaki) => {\n                    let data = {\n                      value: databaki.kode_baki,\n                      name: databaki.kode_baki + \" - \" + databaki.nama_baki,\n                    };\n                    return data || [];\n                  })}\n                placeholder={\"Silahkan Pilih Baki Asal\"}\n                component={ReanderSelect}\n              />\n            ) : (\n              <SkeletonLoading label=\"Baki Asal\" />\n            )}\n          </div>\n          <div className=\"col-lg-4\">\n            <label> &nbsp; </label>\n            <button\n              className=\"btn btn-primary btn-block\"\n              disabled={this.submitting}\n              onClick={() => this.filterLaporan()}\n              type=\"button\"\n            >\n              {this.state.loadingpencarian ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Mencari Data\n                </>\n              ) : (\n                \"Cari Data\"\n              )}\n            </button>\n          </div>\n\n          {this.state.bakigudangtujuan === false ? null : (\n            <>\n              <div className=\"col-lg-6\">\n                <Field\n                  label=\"Gudang Tujuan\"\n                  name=\"gudang_tujuan\"\n                  onChange={(e) => {\n                    this.setState({ gudang_tujuan: e });\n                    this.props.change(\"baki_tujuan\", \"\");\n                  }}\n                  options={this.props.datagudang\n                    .filter((list) => list.kode_gudang !== undefined)\n                    .map((list) => {\n                      let data = {\n                        value: list.kode_gudang,\n                        name: list.kode_gudang + \" - \" + list.nama_gudang,\n                      };\n                      return data;\n                    })}\n                  placeholder={\"Silahkan Pilih Gudang Tujuan\"}\n                  component={ReanderSelect}\n                />\n              </div>\n              <div className=\"col-lg-6\">\n                {this.state.isLoadingBaki === false ? (\n                  <Field\n                    label=\"Baki Tujuan\"\n                    name=\"baki_tujuan\"\n                    options={this.props.databaki\n                      .filter(\n                        (list) => list.kode_gudang === this.state.gudang_tujuan\n                      )\n                      .map((databaki) => {\n                        let data = {\n                          value: databaki.kode_baki,\n                          name: databaki.kode_baki + \" - \" + databaki.nama_baki,\n                        };\n                        return data || [];\n                      })}\n                    placeholder={\"Silahkan Pilih Baki Tujuan\"}\n                    component={ReanderSelect}\n                  />\n                ) : (\n                  <SkeletonLoading label=\"Baki Tujuan\" />\n                )}\n              </div>\n              {/* {console.log(this.props.setBarangPindahSatuBaki)}\n            {console.log(JSON.parse(localStorage.getItem(\"data_barang_satu_baki_tmp\")))} */}\n            </>\n          )}\n        </div>\n        <Tabel\n          keyField=\"kode_barcode\"\n          exportCsv={false}\n          data={\n            this.props.setBarangPindahSatuBaki.length === 0\n              ? JSON.parse(localStorage.getItem(\"data_barang_satu_baki_tmp\"))\n              : this.props.setBarangPindahSatuBaki\n          }\n          columns={this.props.columns}\n          empty={true}\n          pagination=\"off\"\n          textEmpty=\"Data Barang Kosong\"\n        />\n        <div className=\"row\">\n          <div className=\"col-10\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n            &nbsp;\n            <button\n              className=\"btn btn-warning\"\n              type=\"button\"\n              onClick={() => this.batalHancur()}\n              disabled={this.props.isLoadingBatal}\n            >\n              {this.state.isLoadingBatal ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Membatal\n                </>\n              ) : (\n                \"Batal\"\n              )}\n            </button>\n          </div>\n          {/* <div className=\"2\">\n            {JSON.parse(localStorage.getItem(\"data_barang_satu_baki_tmp\")) ===\n            null ? null : (\n              <>\n                Total Barang :{\" \"}\n                {this.props.setBarangPindahSatuBaki.length === 0\n                  ? JSON.parse(\n                      localStorage.getItem(\"data_barang_satu_baki_tmp\")\n                    ).length || 0\n                  : this.props.setBarangPindahSatuBaki.length || 0}\n                <br />\n                Total Berat :\n                {this.props.setBarangPindahSatuBaki.length === 0\n                  ? JSON.parse(\n                      localStorage.getItem(\"data_barang_satu_baki_tmp\")\n                    )\n                      .map((column, key) => column.berat)\n                      .reduce((a, b) => a + b, 0)\n                      .toFixed(1)\n                  : this.props.setBarangPindahSatuBaki\n                      .map((column, key) => column.berat)\n                      .reduce((a, b) => a + b, 0)\n                      .toFixed(1)}\n              </>\n            )}\n          </div> */}\n        </div>\n      </form>\n    );\n  }\n}\n\nHeadPindahBarangSatuBaki = reduxForm({\n  form: \"HeadPindahBarangSatuBaki\",\n  enableReinitialize: true,\n  validate: ValidasiPindahBarangBaki,\n})(HeadPindahBarangSatuBaki);\nexport default connect(maptostate, null)(HeadPindahBarangSatuBaki);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport { connect } from \"react-redux\";\nimport HeadPindahBarangSatuBaki from \"./HeadPindahBarangSatuBaki.jsx\";\nimport Swal from \"sweetalert2\";\nimport { setBarangPindahSatuBaki } from \"../../../actions/databarang_action.jsx\";\nimport { postData } from \"../../../config/axios.jsx\";\nimport { NotifError, ToastNotification } from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nconst maptostate = (state) => {\n  return {\n    setBarangPindahSatuBaki: state.databarang.setBarangPindahSatuBaki,\n  };\n};\n\nclass FormPindahBarangSatuBaki extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_barcode\",\n          text: \"Kode Barcode\",\n          footerAttrs: {\n            colSpan: \"5\",\n          },\n          footer: (cell, row, num, index) => {\n            return (\n              <div>Total Barang : {this.props.setBarangPindahSatuBaki.length === 0\n              ? JSON.parse(localStorage.getItem(\"data_barang_satu_baki_tmp\")) === null  ? 0 : JSON.parse(localStorage.getItem(\"data_barang_satu_baki_tmp\")).length \n              : this.props.setBarangPindahSatuBaki.length} </div>\n            );\n          },\n        },\n        {\n          dataField: \"kode_group\",\n          text: \"Gudang Asal\",\n        },\n        {\n          dataField: \"kode_dept\",\n          text: \"Baki Asal\",\n        },\n        {\n          dataField: \"nama_barang\",\n          text: \"Nama Barang\",\n        },\n        {\n          dataField: \"nama_atribut\",\n          text: \"Nama Atribut\",\n        },\n        {\n          dataField: \"berat\",\n          text: \"Berat\",\n          formatter: (cell) => {\n            return cell.toFixed(1);\n          },\n          footer: (columnData) =>\n            columnData.reduce((acc, item) => acc + item, 0).toFixed(1),\n        },\n\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  hapusdata(id) {\n    Swal.fire({\n      title: \"Anda Yakin !!\",\n      text: \"Ingin Menghapus Data Ini ?\",\n      icon: \"warning\",\n      position: \"top-center\",\n      cancelButtonText: \"Tidak\",\n      showCancelButton: true,\n      confirmButtonText: \"OK\",\n      showConfirmButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let data = JSON.parse(localStorage.getItem('data_barang_satu_baki_tmp'));\n        data.splice(id, 1)\n        localStorage.setItem('data_barang_satu_baki_tmp', JSON.stringify(data));\n        this.props.dispatch(setBarangPindahSatuBaki(data));\n        // deleteLocalItemBarcode(\"data_barang_satu_baki_tmp\", id);\n        // this.props.dispatch(getListReturnSupplier());\n      }\n    });\n  }\n  componentDidMount() {\n    // this.props.dispatch(getDataBaki());\n    // localStorageencryp('data_barang',[])\n    // localStorage.setItem('data_barang_satu_baki_tmp',[])\n      \n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    // let barang_tmp = this.props.setBarangPindahSatuBaki.length === 0 ? JSON.parse(localStorage.getItem('data_barang_satu_baki_tmp')) : this.props.setBarangPindahSatuBaki \n    let hasil = {\n      kode_gudang: data.gudang_tujuan,\n      kode_toko: data.baki_tujuan,\n      kode_gudang_asal: data.gudang_asal,\n      kode_toko_asal: data.baki_asal\n      }\n    //   console.log(hasil);\n    postData('pindahbarang/addbanyak', hasil)\n    .then(() => {\n      this.setState({ isLoading: false });\n    }).then(() => {\n      localStorage.setItem('data_barang_satu_baki_tmp', JSON.stringify([]));\n    })\n    .then(() => {\n      this.props.dispatch(setBarangPindahSatuBaki([]));\n    })\n    .then(() => {\n      this.props.dispatch(reset('HeadPindahBarangSatuBaki'))\n    })\n    .then(() => {\n      ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n    }).catch((error) => this.errorhandling(error))\n  }\n  errorhandling(error) {\n    NotifError(error.response.data)\n    this.setState({ isLoading: false });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Barang</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Pindah Barang Satu Baki</li>\n        </ol>\n        <h1 className=\"page-header\">Pindah Barang Satu Baki </h1>\n        <Panel>\n          <PanelHeader>Pindah Barang Satu Baki</PanelHeader>\n          <br />\n\n          {/* Pindah Barang Satu Baki */}\n          <div className=\"container\">\n            <HeadPindahBarangSatuBaki\n              isLoading={this.state.isLoading}\n              onSubmit={(data) => this.handleSubmit(data)}\n              data={this.props.setBarangPindahSatuBaki}\n              columns={this.state.columns}\n            />\n          </div>\n          <br />\n          {/* End Pindah Barang Satu Baki */}\n\n          {/* End Tambah Pindah Barang Satu Baki  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(FormPindahBarangSatuBaki);\n"],"sourceRoot":""}