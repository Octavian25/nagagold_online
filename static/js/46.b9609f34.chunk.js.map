{"version":3,"sources":["pages/Laporan/LaporanBarang/LaporanPindahBarang/exel/LaporanPindahBarangExel.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/pdf/CetakLaporanPindahBarang.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/HeadPindahBarang.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/FormLaporanPindahBarang.jsx"],"names":["LaporanPindahBarangExel","Component","constructor","props","super","this","state","render","stock_on_hand","berat","berat_atribut","total_barang","data","forEach","barang","index","detail","item","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","map","no","row","key","no_pindah","textAlign","kode_gudang_asal","kode_baki_asal","kode_gudang","kode_baki","kode_barcode","nama_barang","nama_atribut","formatGram","CetakLaporanPindahBarang","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","finalY","grantotalberat","grantotalberatatr","setFontSize","text","jml_alamat","slice","setProperties","title","concat","i","total_berat_atribut","total_berat","rows","content","styles","halign","parseFloat","push","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadPindahBarang","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanDataBarang","setState","databarang","element","columns","dataField","footerAttrs","cell","num","headerClasses","formatter","columnData","reduce","acc","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_LaporanPindahBarangExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","FormLaporanPindahBarang","React","isEdit","modalDialog","data_post","formatDate","moment","format","postData","then","res","ToastNotification","localStorageencryp","stringify","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","LaporanPindahBarang_HeadPindahBarang","hideModal","datamaster"],"mappings":"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","file":"static/js/46.b9609f34.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { localStoragedecryp,formatGram, getUserdata } from \"../../../../../components/helpers/function\";\nclass LaporanPindahBarangExel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let stock_on_hand = 0;\n    let berat = 0;\n    let berat_atribut = 0;\n    let total_barang = 0;\n    this.props.data.forEach((barang, index) => {\n      barang.detail.forEach((item, index) => {\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\n        berat_atribut = berat_atribut + item.berat_atribut;\n        berat = berat + item.berat;\n      });\n      total_barang = total_barang + barang.detail.length;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Pindah Barang\"\n          sheet=\"Laporan Pindah Barang\"\n          buttonText=\"Export Exel\"\n        />\n        <table\n          rowkey=\"kode_member\"\n          id=\"table-to-xls\"\n          style={{ display: \"none\" }}\n        >\n          <thead>\n            <tr>\n              <th colSpan=\"10\"> Laporan Pindah Barang </th>\n            </tr>\n            <tr>\n              <th colSpan=\"10\"> Periode </th>\n            </tr>\n            <tr>\n              <th colSpan=\"10\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"10\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"10\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr>\n              <th colSpan=\"10\"></th>\n            </tr>\n            <tr>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>NO</th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                GUDANG ASAL\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                BAKI ASAl\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                GUDANG\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                BAKI TUJUAN\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                BARCODE\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NAMA BARANG\n              </th>\n             \n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NAMA ATRIBUT\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                BERAT ATRIBUT\n              </th>\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                BERAT\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((item, no) => (\n              <>\n                {/* <tr>\n                  <th style={{ textAlign: \"left\" }}> No Pindah </th>\n                  <th colSpan=\"9\" style={{ textAlign: \"left\" }}>\n                    {\" \"}\n                    {item._id.no_pindah}{\" \"}\n                  </th>\n                </tr> */}\n\n                {item.detail.map((row, index) => (\n                  <tr key={row.no_pindah}>\n                    <td style={{textAlign : \"center\"}}> {++no}</td>\n                    <td> {row.kode_gudang_asal}</td>\n                    <td> {row.kode_baki_asal}</td>\n                    <td style={{textAlign : \"center\"}}> {row.kode_gudang}</td>\n                    <td style={{textAlign : \"center\"}}> {row.kode_baki}</td>\n                    <td>&nbsp;{row.kode_barcode}</td>\n                    <td> {row.nama_barang}</td>\n                    <td> {row.nama_atribut}</td>\n                    <td> {formatGram(row.berat_atribut,2)}</td>\n                    <td> {formatGram(row.berat,3)}</td>\n                  </tr>\n                ))}\n                {/* <tr>\n                <td colSpan=\"6\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign:\"center\" }}>\n                  {\" \"}\n                  Total\n                </td>\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                  {\" \"}\n                  {item.detail\n                    .map((list) => list.berat)\n                    .reduce((a, b) => a + b, 0)}{\" \"}\n                </td>\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                  {\" \"}\n                  {item.detail\n                    .map((list) => list.berat_atribut)\n                    .reduce((a, b) => a + b, 0)}{\" \"}\n                </td>\n              </tr> */}\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                colSpan=\"7\"\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"center\",\n                }}\n              >\n                Total\n              </td>\n             \n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                {formatGram(berat_atribut,2)}\n              </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                {formatGram(berat,3)}\n              </td>\n              {/* <th\n              colSpan=\"9\"\n              style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign:\"left\" }}\n            >\n              Total Brang : {total_barang} Pcs<br />\n              Total Berat : {berat.toFixed(3)} <br />\n              Total Berat Atribut : {berat_atribut.toFixed(3)}\n            </th> */}\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanPindahBarangExel;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { getToday, localStoragedecryp,formatGram, getUserdata } from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst CetakLaporanPindahBarang = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\",\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let finalY = 30;\n  let grantotalberat = 0;\n  let grantotalberatatr = 0;\n  let total_barang = 0;\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN PINDAH BARANG\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"Laporan Pindah Barang\"\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  let tableColumn = [\n    // [\n    //   {\n    //     content: `NO Pindah : ${item._id.no_pindah}`,\n    //     colSpan: 9,\n    //   },\n    // ],\n    [\n      {\n        content: `NO`,\n      },\n      {\n        content: `GUDANG ASAL`,\n      },\n      {\n        content: `BAKI ASAL`,\n      },\n      {\n        content: `GUDANG`,\n      },\n      {\n        content: `BAKI TUJUAN`,\n      },\n      {\n        content: `BARCODE`,\n      },\n      {\n        content: `NAMA BARANG`,\n      },\n    \n      {\n        content: `NAMA ATR`,\n      },\n      {\n        content: `BRT ATR`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: `BERAT`,\n        styles: {\n          halign: 'right'\n        },\n      },\n    ],\n  ];\n  let i = 1;\n  data.forEach((item, index) => {\n    let total_berat_atribut = 0;\n    let total_berat = 0;\n    // let data = [\n    //   {\n    //     content: `NO PINDAH : ${item._id.no_pindah}`,\n    //     colSpan: \"9\",\n    //   },\n    // ];\n    // tableRows.push(data);\n    \n    item.detail.forEach((barang, index) => {\n      let rows = [\n        i,\n        barang.kode_gudang_asal,\n        barang.kode_baki_asal,\n        barang.kode_gudang,\n        barang.kode_baki,\n        barang.kode_barcode,\n        barang.nama_barang,\n        barang.nama_atribut,\n        {\n          content: formatGram(barang.berat_atribut, 3),\n          styles: {\n            halign: 'right'\n          },\n        },\n        {\n          content: formatGram(barang.berat, 3),\n          styles: {\n            halign: 'right'\n          },\n        }\n      ];\n      total_berat = total_berat + parseFloat(barang.berat);\n      total_berat_atribut = total_berat_atribut + parseFloat(barang.berat_atribut);\n      \n      grantotalberat = grantotalberat + parseFloat(barang.berat);\n      grantotalberatatr = grantotalberatatr + parseFloat(barang.berat_atribut);\n      tableRows.push(rows);\n      ++i\n    })\n    total_barang = total_barang+item.detail.length;\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\n    // console.log();\n    // let total = [\n    //   {\n    //     content: `Total`,\n    //     colSpan: 6,\n    //     styles: {\n    //       halign: 'center',\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content: `${total_berat.toFixed(3)}`,\n    //     styles: {\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content: ``,\n    //     styles: {\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content: `${total_berat_atribut.toFixed(3)}`,\n    //     styles: {\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n\n    //   // `${sub_qty}`,\n    // ];\n    // tableRows.push(total);\n  });\n  let footer = [\n    {\n      content: `Total`,\n      colSpan: 7,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n  \n    {\n      content: ``,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${formatGram(grantotalberatatr, 3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n\n      },\n    },\n    {\n      content: `${formatGram(grantotalberat, 3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n      },\n    },\n\n    // `${sub_qty}`,\n    // {\n    //   content: `Total Barang : ${total_barang} Pcs \\nTotal Berat : ${grantotalberat.toFixed(\n    //     3\n    //   )}\\nTotal Berat Atribut : ${grantotalberatatr.toFixed(3)}`,\n    //   colSpan: 10,\n    //   styles: {\n    //     fillColor: \"#E8E5E5\",\n    //     textColor: \"#000\",\n    //   },\n    // },\n  ];\n\n  tableRows.push(footer);\n  let printed = [\n    {\n      colSpan:9,\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n    // let footer = [\n    //   {\n    //     content: `total : `,\n    //     colSpan: 6,\n    //   },\n    //   `${sub_total.toFixed(3)}`,\n    //   \"\",\n    //   `${berat_atribut.toFixed(1)}`,\n    // ];\n    // footRows.push(footer);\n    doc.autoTable({\n      head: tableColumn,\n      body: tableRows,\n      foot: footRows,\n      startY: finalY,\n      theme: \"plain\",\n      rowPageBreak: \"avoid\",\n      // pageBreak: \"avoid\",\n      margin: { top: 10 },\n      footStyles: {\n        // lineWidth: 0.02, lineColor: \"#000\",\n        fontSize:8,\n      },\n      bodyStyles: {\n        // lineWidth: 0.02, lineColor: \"#000\",\n        fontSize:8,\n      },\n      headStyles: {\n        fontSize:8,\n        // lineWidth: 0.02,\n        // lineColor: \"#000\",\n        textColor: \"#000\",\n        fillColor: \"#E8E5E5\",\n      },\n    });\n    finalY = doc.autoTableEndPosY() + 3;\n    tableRows = [];\n    footRows = [];\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n\n  // doc.text(`User                        : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\n  // doc.text(`Grand Total Berat   : ${parseFloat(grantotalberat).toFixed(3)}`, 14, finalY + 22);\n  // doc.text(`Grand Total Barang: ${parseFloat(total_barang)}`, 14, finalY + 28);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`Laporan Pindah Barang.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\"<html><head><title>Laporan Pindah Barang</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" + \n  string + \"></embed></body></html>\");\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default CetakLaporanPindahBarang;\n\n\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\n// import { getToday } from \"../../../../components/helpers/function\";\n// // Date Fns is used to format the dates we receive\n\n// // define a generatePDF function that accepts a tickets argument\n// const CetakLaporanPindahBarang = (\n//   data = \"\",\n//   username = \"\",\n//   tanggal_dari = \"\",\n//   tanggal_sampai = \"\",\n// ) => {\n//   const doc = new jsPDF('l');\n//   doc.setFontSize(15);\n//   doc.text(\"LAPORAN Pindah BARANG\", 14, 15);\n//   doc.setFontSize(10);\n//   //row 1\n//   doc.text(`PERIODE : ${tanggal_dari} S/d ${tanggal_sampai}`, 14, 25);\n//   let tableRows = [];\n//   let finalY = 40;\n//   let total = 0;\n//   let tableColumn = [\n//     \"NO\",\n//     \"GUDANG\",\n//     \"BAKI\",\n//     \"KODE BARANG\",\n//     \"KODE BARCODE\",\n//     \"NAMA BARANG\",\n//     \"JUMLAH\",\n//     \"BERAT\",\n//     \"NAMA ATRIBUTE\",\n//     \"BERAT ATRIBUTE\",\n//   ];\n//   data.forEach((item, index) => {\n//       let rows = [\n//         ++index,\n//         item.kode_gudang,\n//         item.kode_toko,\n//         item.kode_barang,\n//         item.kode_barcode,\n//         item.nama_barang,\n//         item.stock_on_hand,\n//         item.berat,\n//         item.nama_atribut,\n//         item.berat_atribut,\n//     ];\n//     total = index;\n//     tableRows.push(rows);\n  \n//     doc.autoTable(tableColumn, tableRows, {\n//       startY: 40\n//     });\n    \n//   });\n//    finalY = doc.lastAutoTable.finalY + 10;\n//    tableRows = [];\n\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\n\n//   doc.autoPrint();\n//   doc.save(`Laporan Pindah Barang.pdf`);\n// };\n\n// export default CetakLaporanPindahBarang;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { InputDate } from \"../../../../components/helpers/field\";\nimport { getTglSystem,formatGram } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\nimport LaporanPindahBarangExel from \"./exel/LaporanPindahBarangExel\";\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\nimport CetakLaporanPindahBarang from \"./pdf/CetakLaporanPindahBarang\";\nimport Loading from 'react-fullscreen-loading';\n\nclass HeadPindahBarang extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdf() {\n    CetakLaporanPindahBarang(this.props.LaporanDataBarang);\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n\n  render() {\n    let databarang = [];\n    let berat = 0;\n    this.props.LaporanDataBarang.forEach((element) => {\n      element.detail.forEach((detail) => {\n        databarang.push(detail);\n        berat = berat + detail.berat\n      });\n    });\n    const columns = [\n  \n      {\n        dataField: \"kode_gudang_asal\",\n        text: \"Gudang Asal\",\n        footerAttrs: {\n          colSpan: \"5\",\n        },\n        footer: (cell, row, num, index) => {\n          return <div>Total Barang : {databarang.length} </div>;\n        },\n      },\n      {\n        dataField: \"kode_baki_asal\",\n        text: \"Baki Asal\",\n      },\n      {\n        dataField: \"kode_barcode\",\n        text: \"Kode Barcode\",\n      },\n\n      {\n        dataField: \"kode_gudang\",\n        text: \"Gudang\",\n      },\n      {\n        dataField: \"kode_baki\",\n        text: \"Baki Tujuan\",\n      },\n     \n      {\n        dataField: \"berat\",\n        text: \"Berat\",\n        headerClasses: 'text-right',\n        formatter: (cell) => {\n          return <div className=\"text-right\"> {formatGram(cell, 2)} </div>;\n        },\n        footer: (columnData) => {\n          return <div className=\"text-right\"> {formatGram(columnData.reduce((acc, item) => acc + item, 0), 2)} </div>\n        }\n      }\n    ];\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_akhir\"\n              component={InputDate}\n              type=\"text\"\n              selected={this.state.tgl_akhir}\n              onChange={(date) => this.setLastDate(date)}\n              label=\"Tanggal Akhir\"\n              placeholder=\"Masukan Tanggal Akhir\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n           <div className=\"col-12\">\n            <Tabel\n              keyField=\"no_pindah\"\n              data={this.props.export ? databarang  :  []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Pindah Barang Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <button\n                  onClick={() => this.exportPdf()}\n                  className=\"btn btn-warning btn-block\"\n                >\n                  {\" \"}\n                  Export PDF{\" \"}\n                </button>\n              </div>\n              <div className=\"col-lg-6\">\n                <LaporanPindahBarangExel data={this.props.LaporanDataBarang} />\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadPindahBarang = reduxForm({\n  form: \"HeadPindahBarang\",\n    enableReinitialize: true,\n  validate: ValidasiTanggalLaporan \n})(HeadPindahBarang);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadPindahBarang);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\nimport { connect } from \"react-redux\";\nimport { postData } from \"../../../../config/axios.jsx\";\nimport { reduxForm } from \"redux-form\";\nimport {\n  formatDate, localStorageencryp,\n} from \"../../../../components/helpers/function.jsx\";\nimport {\n  NotifError,\n  ToastNotification,\n} from \"../../../../components/helpers/notification.jsx\";\nimport * as moment from \"moment-timezone\";\nimport HeadPindahBarang from \"./HeadPindahBarang.jsx\";\n\n\nconst maptostate = (state) => {\n  return {\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nclass FormLaporanPindahBarang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      username: false,\n      export: false,\n      LaporanDataBarang: [],\n      tgl_awal: new Date(),\n      tgl_akhir: new Date(),\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    let data_post = {\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir)).format('YYYY-MM-DD')),\n    };\n    postData(\"pindahbarang/get/report\", data_post)\n      .then((res) => {\n        // console.log(res.data);\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\n          this.setState({\n            isLoading: false,\n            export: false,\n            LaporanDataBarang : []\n          });\n        } else {\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\n          ToastNotification(\"success\", \"Laporan Pindah Barang Tersedia\");\n          this.setState({\n            LaporanDataBarang: res.data,\n            isLoading: false,\n            export: true,\n          })\n        }\n      })\n      .catch((error) => this.errorHandling(error));\n  }\n\n  errorHandling(err) {\n    NotifError(err);\n    this.setState({\n      isLoading: false,\n      export: false,\n    });\n  }\n\n  \n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Laporan Barang</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Laporan Pindah Barang</li>\n        </ol>\n        <h1 className=\"page-header\">Laporan Pindah Barang </h1>\n        <Panel>\n          <PanelHeader>Filter Laporan</PanelHeader>\n          <br />\n          <div className=\"container\">\n          <HeadPindahBarang\n              export={this.state.export}\n              LaporanDataBarang={this.state.LaporanDataBarang}\n              isLoading={this.state.isLoading}\n              onSubmit={(data) => this.handleSubmit(data)}\n            />\n          </div>\n          <br/>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nFormLaporanPindahBarang = reduxForm({\n  form: \"FormLaporanPindahBarang\",\n  enableReinitialize: true,\n})(FormLaporanPindahBarang);\nexport default connect(maptostate, null)(FormLaporanPindahBarang);\n"],"sourceRoot":""}