{"version":3,"sources":["pages/Laporan/LaporanBarang/LaporanPindahBarang/exel/LaporanPindahBarangExel.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/pdf/CetakLaporanPindahBarang.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/HeadPindahBarang.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/FormLaporanPindahBarang.jsx"],"names":["LaporanPindahBarangExel","Component","constructor","props","super","this","state","render","stock_on_hand","berat","berat_atribut","total_barang","data","forEach","barang","index","detail","item","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","backgroundColor","color","map","no","row","textAlign","kode_gudang_asal","kode_baki_asal","kode_gudang","kode_baki","kode_barcode","nama_barang","nama_atribut","CetakLaporanPindahBarang","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","finalY","grantotalberat","grantotalberatatr","setFontSize","text","setProperties","title","concat","i","total_berat_atribut","total_berat","rows","toFixed","parseFloat","push","footer","content","styles","halign","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadPindahBarang","date","Date","setStartDate","bind","setLastDate","exportPdf","LaporanDataBarang","setState","databarang","element","columns","dataField","footerAttrs","cell","num","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_LaporanPindahBarangExel","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","FormLaporanPindahBarang","React","isEdit","modalDialog","data_post","formatDate","moment","format","postData","then","res","ToastNotification","localStorageencryp","stringify","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","LaporanPindahBarang_HeadPindahBarang","hideModal","datamaster"],"mappings":"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","file":"static/js/42.6c20dcf1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass LaporanPindahBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Pindah Barang\"\r\n          sheet=\"Laporan Pindah Barang\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table\r\n          rowkey=\"kode_member\"\r\n          id=\"table-to-xls\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"10\"> Laporan Pindah Barang </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"></th>\r\n            </tr>\r\n            <tr>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>NO</th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                GUDANG ASAL\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BAKI ASAl\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                GUDANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BAKI TUJUAN\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BARCODE\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA ATRIBUT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT ATRIBUT\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, no) => (\r\n              <>\r\n                {/* <tr>\r\n                  <th style={{ textAlign: \"left\" }}> No Pindah </th>\r\n                  <th colSpan=\"9\" style={{ textAlign: \"left\" }}>\r\n                    {\" \"}\r\n                    {item._id.no_pindah}{\" \"}\r\n                  </th>\r\n                </tr> */}\r\n\r\n                {item.detail.map((row, index) => (\r\n                  <tr>\r\n                    <td style={{textAlign : \"center\"}}> {++no}</td>\r\n                    <td> {row.kode_gudang_asal}</td>\r\n                    <td> {row.kode_baki_asal}</td>\r\n                    <td style={{textAlign : \"center\"}}> {row.kode_gudang}</td>\r\n                    <td style={{textAlign : \"center\"}}> {row.kode_baki}</td>\r\n                    <td> {row.kode_barcode}</td>\r\n                    <td> {row.nama_barang}</td>\r\n                    <td> {row.berat}</td>\r\n                    <td> {row.nama_atribut}</td>\r\n                    <td> {row.berat_atribut}</td>\r\n                  </tr>\r\n                ))}\r\n                {/* <tr>\r\n                <td colSpan=\"6\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign:\"center\" }}>\r\n                  {\" \"}\r\n                  Total\r\n                </td>\r\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                  {\" \"}\r\n                  {item.detail\r\n                    .map((list) => list.berat)\r\n                    .reduce((a, b) => a + b, 0)}{\" \"}\r\n                </td>\r\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\r\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                  {\" \"}\r\n                  {item.detail\r\n                    .map((list) => list.berat_atribut)\r\n                    .reduce((a, b) => a + b, 0)}{\" \"}\r\n                </td>\r\n              </tr> */}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                colSpan=\"7\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Total\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                {berat}\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                {berat_atribut}\r\n              </td>\r\n              {/* <th\r\n              colSpan=\"9\"\r\n              style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign:\"left\" }}\r\n            >\r\n              Total Brang : {total_barang} Pcs<br />\r\n              Total Berat : {berat.toFixed(3)} <br />\r\n              Total Berat Atribut : {berat_atribut.toFixed(3)}\r\n            </th> */}\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanPindahBarangExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanPindahBarang = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 30;\r\n  let grantotalberat = 0;\r\n  let grantotalberatatr = 0;\r\n  let total_barang = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PINDAH BARANG\", 14, 15);\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"Laporan Pindah Barang\"\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let tableColumn = [\r\n    // [\r\n    //   {\r\n    //     content: `NO Pindah : ${item._id.no_pindah}`,\r\n    //     colSpan: 9,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `GUDANG ASAL`,\r\n      },\r\n      {\r\n        content: `BAKI ASAL`,\r\n      },\r\n      {\r\n        content: `GUDANG`,\r\n      },\r\n      {\r\n        content: `BAKI TUJUAN`,\r\n      },\r\n      {\r\n        content: `BARCODE`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n      },\r\n      {\r\n        content: `NAMA ATR`,\r\n      },\r\n      {\r\n        content: `BRT ATR`,\r\n      },\r\n    ],\r\n  ];\r\n  let i = 1;\r\n  data.forEach((item, index) => {\r\n    let total_berat_atribut = 0;\r\n    let total_berat = 0;\r\n    // let data = [\r\n    //   {\r\n    //     content: `NO PINDAH : ${item._id.no_pindah}`,\r\n    //     colSpan: \"9\",\r\n    //   },\r\n    // ];\r\n    // tableRows.push(data);\r\n    \r\n    item.detail.forEach((barang, index) => {\r\n      let rows = [\r\n        i,\r\n        barang.kode_gudang_asal,\r\n        barang.kode_baki_asal,\r\n        barang.kode_gudang,\r\n        barang.kode_baki,\r\n        barang.kode_barcode,\r\n        barang.nama_barang,\r\n        (barang.berat).toFixed(3),\r\n        barang.nama_atribut,\r\n        (barang.berat_atribut).toFixed(3),\r\n      ];\r\n      total_berat = total_berat + parseFloat(barang.berat);\r\n      total_berat_atribut = total_berat_atribut + parseFloat(barang.berat_atribut);\r\n      \r\n      grantotalberat = grantotalberat + parseFloat(barang.berat);\r\n      grantotalberatatr = grantotalberatatr + parseFloat(barang.berat_atribut);\r\n      tableRows.push(rows);\r\n      ++i\r\n    })\r\n    total_barang = total_barang+item.detail.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    // let total = [\r\n    //   {\r\n    //     content: `Total`,\r\n    //     colSpan: 6,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${total_berat.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: ``,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${total_berat_atribut.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n\r\n    //   // `${sub_qty}`,\r\n    // ];\r\n    // tableRows.push(total);\r\n  });\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 7,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${grantotalberat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${grantotalberatatr.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n\r\n    // `${sub_qty}`,\r\n    // {\r\n    //   content: `Total Barang : ${total_barang} Pcs \\nTotal Berat : ${grantotalberat.toFixed(\r\n    //     3\r\n    //   )}\\nTotal Berat Atribut : ${grantotalberatatr.toFixed(3)}`,\r\n    //   colSpan: 10,\r\n    //   styles: {\r\n    //     fillColor: \"#E8E5E5\",\r\n    //     textColor: \"#000\",\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n    // let footer = [\r\n    //   {\r\n    //     content: `total : `,\r\n    //     colSpan: 6,\r\n    //   },\r\n    //   `${sub_total.toFixed(3)}`,\r\n    //   \"\",\r\n    //   `${berat_atribut.toFixed(1)}`,\r\n    // ];\r\n    // footRows.push(footer);\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      foot: footRows,\r\n      startY: finalY,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      // pageBreak: \"avoid\",\r\n      margin: { top: 10 },\r\n      footStyles: {\r\n        // lineWidth: 0.02, lineColor: \"#000\",\r\n        fontSize:8,\r\n      },\r\n      bodyStyles: {\r\n        // lineWidth: 0.02, lineColor: \"#000\",\r\n        fontSize:8,\r\n      },\r\n      headStyles: {\r\n        fontSize:8,\r\n        // lineWidth: 0.02,\r\n        // lineColor: \"#000\",\r\n        textColor: \"#000\",\r\n        fillColor: \"#E8E5E5\",\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 3;\r\n    tableRows = [];\r\n    footRows = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(`User                        : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Grand Total Berat   : ${parseFloat(grantotalberat).toFixed(3)}`, 14, finalY + 22);\r\n  // doc.text(`Grand Total Barang: ${parseFloat(total_barang)}`, 14, finalY + 28);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`Laporan Pindah Barang.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\"<html><head><title>Laporan Pindah Barang</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" + \r\n  string + \"></embed></body></html>\");\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanPindahBarang;\r\n\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanPindahBarang = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal_dari = \"\",\r\n//   tanggal_sampai = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN Pindah BARANG\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`PERIODE : ${tanggal_dari} S/d ${tanggal_sampai}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n//   let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"GUDANG\",\r\n//     \"BAKI\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"NAMA BARANG\",\r\n//     \"JUMLAH\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         item.kode_gudang,\r\n//         item.kode_toko,\r\n//         item.kode_barang,\r\n//         item.kode_barcode,\r\n//         item.nama_barang,\r\n//         item.stock_on_hand,\r\n//         item.berat,\r\n//         item.nama_atribut,\r\n//         item.berat_atribut,\r\n//     ];\r\n//     total = index;\r\n//     tableRows.push(rows);\r\n  \r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: 40\r\n//     });\r\n    \r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Laporan Pindah Barang.pdf`);\r\n// };\r\n\r\n// export default CetakLaporanPindahBarang;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanPindahBarangExel from \"./exel/LaporanPindahBarangExel\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport CetakLaporanPindahBarang from \"./pdf/CetakLaporanPindahBarang\";\r\n\r\nclass HeadPindahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    CetakLaporanPindahBarang(this.props.LaporanDataBarang);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    this.props.LaporanDataBarang.forEach((element) => {\r\n      // console.log(element);\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat = berat + detail.berat\r\n      });\r\n    });\r\n    const columns = [\r\n  \r\n      {\r\n        dataField: \"kode_gudang_asal\",\r\n        text: \"Gudang Asal\",\r\n        footerAttrs: {\r\n          colSpan: \"5\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_baki_asal\",\r\n        text: \"Baki Asal\",\r\n      },\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n      },\r\n\r\n      {\r\n        dataField: \"kode_gudang\",\r\n        text: \"Gudang\",\r\n      },\r\n      {\r\n        dataField: \"kode_baki\",\r\n        text: \"Baki Tujuan\",\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        footer: (cell, row, num, index) => {\r\n          return <div>{berat.toFixed(3)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return cell.toFixed(3);\r\n        },\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n           <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Pindah Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanPindahBarangExel data={this.props.LaporanDataBarang} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadPindahBarang = reduxForm({\r\n  form: \"HeadPindahBarang\",\r\n    enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan \r\n})(HeadPindahBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadPindahBarang);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { postData } from \"../../../../config/axios.jsx\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  formatDate, localStorageencryp,\r\n} from \"../../../../components/helpers/function.jsx\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\nimport HeadPindahBarang from \"./HeadPindahBarang.jsx\";\r\n\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormLaporanPindahBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      username: false,\r\n      export: false,\r\n      LaporanDataBarang: [],\r\n      tgl_awal: new Date(),\r\n      tgl_akhir: new Date(),\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_post = {\r\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\r\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir)).format('YYYY-MM-DD')),\r\n    };\r\n    postData(\"pindahbarang/get/report\", data_post)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            isLoading: false,\r\n            export: false,\r\n          });\r\n        } else {\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          ToastNotification(\"success\", \"Laporan Pindah Barang Tersedia\");\r\n          this.setState({\r\n            LaporanDataBarang: res.data,\r\n            isLoading: false,\r\n            export: true,\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({\r\n      isLoading: false,\r\n      export: false,\r\n    });\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Pindah Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Pindah Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n          <HeadPindahBarang\r\n              export={this.state.export}\r\n              LaporanDataBarang={this.state.LaporanDataBarang}\r\n              isLoading={this.state.isLoading}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </div>\r\n          <br/>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanPindahBarang = reduxForm({\r\n  form: \"FormLaporanPindahBarang\",\r\n  enableReinitialize: true,\r\n})(FormLaporanPindahBarang);\r\nexport default connect(maptostate, null)(FormLaporanPindahBarang);\r\n"],"sourceRoot":""}