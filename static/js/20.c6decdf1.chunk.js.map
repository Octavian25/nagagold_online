{"version":3,"sources":["pages/DataMaster/DataKadar/FormModalKadar.jsx","pages/DataMaster/DataKadar/MasterKadar.jsx","Validasi/ValidasiMasterJenis.jsx"],"names":["option","value","name","FormModalKadar","Component","constructor","props","super","this","state","aktif","componentDidMount","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","Field","id","label","options","type_kadar","disabled","isEdit","onBlur","setState","placeholder","component","ReanderSelect","tabIndex","ReanderField","type","normalize","NumberOnly","onClick","dispatch","hideModal","isLoading","Fragment","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiMasterJenis","connect","datamaster","ShowModalDataKadar","initialValues","kadar","hapusDataKadar","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataKadar","catch","err","ToastNotification","response","DataKadar","modalDialog","React","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","bind","undefined","title","data_edit","data_post","putData","reset","error","ErrorHandling","postData","NotifError","formEditKadar","dataEdit","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","content","DataKadar_FormModalKadar","event","errors","kode_group","kode_kategori","kode_jenis","nama_jenis"],"mappings":"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","file":"static/js/20.c6decdf1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\n\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\nimport { NumberOnly } from \"../../../Validasi/normalize\";\nimport ValidasiMasterJenis from \"../../../Validasi/ValidasiMasterJenis.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalDataKadar !== null) {\n    return {\n      initialValues: {\n        kadar: state.datamaster.ShowModalDataKadar.kadar,\n        type_kadar: state.datamaster.ShowModalDataKadar.type_kadar,\n      },\n    };\n  }\n};\nconst option = [\n  {\n    value: \"KADAR-CETAK\",\n    name: \"KADAR-CETAK\",\n  },\n  {\n    value: \"KADAR-BELI\",\n    name: \"KADAR-BELI\",\n  },\n  {\n    value: \"KADAR-JUAL\",\n    name: \"KADAR-JUAL\",\n  },\n];\nclass FormModalKadar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aktif: false,\n    };\n  }\n\n  componentDidMount() {\n    // setTimeout(() => {\n    //   document.getElementById(\"type_kadar\").focus();\n    // }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        autoComplete=\"off\"\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n      >\n        <div className=\"form-group\">\n          <Field\n            id=\"type_kadar\"\n            label=\"Type Kadar\"\n            name=\"type_kadar\"\n            options={option}\n            value={this.props.type_kadar}\n            disabled={this.props.isEdit}\n            onBlur={() => this.setState({ aktif: true })}\n            placeholder={\"Silahkan Pilih Type Kadar\"}\n            component={ReanderSelect}\n          />\n        </div>\n        <Field\n          id=\"kadar\"\n          tabIndex=\"1\"\n          name=\"kadar\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kadar\"\n          normalize={NumberOnly}\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Kadar\"\n        />\n        \n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"2\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormModalKadar = reduxForm({\n  form: \"ModalKadar\",\n  enableReinitialize: true,\n  validate: ValidasiMasterJenis,\n})(FormModalKadar);\nexport default connect(maptostate, null)(FormModalKadar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport {\n  ShowModalDataKadar,\n  showModal,\n  getDataKadar,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifError,\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport FormModalKadar from \"./FormModalKadar.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    // DataGroup: state.datamaster.GetDataGroup,\n    DataKadar: state.datamaster.getDataKadar,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst hapusDataKadar = (kadar, type_kadar, dispatch) => {\n  Swal.fire({\n    // title: 'Anda Yakin !!',\n    // text: 'Ingin Menghapus Data Ini ?',\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kadar \" +\n      kadar +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"kadar/delete/\" + kadar + \"&\" + type_kadar, {\n        data: {\n          kadar: kadar,\n          type_kadar: type_kadar,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getDataKadar())\n        );\n      }).catch((err) => {\n        ToastNotification(\"error\", err.response.data)\n      })\n    }\n  });\n};\nclass MasterKadar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kadar\",\n          text: \"Kadar\",\n        },\n        {\n          dataField: \"type_kadar\",\n          text: \"Type Kadar\",\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            // let dataEdit = {\n            //   kadar: row.kadar,\n            //   type_kadar: row.type_kadar,\n            // };\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  {/* <button\n                    onClick={() => this.formEditKadar(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    {\" \"}\n                    <i className=\"fa fa-edit\"></i>\n                  </button> */}\n                  <button\n                    onClick={() =>\n                      hapusDataKadar(\n                        row.kadar,\n                        row.type_kadar,\n                        this.props.dispatch\n                      )\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataKadar());\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n\n    if (data.type_kadar === undefined) {\n      Swal.fire({\n        title: \"Oopss!! \",\n        text: \"Type Kadar Harus Dipilih !!!\",\n        icon: \"info\",\n      });\n      this.setState({ isLoading: false });\n      return false;\n    }\n    let data_edit = {\n      kadar: data.kadar,\n    };\n    let data_post = {\n      kadar: data.kadar,\n      type_kadar: data.type_kadar,\n    };\n    this.state.isEdit\n      ? putData(\"jenis/edit/by-kode-jenis/\" + data.kadar, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\n          .then(() => {\n            this.props.dispatch(getDataKadar());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKadar\"));\n          })\n          .catch((error) => this.ErrorHandling(error))\n      : postData(\"kadar/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Disimpan\"))\n          .then(() => {\n            this.props.dispatch(getDataKadar());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKadar\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) => this.ErrorHandling(error));\n  }\n  ErrorHandling(err) {\n    this.setState({ isLoading: false });\n    NotifError(err);\n  }\n  formEditKadar(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalDataKadar(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalDataKadar() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalDataKadar(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Kadar</li>\n        </ol>\n        <h1 className=\"page-header\">Master Kadar </h1>\n        <Panel>\n          <PanelHeader>Master Kadar</PanelHeader>\n          <br />\n\n          {/* Master Kadar */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kondisi\"\n              tambahData={true}\n              handleClick={() => this.ShowModalDataKadar()}\n              exportCsv={true}\n              data={this.props.DataKadar}\n              columns={this.state.columns}\n              empty={this.props.DataKadar}\n              textEmpty=\"Data Kadar Kosong\"\n            />\n          </div>\n          <br />\n          {/* End Master Kadar */}\n\n          <ModalGlobal\n            title={this.state.isEdit ? \"Edit Data Kadar\" : \"Tambah Data Kadar\"}\n            size=\"P\"\n            content={\n              <FormModalKadar\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Kadar  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterKadar);\n","const ValidasiMasterJenis = (value,event) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.kode_group) {\n        errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\n    }\n    if (!value.kode_jenis) {\n        errors.kode_jenis = \"Kode Jenis Tidak Boleh Kosong\";\n    }\n    if (!value.nama_jenis) {\n        errors.nama_jenis = \"Nama Jenis Tidak Boleh Kosong\";\n    }\n    // console.log(value.kode_group);\n   \n    return errors;\n}\n\nexport default ValidasiMasterJenis;"],"sourceRoot":""}