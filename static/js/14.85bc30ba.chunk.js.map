{"version":3,"sources":["pages/Laporan/LaporanPembelian/PembelianSales/exel/ExportExelPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/pdf/ExportLaporanPembelianSales.jsx","pages/Laporan/LaporanPembelian/PembelianSales/HeadFormLaporanPembelianSales.jsx","Validasi/Penjualan/ValidasiLaporanPenjualanSales.jsx"],"names":["ExportExelPembelianSales","Component","constructor","props","super","this","state","render","total_berat","total_barang","harga","jumlah","data","forEach","item","index","parseFloat","berat","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","backgroundColor","color","textAlign","map","row","_id","kode_sales","ExportLaporanPembelianSales","username","tanggal_dari","tanggal_sampai","doc","jsPDF","tableRows","footRows","finalY","setFontSize","text","setProperties","title","concat","sub_jumlah","sub_harga","sub_berat","rows","toFixed","parseInt","toLocaleString","push","footer","content","styles","halign","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanPembelianSales","date","Date","setStartDate","bind","setLastDate","componentDidMount","dispatch","getDataSales","setState","exportPdf","LaporanTransaksiPembelian","databarang","element","columns","dataField","cell","num","formatter","headerClasses","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exel_ExportExelPembelianSales","reduxForm","form","enableReinitialize","validate","ValidasiLaporanPenjualanSales","connect","datasales","datamaster","initialValues","getTglSystem","errors","tanggal_awal","sampai_tgl"],"mappings":"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","file":"static/js/14.85bc30ba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { localStoragedecryp } from \"../../../../../components/helpers/function\";\nclass ExportExelPembelianSales extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let total_berat = 0;\n    let total_barang = 0;\n    let harga = 0;\n    let jumlah = 0;\n    this.props.data.forEach((item, index) => {\n      // barang.detail.forEach((item, index) => {\n      total_berat = total_berat + parseFloat(item.berat);\n      total_berat = total_berat + parseFloat(item.berat);\n      harga = harga + item.harga;\n      jumlah = jumlah + item.jumlah;\n      total_barang = total_barang + item.length;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Pembelian Pramuniaga\"\n          sheet=\"Laporan Pembelian Pramuniaga\"\n          buttonText=\"Export Exel\"\n        />\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\n          <thead>\n            <tr>\n              <th colSpan=\"4\"> Laporan Pembelian Pramuniaga </th>\n            </tr>\n            <tr>\n              <th colSpan=\"4\">\n                {\" \"}\n                Periode{\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                SALES\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"center\",\n                }}\n              >\n                BERAT\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                TOTAL QTY\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                TOTAL PEMBELIAN RP\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((row, index) => (\n              <>\n                {/* {item.detail.map((row, index) => ( */}\n                <tr>\n                  <td>{row._id.kode_sales}</td>\n                  <td\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {row.berat}\n                  </td>\n                  <td>{row.jumlah}</td>\n                  <td>{row.harga}</td>\n                </tr>\n                {/* ))} */}\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                // colSpan=\"6\"\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n\n                  textAlign: \"center\",\n                }}\n              ></td>\n\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"center\",\n                }}\n              >\n                {total_berat}\n              </td>\n\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {jumlah}\n              </td>\n\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                {harga}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default ExportExelPembelianSales;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {\n  getToday,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst ExportLaporanPembelianSales = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"P\", \"mm\");\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let finalY = 30;\n  // let total_baraang = 0;\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN PEMBELIAN PRAMUNIAGA\", 14, 15);\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN PEMBELIAN PRAMUNIAGA\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  let tableColumn = [\n    [\n      {\n        content: `SALES`,\n      },\n      {\n        content: `BERAT`,\n      },\n      {\n        content: `TOTAL QTY`,\n      },\n      {\n        content: `TOTAL PEMBELIAN RP`,\n        style: {\n          textAlign: \"right\",\n        },\n      },\n      // {\n      //   content: `NO FAKTUR`,\n      // },\n      // {\n      //   content: `NAMA CUSTOMER`,\n      // },\n      // {\n      //   content: `NO HP`,\n      // },\n      // {\n      //   content: `ALAMAT CUSTOMER`,\n      // },\n      // {\n      //   content: `KODE GUDANG`,\n      // },\n      // {\n      //   content: `KODE DEPT`,\n      // },\n      // {\n      //   content: `BERAT NOTA`,\n      // },\n      // {\n      //   content: `BERAT`,\n      // },\n      // {\n      //   content: `HARGA NOTA`,\n      // },\n      // {\n      //   content: `HARGA`,\n      // },\n      // {\n      //   content: `HARGA RATA`,\n      // },\n      // {\n      //   content: `KONDISI`,\n      // },\n    ],\n  ];\n  let sub_jumlah = 0;\n  let sub_harga = 0;\n  let sub_berat = 0;\n  data.forEach((item, index) => {\n    // let head = [\n    //   {\n    //     content: `KODE SALES : ${item._id.kode_sales}`,\n    //     colSpan: 12,\n    //   },\n    // ];\n    // tableRows.push(head);\n\n   \n      let rows = [\n        item._id.kode_sales,\n        // item.no_faktur_beli,\n        // item.nama_customer,\n        // item.no_hp,\n        // item.alamat_customer,\n        // item.kode_gudang,\n        // item.kode_dept,\n        item.berat.toFixed(3),\n        item.jumlah,\n        parseInt(item.harga).toLocaleString(\"ID-id\"),\n        // item.berat.toFixed(1),\n        // parseInt(item.harga_nota).toLocaleString(\"ID-id\"),\n        // parseInt(item.harga_rata).toLocaleString(\"ID-id\"),\n        // item.kondisi,\n      ];\n     \n      sub_jumlah = sub_jumlah + parseFloat(item.jumlah);\n      sub_harga = sub_harga + parseFloat(item.harga);\n      sub_berat = sub_berat + parseFloat(item.berat);\n      tableRows.push(rows);\n   \n    // total_baraang = total_baraang+item.detail.length;\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\n    // console.log();\n    \n  });\n  let footer = [\n    {\n      content: ``,\n      // colSpan: ,\n      styles: {\n        halign: \"center\",\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${sub_berat.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n\n    {\n      content: sub_jumlah.toLocaleString('ID-id'),\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: sub_harga.toLocaleString('ID-id'),\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n  ];\n  tableRows.push(footer);\n  let printed = [\n    {\n      colSpan:9,\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  footRows = [];\n  // sub_harga = 0;\n  // sub_harga_rata = 0;\n  // sub_harga_nota = 0;\n  // sub_berat = 0;\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n\n  // doc.text(\n  //   `User                        : ${\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\n  //   }`,\n  //   14,\n  //   finalY + 10\n  // );\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN PEMBELIAN PRAMUNIAGA.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN PEMBELIAN PRAMUNIAGA</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default ExportLaporanPembelianSales;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { getDataSales } from \"../../../../actions/datamaster_action\";\nimport {\n  InputDate,\n  // ReanderSelect,\n} from \"../../../../components/helpers/field\";\nimport { getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\nimport ExportExelPembelianSales from \"./exel/ExportExelPembelianSales\";\nimport ExportLaporanPembelianSales from \"./pdf/ExportLaporanPembelianSales\"\n// const maptostate = (state) => {\n//   return {\n//     datasales: state.datamaster.getDataSales,\n//   };\n// };\nclass HeadFormLaporanPembelianSales extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getDataSales())\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n  exportPdf() {\n    ExportLaporanPembelianSales(this.props.LaporanTransaksiPembelian);\n  }\n  render() {\n    let databarang = [];\n    let berat = 0;\n    let harga = 0;\n    let jumlah = 0;\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\n      // element.detail.forEach((detail) => {\n      let row = {\n        kode_sales: element._id.kode_sales,\n        berat: element.berat,\n        harga: element.harga,\n        jumlah: element.jumlah\n        }\n        databarang.push(row);\n        berat = berat + element.berat;\n        harga = harga + element.harga;\n        jumlah = jumlah + element.jumlah;\n       \n      // });\n    });\n    const columns = [\n      \n      // {\n      //   dataField: \"no_faktur_beli\",\n      //   text: \"No FB\",\n      //   footerAttrs: {\n      //     colSpan: \"4\",\n      //   },\n      //   footer: (cell, row, num, index) => {\n      //     return <div>Total Barang : {databarang.length} </div>;\n      //   },\n      // },\n      \n      {\n        dataField: \"kode_sales\",\n        text: \"Kode Sales\",\n        footer: \"\",\n        // footerAttrs: {\n        //   colSpan: \"3\",\n        // },\n        // footer: (cell, row, num, index) => {\n        //   return <div>Total Barang : {databarang.length} </div>;\n        // },\n      },\n     \n      {\n        dataField: \"berat\",\n        text: \"Berat\",\n        footer: (cell, row, num, index) => {\n          return <div>{berat.toFixed(3)} </div>;\n        },\n        formatter: (cell) => {\n          return cell.toFixed(3);\n        },\n      },\n     \n      {\n        dataField: \"jumlah\",\n        text: \"Total Qty\",\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{jumlah.toLocaleString('ID-id')} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell.toLocaleString('ID-id')}</div>;\n        },\n      },\n      {\n        dataField: \"harga\",\n        text: \"Total Pembelian Rp\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{harga.toLocaleString('ID-id')} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell.toLocaleString('ID-id')}</div>;\n        },\n      },\n     \n    ];\n    return (\n      <form onSubmit={this.props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\n        <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <Field\n            name=\"tgl_awal\"\n            component={InputDate}\n            label=\"Tanggal Dari\"\n            type=\"text\"\n            selected={this.state.tgl_awal}\n            onChange={(date) => this.setStartDate(date)}\n            placeholder=\"Masukan Tanggal Dari\"\n          />\n        </div>\n\n        <div className=\"col-lg-4\">\n          <Field\n            name=\"tgl_akhir\"\n            component={InputDate}\n            type=\"text\"\n            selected={this.state.tgl_akhir}\n            onChange={(date) => this.setLastDate(date)}\n            label=\"Tanggal Akhir\"\n            placeholder=\"Masukan Tanggal Akhir\"\n          />\n        </div>\n          {/* <div className=\"col-lg-3\">\n            <Field\n              label=\"Kode Sales\"\n              name=\"kode_sales\"\n              options={this.props.datasales.map((row) => {\n                let data = {\n                  value: row.kode_sales,\n                  name: row.kode_sales\n                };\n                return data || [];\n              })}\n              placeholder={\"Silahkan Pilih Nama Sales\"}\n              component={ReanderSelect}\n            />\n          </div> */}\n\n          <div className=\"col-lg-4\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"kode_barcode\"\n              data={this.props.export ? databarang : []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <button\n                onClick={() => this.exportPdf()}\n                className=\"btn btn-warning btn-block\"\n              >\n                {\" \"}\n                Export PDF{\" \"}\n              </button>\n            </div>\n            <div className=\"col-lg-6\">\n              <ExportExelPembelianSales data={this.props.LaporanTransaksiPembelian} />\n            </div>\n          </div>\n        </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nHeadFormLaporanPembelianSales = reduxForm({\n  form: \"HeadFormLaporanPembelianSales\",\n  enableReinitialize: true,\n  validate: ValidasiLaporanPenjualanSales,\n})(HeadFormLaporanPembelianSales);\n// export default connect(maptostate, null)(HeadFormLaporanPembelianSales);\nexport default connect((state) => {\n  return {\n    datasales: state.datamaster.getDataSales,\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadFormLaporanPembelianSales);\n","const ValidasiLaporanPenjualanSales = (value) => {\n    const errors = {};\n    if (!value.tanggal_awal) {\n        errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\n    }\n    if (!value.sampai_tgl) {\n        errors.sampai_tgl = \"Tanggal Tidak Boleh Kosong\";\n    }\n    if (!value.kode_sales) {\n        errors.kode_sales = \"Kode Tidak Boleh Kosong\";\n    }\n\n    return errors;\n}\n\nexport default ValidasiLaporanPenjualanSales;\n\n\n"],"sourceRoot":""}