{"version":3,"sources":["pages/DataMaster/DataJenis/FormModalDataJenis.jsx","pages/DataMaster/DataJenis/MasterJenis.jsx","Validasi/ValidasiMasterJenis.jsx"],"names":["FormModalDataJenis","Component","constructor","props","super","this","state","listgroup","aktif","componentDidMount","getData","then","res","setState","data","catch","err","console","log","setTimeout","isEdit","document","getElementById","focus","setIndex","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","Field","onChange","tabIndex","id","label","name","options","filter","list","undefined","kode_group","map","value","nama_group","disabled","placeholder","component","ReanderSelect","ReanderField","type","readOnly","onBlur","onClick","dispatch","hideModal","isLoading","submitting","Fragment","reduxForm","form","enableReinitialize","validate","ValidasiMasterJenis","connect","datamaster","ShowModalJenis","initialValues","kode_dept","nama_dept","hapusDataJenis","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","NotifSucces","getDataJenis","DataJenis","modalDialog","React","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","fomrEditDataJenis","bind","title","data_edit","data_post","putData","ToastNotification","reset","error","ErrorHandling","postData","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","content","DataJenis_FormModalDataJenis","event","errors","kode_kategori","kode_jenis","nama_jenis"],"mappings":"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","file":"static/js/19.c9955986.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\n\r\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport { getData } from \"../../../config/axios\";\r\nimport ValidasiMasterJenis from \"../../../Validasi/ValidasiMasterJenis.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalJenis !== null) {\r\n    return {\r\n      initialValues: {\r\n        // DataGroup: state.datamaster.GetDataGroup,\r\n        kode_group: state.datamaster.ShowModalJenis.kode_group,\r\n        kode_dept: state.datamaster.ShowModalJenis.kode_dept,\r\n        nama_dept: state.datamaster.ShowModalJenis.nama_dept,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormModalDataJenis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listgroup: [],\r\n      aktif: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    getData(\"group/get/all\")\r\n      .then((res) => {\r\n        this.setState({\r\n          listgroup: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTimeout(() => {\r\n      if (this.props.isEdit) {\r\n        document.getElementById('nama_dept').focus()\r\n      } else {\r\n        document.getElementById('kode_group').focus()\r\n      }\r\n    }, 100);\r\n   \r\n  }\r\n  setIndex() {\r\n    document.getElementById('kode_dept').focus()\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"form-group\">\r\n          <Field\r\n            onChange={()=>this.setIndex()}\r\n            tabIndex=\"1\"\r\n            id=\"kode_group\"\r\n            label=\"Kode Group\"\r\n            name=\"kode_group\"\r\n            options={this.state.listgroup\r\n              .filter((list) => list.kode_group !== undefined)\r\n              .map((list) => {\r\n                let data = {\r\n                  value: list.kode_group,\r\n                  name: list.kode_group + \" - \" + list.nama_group,\r\n                };\r\n                return data;\r\n              })}\r\n            value={this.props.kode_group}\r\n            disabled={this.props.isEdit}\r\n            placeholder={\"Silahkan Pilih Kode Group\"}\r\n            component={ReanderSelect}\r\n          />\r\n        </div>\r\n        <Field\r\n          id=\"kode_dept\"\r\n          tabIndex=\"2\"\r\n          name=\"kode_dept\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Jenis\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder=\"Masukan Kode Jenis\"\r\n        />\r\n        <Field\r\n          tabIndex=\"3\"\r\n          id=\"nama_dept\"\r\n          name=\"nama_dept\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Jenis\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Nama Jenis\"\r\n        />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={\r\n                this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"\r\n              }\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalDataJenis = reduxForm({\r\n  form: \"ModalDataJenis\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterJenis,\r\n})(FormModalDataJenis);\r\nexport default connect(maptostate, null)(FormModalDataJenis);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport {\r\n  ShowModalJenis,\r\n  showModal,\r\n  getDataJenis,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport FormModalDataJenis from \"./FormModalDataJenis.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataJenis: state.datamaster.getDataJenis,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nconst hapusDataJenis = (params, dispatch) => {\r\n  Swal.fire({\r\n    // title: 'Anda Yakin !!',\r\n    // text: 'Ingin Menghapus Data Ini ?',\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kode Jenis \" +\r\n      params +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"jenis/delete/by-kode-jenis/\" + params, {\r\n        data: {\r\n          kode_group: params,\r\n        },\r\n      }).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataJenis())\r\n        );\r\n      });\r\n    }\r\n  });\r\n};\r\nclass MasterJenis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Group\",\r\n        },\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Dept \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"nama_dept\",\r\n          text: \"Nama Dept\",\r\n        },\r\n\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              kode_dept: row.kode_dept,\r\n              nama_dept: row.nama_dept,\r\n              kode_group: row.kode_group,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.fomrEditDataJenis(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataJenis(row.kode_dept, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataJenis());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n    // console.log(data);\r\n    if (data.kode_dept === undefined) {\r\n      Swal.fire({\r\n        title: \"Oopss!! \",\r\n        text: \"Kode Group Harus Diisi !!!\",\r\n        icon: \"info\",\r\n      });\r\n      this.setState({ isLoading: false });\r\n      return false;\r\n    }\r\n    let data_edit = {\r\n      nama_dept: data.nama_dept,\r\n    };\r\n    let data_post = {\r\n      kode_dept: data.kode_dept,\r\n      nama_dept: data.nama_dept,\r\n      kode_group: data.kode_group,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"jenis/edit/by-kode-jenis/\" + data.kode_dept, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataJenis());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalDataJenis\"));\r\n          })\r\n          .catch((error) => this.ErrorHandling(error))\r\n      : postData(\"jenis/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataJenis());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalDataJenis\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) =>\r\n            ErrorHandling(\r\n              error,\r\n              \"jenis/reactive/by-kode-jenis/\",\r\n              data.kode_dept,\r\n              data_post,\r\n              this.props.dispatch,\r\n              getDataJenis(),\r\n              hideModal(),\r\n              \"ModalDataJenis\"\r\n            ).then(() => {\r\n              this.setState({ isLoading: false });\r\n            })\r\n          );\r\n  }\r\n\r\n  fomrEditDataJenis(dataEdit) {\r\n    // console.log(dataEdit);\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalJenis(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalJenis() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalJenis(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Jenis</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Jenis </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Jenis</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Jenis */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_dept\"\r\n              tambahData={true}\r\n              handleClick={() => this.ShowModalJenis()}\r\n              exportCsv={true}\r\n              data={this.props.DataJenis}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataJenis}\r\n              textEmpty=\"Data Jenis Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Jenis */}\r\n          <ModalGlobal\r\n            size=\"P\"\r\n            title={this.state.isEdit ? \"Edit Data Jenis\" : \"Tambah Data Jenis\"}\r\n            content={\r\n              <FormModalDataJenis\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Jenis  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterJenis);\r\n","const ValidasiMasterJenis = (value,event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode_group) {\r\n        errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kode_jenis) {\r\n        errors.kode_jenis = \"Kode Jenis Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.nama_jenis) {\r\n        errors.nama_jenis = \"Nama Jenis Tidak Boleh Kosong\";\r\n    }\r\n    // console.log(value.kode_group);\r\n   \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiMasterJenis;"],"sourceRoot":""}