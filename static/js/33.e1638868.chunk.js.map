{"version":3,"sources":["pages/DataMaster/DataKategori/MasterKategori.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_components_panel_panel_jsx__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_3___default","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_4___default","react_bootstrap_table2_paginator__WEBPACK_IMPORTED_MODULE_5__","react_bootstrap_table2_paginator__WEBPACK_IMPORTED_MODULE_5___default","_actions_datamaster_action_jsx__WEBPACK_IMPORTED_MODULE_6__","react_redux__WEBPACK_IMPORTED_MODULE_7__","sweetalert2__WEBPACK_IMPORTED_MODULE_8__","sweetalert2__WEBPACK_IMPORTED_MODULE_8___default","_components_helpers_notification_jsx__WEBPACK_IMPORTED_MODULE_9__","FormModalDataKategori","lazy","e","then","bind","SearchBar","Search","ExportCSVButton","CSVExport","hapusDataKategori","params","dispatch","console","log","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","NotifSucces","catch","err","ToastNotification","response","data","connect","state","hideModal","datamaster","modalDialog","React","Component","constructor","props","super","this","isEdit","isLoading","columns","dataField","text","sort","formatter","cell","a","createElement","parseFloat","toLocaleString","toFixed","csvExport","headerClasses","rowcontent","row","dataEdit","kode","nama_kategori","harga_pergram","presentase","kadar","className","onClick","formEditDataKategori","datakategori","handleSubmit","setState","showModal","ShowtModalKategori","showModalKategori","render","to","keyField","search","exportCSV","fileName","data-tip","searchProps","Object","assign","pagination","paginationFactory","baseProps","csvProps","title","isOpen","onSubmit"],"mappings":"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","file":"static/js/33.e1638868.chunk.js","sourcesContent":["import React, { lazy } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Panel, PanelHeader } from '../../../components/panel/panel.jsx';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { ShowtModalKategori, showModal } from '../../../actions/datamaster_action.jsx';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { NotifSucces, ToastNotification } from \"../../../components/helpers/notification.jsx\";\nconst FormModalDataKategori = lazy(() => import( './FormModalDataKategori.jsx'));\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst maptostate = (state) => {\n    return {\n        hideModal: state.datamaster.modalDialog\n    }\n}\nconst hapusDataKategori = (params, dispatch) => {\n  console.log(params);\n    Swal.fire({\n        html:\n        'Apakah Anda Yakin Ingin ' +\n        'Menghapus ' +\n        '<h1><b>Kode '+params+'</b> ?</h1>',\n        icon: 'warning',\n        position: 'top-center',\n        cancelButtonText: 'Tidak',\n        showCancelButton: true,\n        confirmButtonText: 'OK',\n        showConfirmButton: true,\n    }).then((result) => {\n        if (result.isConfirmed) {\n            NotifSucces('Data Berhasil Di Hapus')\n        }\n    }).catch((err) => {\n      ToastNotification(\"error\", err.response.data)\n    })\n\n}\nclass MasterKategori extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isEdit: false,\n          modalDialog: false,\n          isLoading: false,\n          columns: [\n            {\n              dataField: \"kode\",\n              text: \"Kode\",\n              sort: true,\n            },\n            {\n              dataField: \"nama_kategori\",\n              text: \"Nama Kategori\",\n            },\n            {\n              dataField: \"harga_pergram\",\n              text: \"Harga / Gram\",\n              formatter: (cell) => {\n                return (\n                  <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\n                );\n              },\n            },\n\n            {\n              dataField: \"presentase\",\n              text: \"Persentase\",\n              formatter: (cell) => {\n                return cell.toFixed(2);\n              },\n            },\n            {\n              dataField: \"kadar\",\n              text: \"Kadar\",\n            },\n            {\n              dataField: \"action\",\n              text: \"Action\",\n              csvExport: false,\n              headerClasses: \"text-center\",\n              formatter: (rowcontent, row) => {\n                let dataEdit = {\n                  kode: row.kode,\n                  nama_kategori: row.nama_kategori,\n                  harga_pergram: row.harga_pergram,\n                  presentase: row.presentase,\n                  kadar: row.kadar,\n                };\n                 \n                return (\n                  <div className=\"row text-center\">\n                    <div className=\"col-12\">\n                      <button\n                        onClick={() => this.formEditDataKategori(dataEdit)}\n                        className=\"btn btn-primary mr-3\"\n                      >  <i className=\"fa fa-edit\"></i>             \n                      </button>\n                      <button\n                        onClick={() =>\n                          hapusDataKategori(\n                            row.kode,\n                            this.props.dispatch\n                          )\n                        }\n                        className=\"btn btn-danger\"\n                      >\n                        <i className=\"fa fa-trash\"></i>  \n                      </button>\n                    </div>\n                  </div>\n                );\n              },\n            },\n          ],\n          datakategori: [\n            {\n              kode: \"CC\",\n              nama_kategori: \"Emas Tua\",\n              harga_pergram: \"7700000\",\n              presentase: \"80\",\n              kadar: \"17k\",\n            },\n          ],\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(data) {\n        this.setState({ isLoading: true });\n        console.log(data);\n    }\n    formEditDataKategori(dataEdit) {\n        this.props.dispatch(showModal())\n        this.props.dispatch(ShowtModalKategori(dataEdit));\n        this.setState({\n          isLoading: false,\n        });\n    }\n    showModalKategori() {\n        this.props.dispatch(showModal());\n        this.props.dispatch(ShowtModalKategori(false))\n        this.setState({\n          isEdit: false,\n          isLoading: false,\n        });\n    }\n    render() {\n\t\treturn (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Kategori</li>\n        </ol>\n        <h1 className=\"page-header\">Master Kategori </h1>\n        <Panel>\n          <PanelHeader>Master Kategori</PanelHeader>\n          <br />\n\n          {/* Master Kategori */}\n          <div className=\"container\">\n            <ToolkitProvider\n              keyField=\"kode\"\n              data={this.state.datakategori || []}\n              columns={this.state.columns}\n              search\n              exportCSV={{\n                fileName: \"Export Master Kategori.csv\",\n              }}\n            >\n              {(props) => (\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <button\n                      onClick={() => this.showModalKategori()}\n                      className=\"btn btn-primary\"\n                      data-tip=\"Tambah Data\"\n                    >\n                      <i className=\"fa fa-plus\"></i>\n                    </button>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-right\">\n                      <SearchBar {...props.searchProps} />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"col-12\">\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <br />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!! \n                    </ExportCSVButton>\n                  </div>\n                </div>\n              )}\n            </ToolkitProvider>\n          </div>\n          <br />\n          {/* End Master Kategori */}\n          <FormModalDataKategori\n            isEdit={this.state.isEdit}\n            isLoading={this.state.isLoading}\n            title={\n              this.state.isEdit ? \"Edit Data Kategori\" : \"Tambah Data Kategori\"\n            }\n            isOpen={this.props.hideModal}\n            onSubmit={(data) => this.handleSubmit(data)}\n          />\n\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Data Kategori' : 'Tambah Data Kategori' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\n\n          {/* End Tambah Master Kategori  */}\n        </Panel>\n      </div>\n    );\n\t}\n}\n\n\nexport default connect(maptostate, null)(MasterKategori);"],"sourceRoot":""}