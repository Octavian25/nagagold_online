{"version":3,"sources":["pages/Dashboard/dashboard.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_components_helpers_tabel__WEBPACK_IMPORTED_MODULE_2__","_components_panel_panel__WEBPACK_IMPORTED_MODULE_3__","DashboardV1","React","Component","constructor","props","super","this","toggle","bind","state","activeTab","tab","setState","componentDidMount","window","history","pushState","document","title","location","href","addEventListener","event","render","a","createElement","className","to","keyField","exportCsv","data","columns","dataField","text","empty","DataBaki","textEmpty"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAkQeS,UAvPf,cAA0BC,IAAMC,UAC9BC,YAAYC,GACVC,MAAMD,GAENE,KAAKC,OAASD,KAAKC,OAAOC,KAAKF,MAE/BA,KAAKG,MAAQ,CACXC,UAAW,KAyIfH,OAAOI,GACDL,KAAKG,MAAMC,YAAcC,GAC3BL,KAAKM,SAAS,CACZF,UAAWC,IAIjBE,oBACEC,OAAOC,QAAQC,UAAU,KAAMC,SAASC,MAAOJ,OAAOK,SAASC,MAC/DN,OAAOO,iBAAiB,WAAY,SAAUC,GAC5CR,OAAOC,QAAQC,UAAU,KAAMC,SAASC,MAAOJ,OAAOK,SAASC,QAGnEG,SAqCE,OACE5B,EAAA6B,EAAAC,cAAA,WACE9B,EAAA6B,EAAAC,cAAA,MAAIC,UAAU,6BACZ/B,EAAA6B,EAAAC,cAAA,MAAIC,UAAU,mBACZ/B,EAAA6B,EAAAC,cAAC5B,EAAA,EAAD,CAAM8B,GAAG,KAAT,cAEFhC,EAAA6B,EAAAC,cAAA,MAAIC,UAAU,mBAAd,cAEF/B,EAAA6B,EAAAC,cAAA,MAAIC,UAAU,eAAd,cACA/B,EAAA6B,EAAAC,cAAA,OAAKC,UAAU,OACb/B,EAAA6B,EAAAC,cAAA,OAAKC,UAAU,SACb/B,EAAA6B,EAAAC,cAAC1B,EAAA,EAAD,KACEJ,EAAA6B,EAAAC,cAAC1B,EAAA,EAAD,wBACAJ,EAAA6B,EAAAC,cAAA,WAEA9B,EAAA6B,EAAAC,cAAA,OAAKC,UAAU,aACb/B,EAAA6B,EAAAC,cAAC3B,EAAA,EAAD,CACE8B,SAAS,aACTC,WAAW,EACXC,KAAM,GACNC,QAxDY,CACxB,CACEC,UAAW,aACXC,KAAM,eAER,CACED,UAAW,gBACXC,KAAM,iBAER,CACED,UAAW,aACXC,KAAM,eA8CIC,MAAO5B,KAAKF,MAAM+B,SAClBC,UAAU,2BAGdzC,EAAA6B,EAAAC,cAAA,aAGJ9B,EAAA6B,EAAAC,cAAA,OAAKC,UAAU,SACb/B,EAAA6B,EAAAC,cAAC1B,EAAA,EAAD,KACEJ,EAAA6B,EAAAC,cAAC1B,EAAA,EAAD,sBACAJ,EAAA6B,EAAAC,cAAA,WAEA9B,EAAA6B,EAAAC,cAAA,OAAKC,UAAU,aACf/B,EAAA6B,EAAAC,cAAC3B,EAAA,EAAD,CACI8B,SAAS,YACTC,WAAW,EACXC,KAAM,GACNC,QA5De,CAC3B,CACEC,UAAW,YACXC,KAAM,cAER,CACED,UAAW,cACXC,KAAM,UAER,CACED,UAAW,YACXC,KAAM,QAER,CACED,UAAW,YACXC,KAAM,aAER,CACED,UAAW,cACXC,KAAM,gBA0CIC,MAAO5B,KAAKF,MAAM+B,SAClBC,UAAU,+BAGdzC,EAAA6B,EAAAC,cAAA","file":"static/js/29.36d8d9ed.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Tabel from \"../../components/helpers/tabel\";\nimport { Panel, PanelHeader } from \"../../components/panel/panel\";\n// import {\n//   Panel,\n//   PanelHeader,\n//   PanelBody,\n// } from \"../../components/panel/panel.jsx\";\n// import { Line } from \"react-chartjs-2\";\n\nclass DashboardV1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      activeTab: \"1\",\n    };\n\n    // this.lineChartData = {\n    //   labels: [\n    //     \"JAN\",\n    //     \"FEB\",\n    //     \"MAR\",\n    //     \"APR\",\n    //     \"MAY\",\n    //     \"JUN\",\n    //     \"JUL\",\n    //     \"AUG\",\n    //     \"SEP\",\n    //     \"OCT\",\n    //     \"NOV\",\n    //     \"DEC\",\n    //   ],\n    //   datasets: [\n    //     {\n    //       label: \"Page Views\",\n    //       fill: false,\n    //       lineTension: 0.1,\n    //       backgroundColor: \"rgba(0, 172, 172, 0.25)\",\n    //       borderColor: \"#00acac\",\n    //       borderWidth: 2,\n    //       pointBorderColor: \"#00acac\",\n    //       pointBackgroundColor: \"#fff\",\n    //       pointBorderWidth: 2,\n    //       pointHoverRadius: 5,\n    //       pointHoverBackgroundColor: \"#fff\",\n    //       pointHoverBorderColor: \"#00acac\",\n    //       pointHoverBorderWidth: 3,\n    //       pointRadius: 3,\n    //       pointHitRadius: 10,\n    //       data: [65, 59, 80, 81, 56, 55, 40, 59, 76, 94, 77, 82],\n    //     },\n    //     {\n    //       label: \"Visitors\",\n    //       fill: false,\n    //       lineTension: 0.1,\n    //       backgroundColor: \"rgba(52, 143, 226, 0.25)\",\n    //       borderColor: \"#348fe2\",\n    //       borderWidth: 2,\n    //       pointBorderColor: \"#348fe2\",\n    //       pointBackgroundColor: \"#fff\",\n    //       pointBorderWidth: 2,\n    //       pointHoverRadius: 5,\n    //       pointHoverBackgroundColor: \"#fff\",\n    //       pointHoverBorderColor: \"#348fe2\",\n    //       pointHoverBorderWidth: 3,\n    //       pointRadius: 3,\n    //       pointHitRadius: 10,\n    //       data: [25, 29, 40, 45, 16, 15, 20, 39, 26, 44, 57, 32],\n    //     },\n    //   ],\n    // };\n\n    // this.lineChartOptions = {\n    //   maintainAspectRatio: false,\n    //   scales: {\n    //     yAxes: [\n    //       {\n    //         ticks: {\n    //           beginAtZero: true,\n    //           fontColor: \"black\",\n    //         },\n    //       },\n    //     ],\n    //     xAxes: [\n    //       {\n    //         ticks: {\n    //           fontColor: \"black\",\n    //         },\n    //       },\n    //     ],\n    //   },\n    //   legend: {\n    //     labels: {\n    //       fontColor: \"black\",\n    //     },\n    //   },\n    // };\n\n    // this.map = {\n    //   center: {\n    //     lat: 59.95,\n    //     lng: 30.33,\n    //   },\n    //   zoom: 9,\n    // };\n\n    // this.date = new Date();\n\n    // this.sparklineData = [\n    //   {\n    //     values: [789, 880, 676, 200, 890, 677, 900],\n    //     colors: { area: \"transparent\", line: \"#ff5b57\" },\n    //   },\n    // ];\n\n    // this.sparklineData2 = [\n    //   {\n    //     values: [789, 880, 676, 200, 890, 677, 900],\n    //     colors: { area: \"transparent\", line: \"#f59c1a\" },\n    //   },\n    // ];\n\n    // this.sparklineData3 = [\n    //   {\n    //     values: [789, 880, 676, 200, 890, 677, 900],\n    //     colors: { area: \"transparent\", line: \"#00acac\" },\n    //   },\n    // ];\n\n    // this.sparklineData4 = [\n    //   {\n    //     values: [789, 880, 676, 200, 890, 677, 900],\n    //     colors: { area: \"transparent\", line: \"#348fe2\" },\n    //   },\n    // ];\n\n    // this.sparklineData5 = [\n    //   {\n    //     values: [789, 880, 676, 200, 890, 677, 900],\n    //     colors: { area: \"transparent\", line: \"#ccc\" },\n    //   },\n    // ];\n\n    // this.sparklineData6 = [\n    //   {\n    //     values: [789, 880, 676, 200, 890, 677, 900],\n    //     colors: { area: \"transparent\", line: \"#2d353c\" },\n    //   },\n    // ];\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n  componentDidMount() {\n    window.history.pushState(null, document.title, window.location.href);\n    window.addEventListener(\"popstate\", function (event) {\n      window.history.pushState(null, document.title, window.location.href);\n    });\n  }\n  render() {\n   let columnsDataTransaksi = [\n      {\n        dataField: \"kode_sales\",\n        text: \"Kode Sales \",\n      },\n      {\n        dataField: \"nama_customer\",\n        text: \"Nama Customer\",\n      },\n      {\n        dataField: \"total_uang\",\n        text: \"Total Uang\",\n      },\n    ];\n   let columnsDataTerimaBarang = [\n      {\n        dataField: \"no_terima\",\n        text: \"No Terima \",\n      },\n      {\n        dataField: \"kode_gudang\",\n        text: \"Gudang\",\n      },\n      {\n        dataField: \"kode_baki\",\n        text: \"Baki\",\n      },\n      {\n        dataField: \"total_pcs\",\n        text: \"Total PCS\",\n      },\n      {\n        dataField: \"total_berat\",\n        text: \"Total Berat\",\n      },\n    ];\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Dashboard</Link>\n          </li>\n          <li className=\"breadcrumb-item\">Dashboard</li>\n        </ol>\n        <h1 className=\"page-header\">Dashboard </h1>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <Panel>\n              <PanelHeader>Total Transaksi</PanelHeader>\n              <br />\n              {/* Blank Page */}\n              <div className=\"container\">\n                <Tabel\n                  keyField=\"kode_sales\"\n                  exportCsv={true}\n                  data={[]}\n                  columns={columnsDataTransaksi}\n                  empty={this.props.DataBaki}\n                  textEmpty=\"Data Transaksi Kosong\"\n                />\n              </div>\n              <br />\n            </Panel>\n          </div>\n          <div className=\"col-6\">\n            <Panel>\n              <PanelHeader>Terima Barang</PanelHeader>\n              <br />\n              {/* Blank Page */}\n              <div className=\"container\">\n              <Tabel\n                  keyField=\"no_terima\"\n                  exportCsv={true}\n                  data={[]}\n                  columns={columnsDataTerimaBarang}\n                  empty={this.props.DataBaki}\n                  textEmpty=\"Data Terima Barang Kosong\"\n                />\n              </div>\n              <br />\n            </Panel>\n          </div>\n        </div>\n        {/* End Tambah Blank Page  */}\n      </div>\n    );\n  }\n}\n\nexport default DashboardV1;\n"],"sourceRoot":""}