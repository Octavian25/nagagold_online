{"version":3,"sources":["pages/Barang/HancurDataBarang/HeadaHancurDataBarang.jsx","pages/Barang/HancurDataBarang/FormHancurBarang.jsx","Validasi/Barang/PindahBarang/ValidasiPindahBarang.jsx","pages/Barang/HancurDataBarang/OtorisasiHancur.jsx"],"names":["HeadaHancurDataBarang","Component","constructor","props","super","this","state","date","Date","isLoadingBatal","kondisi_barang","componentDidMount","dispatch","getDataKondisiBarang","getKodeBarcode","e","clearTimeout","delay","setTimeout","getData","then","res","data","length","ToastNotification","change","forEach","list","index","kode_barcode","kode_group","kode_dept","nama_barang","nama_atribut","berat","cek","JSON","parse","localStorage","getItem","findIndex","hasil","push","setItem","stringify","setHancurBarang","catch","err","response","batalHancur","setState","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","key","preventDefault","className","Field","label","name","onChange","options","datakondisi","filter","undefined","map","value","placeholder","component","ReanderSelect","target","ReanderField","type","tabel","keyField","pagination","exportCsv","columns","empty","textEmpty","disabled","isLoading","Fragment","onClick","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiPindahBarang","connect","datamaster","databarang","React","isEdit","modalDialog","isLoadingOtorisasi","dataField","text","footerAttrs","colSpan","footer","cell","row","num","formatter","toFixed","columnData","reduce","acc","item","csvExport","headerClasses","rowcontent","hapusdata","bind","id","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","splice","showModal","hancurBarang","user_id","username","password","kategori","description","keterangan","postData2","resposn","detail_barang","postData","hideModal","error","errorhandling","test","react_router_dom","to","panel","HancurDataBarang_HeadaHancurDataBarang","ModalGlobal","size","content","OtorisasiHancur","errors","kode_gudang","kode_baki","statusAktif","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","redux_form__WEBPACK_IMPORTED_MODULE_3__","_components_helpers_field__WEBPACK_IMPORTED_MODULE_4__","document","getElementById","focus","HiidenFiled"],"mappings":"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","file":"static/js/6.b741d006.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { setHancurBarang } from \"../../../actions/databarang_action\";\nimport { getDataKondisiBarang } from \"../../../actions/datamaster_action\";\nimport { ReanderSelect, ReanderField } from \"../../../components/helpers/field\";\nimport { ToastNotification } from \"../../../components/helpers/notification\";\nimport Tabel from \"../../../components/helpers/tabel\";\nimport { getData } from \"../../../config/axios\";\nimport ValidasiPindahBarang from \"../../../Validasi/Barang/PindahBarang/ValidasiPindahBarang\";\nimport Loading from 'react-fullscreen-loading';\nconst maptostate = (state) => {\n  return {\n    datakondisi: state.datamaster.getDataKondisiBarang,\n    setHancurBarang: state.databarang.setHancurBarang,\n  };\n};\nclass HeadaHancurDataBarang extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      isLoadingBatal: false,\n      kondisi_barang: \"kosong\",\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataKondisiBarang());\n  }\n  getKodeBarcode(e) {\n    clearTimeout(this.delay)\n    this.delay = setTimeout(() => {\n      if(e === \"\"){\n        return false;\n      }\n      getData(\"barang/open/kode-barcode/\" + e)\n        .then((res) => {\n          if (res.data.length === 0) {\n            ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\n          } else {\n            if (this.state.kondisi_barang ===\"kosong\") {\n                ToastNotification(\"info\", \"Kondisi Barang Harus Dipilih\");\n                this.props.change(\"kode_barcode\", \"\");\n            } else {\n              res.data.forEach((list, index) => {\n                let data = {\n                  kode_barcode: list.kode_barcode,\n                  kode_group: list.kode_group,\n                  kode_dept: list.kode_dept,\n                  nama_barang: list.nama_barang,\n                  nama_atribut: list.nama_atribut,\n                  berat: list.berat,\n                  kondisi_barang: this.state.kondisi_barang,\n                };\n                //   console.log(data);\n                let cek =\n                  JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\")) ||\n                  [];\n                let hasil_cek = cek.findIndex(\n                  (hasil) => hasil.kode_barcode === e\n                );\n                //   console.log(index);\n                if (hasil_cek === -1) {\n                  cek.push(data);\n                  localStorage.setItem(\n                    \"data_barang_hancur_tmp\",\n                    JSON.stringify(cek)\n                  );\n                    this.props.dispatch(setHancurBarang(cek));\n                   this.props.change(\"kode_barcode\", \"\");\n                }\n              });\n            }\n          }\n        })\n        .catch((err) => {\n          ToastNotification(\"info\", err.response && err.response.data);\n        });\n    }, 1500);\n  }\n\n  batalHancur() {\n    this.setState({ isLoadingBatal: true })\n    setTimeout(() => {\n      this.setState({ isLoadingBatal: false })\n      localStorage.setItem('data_barang_hancur_tmp', JSON.stringify([]))\n      this.props.dispatch(setHancurBarang([]));\n    }, 500);\n  }\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\"\n      onKeyPress={(e) => {\n        e.key === \"Enter\" && e.preventDefault();\n      }}\n      >\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <Field\n              label=\"Kondisi Barang\"\n              name=\"kondisi_barang\"\n              onChange={(e) => {\n                this.setState({ kondisi_barang: e });\n              }}\n              options={this.props.datakondisi\n                .filter((list) => list.kondisi_barang !== undefined)\n                .map((list) => {\n                  let data = {\n                    value: list.kondisi_barang,\n                    name: list.kondisi_barang,\n                  };\n                  return data;\n                })}\n              placeholder={\"Silahkan Pilih Kondisi Barang\"}\n              component={ReanderSelect}\n            />\n          </div>\n\n          <div className=\"col-lg-6\">\n            <Field\n              onChange={(e) => this.getKodeBarcode(e.target.value)}\n              name=\"kode_barcode\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Kode Barcode\"\n              placeholder=\"Masukan Kode Barcode\"\n            />\n          </div>\n        </div>\n        <Tabel\n          keyField=\"kode_barcode\"\n          pagination=\"off\"\n          exportCsv={false}\n          data={\n            this.props.setHancurBarang.length === 0\n              ? JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"))\n              : this.props.setHancurBarang\n          }\n          columns={this.props.columns}\n          empty={true}\n          textEmpty=\"Data Barang Kosong\"\n        />\n        <div className=\"row\">\n          <div className=\"col-10\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              disabled={this.props.isLoading}\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n            &nbsp;\n            <button\n              className=\"btn btn-warning\"\n              type=\"button\"\n              onClick={()=>this.batalHancur()}\n              disabled={this.props.isLoading}\n            >\n              {this.state.isLoadingBatal ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Membatal\n                </>\n              ) : (\n                \"Batal\"\n              )}\n            </button>\n          </div>\n          {/* <div className=\"2\">\n            {JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\")) ===\n            null ? null : (\n              <>\n                Total Barang :{\" \"}\n                {this.props.setHancurBarang.length === 0\n                  ? JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"))\n                      .length || 0\n                  : this.props.setHancurBarang.length || 0}\n                <br />\n                Total Berat :\n                {this.props.setHancurBarang.length === 0\n                  ? JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"))\n                      .map((column, key) => column.berat)\n                      .reduce((a, b) => a + b, 0)\n                      .toFixed(1)\n                  : this.props.setHancurBarang\n                      .map((column, key) => column.berat)\n                      .reduce((a, b) => a + b, 0)\n                      .toFixed(1)}\n              </>\n            )}\n          </div> */}\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadaHancurDataBarang = reduxForm({\n  form: \"HeadaHancurDataBarang\",\n  enableReinitialize: true,\n  validate: ValidasiPindahBarang,\n})(HeadaHancurDataBarang);\nexport default connect(maptostate, null)(HeadaHancurDataBarang);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport { connect } from \"react-redux\";\nimport HeadaHancurDataBarang from \"./HeadaHancurDataBarang.jsx\";\nimport Swal from \"sweetalert2\";\nimport { setHancurBarang } from \"../../../actions/databarang_action.jsx\";\nimport { postData, postData2 } from \"../../../config/axios.jsx\";\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\nimport { hideModal, showModal } from \"../../../actions/datamaster_action.jsx\";\nimport OtorisasiHancur from \"./OtorisasiHancur.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nconst maptostate = (state) => {\n  return {\n    setHancurBarang: state.databarang.setHancurBarang,\n  };\n};\n\nclass FormHancurBarang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      isLoadingOtorisasi: false,\n      columns: [\n        {\n          dataField: \"kode_barcode\",\n          text: \"Kode Barcode\",\n          footerAttrs: {\n            colSpan: \"5\",\n          },\n          footer: (cell, row, num, index) => {\n            return (\n              <div>\n                Total Barang :{\" \"}\n                {this.props.setHancurBarang.length === 0\n                  ? JSON.parse(\n                      localStorage.getItem(\"data_barang_hancur_tmp\")\n                    ) === null\n                    ? 0\n                    : JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"))\n                        .length || 0\n                  : this.props.setHancurBarang.length || 0}{\" \"}\n              </div>\n            );\n          },\n        },\n\n        {\n          dataField: \"kode_group\",\n          text: \"Gudang Asal\",\n        },\n        {\n          dataField: \"kode_dept\",\n          text: \"Baki Asal\",\n        },\n        {\n          dataField: \"nama_barang\",\n          text: \"Nama Barang\",\n        },\n        {\n          dataField: \"nama_atribut\",\n          text: \"Nama Atribut\",\n        },\n        {\n          dataField: \"berat\",\n          text: \"Berat\",\n          formatter: (cell) => {\n            return cell.toFixed(3);\n          },\n          footer: (columnData) =>\n            columnData.reduce((acc, item) => acc + item, 0).toFixed(3),\n        },\n        {\n          dataField: \"kondisi_barang\",\n          text: \"Kondisi Barang\",\n          footer: \"\",\n        },\n\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row, index) => {\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    type=\"button\"\n                    onClick={() => this.hapusdata(index)}\n                    className=\"btn btn-danger mr-3\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n          footer: \"\",\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  hapusdata(id) {\n    Swal.fire({\n      title: \"Anda Yakin !!\",\n      text: \"Ingin Menghapus Data Ini ?\",\n      icon: \"warning\",\n      position: \"top-center\",\n      cancelButtonText: \"Tidak\",\n      showCancelButton: true,\n      confirmButtonText: \"OK\",\n      showConfirmButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let data = JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\"));\n        data.splice(id, 1);\n        localStorage.setItem(\"data_barang_hancur_tmp\", JSON.stringify(data));\n        this.props.dispatch(setHancurBarang(data));\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\n        // this.props.dispatch(getListReturnSupplier());\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    this.props.dispatch(showModal());\n  }\n\n  hancurBarang(data) {\n    this.setState({\n      isLoadingOtorisasi: true,\n    });\n    let hasil = {\n      user_id: data.username,\n      password: data.password,\n      kategori: \"HANCUR BARANG\",\n      description: \"SIMPAN HANCUR BARANG\",\n      keterangan: data.keterangan || \"-\"\n    }\n    postData2(\"authorization\", hasil)\n      .then((resposn) => {\n        ToastNotification(\"success\", \"Otorisasi Berhasil\");\n\n        this.setState({ isLoading: true });\n        let data =\n          this.props.setHancurBarang.length === 0\n            ? JSON.parse(localStorage.getItem(\"data_barang_hancur_tmp\")) || 0\n            : this.props.setHancurBarang || 0;\n        // console.log(data);\n        let hasil = {\n          detail_barang: data,\n        };\n        postData(\"hancurbarang/add\", hasil)\n          .then(() => {\n            this.setState({ isLoading: false, isLoadingOtorisasi: false });\n          })\n          .then(() => {\n            localStorage.setItem(\"data_barang_hancur_tmp\", JSON.stringify([]));\n          })\n          .then(() => {\n            this.props.dispatch(setHancurBarang([]));\n          })\n          .then(() => {\n            this.setState({\n              isLoadingOtorisasi: false,\n            });\n            this.props.dispatch(hideModal());\n            ToastNotification(\"success\", \"Data Berhasil Dihancur\");\n          })\n          .catch((error) => {\n            this.setState({\n              isLoadingOtorisasi: false,\n            });\n            this.errorhandling(error)});\n      })\n      .catch((err) => {\n        ToastNotification(\"info\", \"Username atau Password Salah\");\n        this.setState({\n          isLoadingOtorisasi: false,\n        });\n      });\n  }\n  errorhandling(error) {\n    ToastNotification(\"info\", /conflict/i.test(error.response.data) ? \"Terjadi Kesalahan Saat Mengirim Data\" : error.response.data);\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Barang</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Hancur Barang</li>\n        </ol>\n        <h1 className=\"page-header\">Hancur Barang </h1>\n        <Panel>\n          <PanelHeader>Hancur Barang</PanelHeader>\n          <br />\n\n          {/* Hancur Barang */}\n          <div className=\"container\">\n            <HeadaHancurDataBarang\n              isLoading={this.state.isLoading}\n              onSubmit={(data) => this.handleSubmit(data)}\n              columns={this.state.columns}\n            />\n          </div>\n          <br />\n          {/* End Hancur Barang */}\n\n          {/* End Tambah Hancur Barang  */}\n          <ModalGlobal\n            size=\"L\"\n            title=\"Otorisasi Hancur Barang\"\n            content={\n              <OtorisasiHancur\n                keterangan\n                isLoadingOtorisasi={this.state.isLoadingOtorisasi}\n                onSubmit={(data) => this.hancurBarang(data)}\n              />\n            }\n          />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(FormHancurBarang);\n","const ValidasiPindahBarang = (value) => {\n    const errors = {};\n    if (!value.kode_gudang) {\n        errors.kode_gudang = \"Kode Gudang Tidak Boleh Kosong\";\n    }\n    if (!value.kode_baki) {\n        errors.kode_baki = \"Nama Baki Tidak Boleh Kosong\";\n    }\n\n    if (!value.statusAktif) {\n        errors.statusAktif = \"Status Tidak Boleh Kosong\";\n    }\n\n    return errors;\n}\nexport default ValidasiPindahBarang;\n\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\n\nclass OtorisasiHancur extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    // let data = JSON.parse(localStorage.getItem(\"no_faktur_batal_jual\"));\n    // this.props.change(\"no_faktur_group\", data.no_faktur_group);\n    // this.props.change(\"alasan\", data.alasan);\n    setTimeout(() => {\n      document.getElementById('username').focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <Field\n              name=\"no_faktur_group\"\n              component={HiidenFiled}\n              type=\"hidden\"\n            />\n            <Field name=\"alasan\" component={HiidenFiled} type=\"hidden\" />\n            <Field\n              id=\"username\"\n              name=\"username\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Username\"\n              placeholder=\"Masukan Username\"\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <Field\n              name=\"password\"\n              component={ReanderField}\n              type=\"password\"\n              label=\"Password\"\n              placeholder=\"Masukan Password\"\n            />\n          </div>\n          <div className={this.props.keterangan ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            <Field\n              name=\"keterangan\"\n              component={ReanderField}\n              label=\"Keterangan\"\n              placeholder=\"Masukan Keterangan\"\n            />\n          </div>\n          <div className=\"col-lg-12\">\n            <label> &nbsp; </label>\n            <button\n              type=\"submit\"\n              name=\"type_btn\"\n              className=\"btn btn-primary btn-block\"\n              disabled={this.props.isLoadingOtorisasi}\n            >\n              {this.props.isLoadingOtorisasi ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Otorisasi\n                </>\n              ) : (\n                \"Otorisasi\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nOtorisasiHancur = reduxForm({\n  form: \"OtorisasiHancur\",\n  enableReinitialize: true,\n})(OtorisasiHancur);\nexport default connect(null)(OtorisasiHancur);\n"],"sourceRoot":""}