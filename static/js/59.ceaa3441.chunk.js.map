{"version":3,"sources":["pages/ManageUsers/DataUsers/FormDataUser.jsx","pages/ManageUsers/DataUsers/DataUsers.jsx"],"names":["options","value","name","FormTambahUser","Component","[object Object]","args","super","this","state","componentDidMount","setTimeout","props","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","id","label","readOnly","placeholder","component","ReanderField","type","className","level","ReanderSelect","Fragment","disabled","submitting","isLoading","onClick","dispatch","hideModal","reduxForm","form","enableReinitialize","validate","ValidasiDataUsers","connect","manageusers","ShowModalTambahUser","initialValues","user_id","usere_name","password","retype_password","SearchBar","Search","ExportCSVButton","CSVExport","hapusDataUser","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataUser","DataUsers","datamaster","modalDialog","React","constructor","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditBaki","bind","setState","undefined","NotifInfo","data_edit","user_name","data_post","putData","reset","catch","error","NotifError","postData","showModal","react_router_dom","to","panel","react_bootstrap_table2_toolkit_lib_default","keyField","search","exportCSV","fileName","searchProps","lib_default","Object","assign","pagination","paginationFactory","baseProps","csvProps","ModalGlobal","title","size","content","FormDataUser"],"mappings":"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","file":"static/js/59.ceaa3441.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\r\n\r\nconst options = [\r\n  { value: \"ADMIN\", name: \"ADMIN\" },\r\n  { value: \"OWN\", name: \"OWNER\" },\r\n];\r\nconst maptostate = (state) => {\r\n  if (state.manageusers.ShowModalTambahUser !== null) {\r\n    return {\r\n      initialValues: {\r\n        user_id: state.manageusers.ShowModalTambahUser.user_id,\r\n        usere_name: state.manageusers.ShowModalTambahUser.usere_name,\r\n        level: state.manageusers.ShowModalTambahUser.level,\r\n        password: state.manageusers.ShowModalTambahUser.password,\r\n        retype_password: state.manageusers.ShowModalTambahUser.retype_password,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormTambahUser extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n        ? document.getElementById(\"usere_name\").focus()\r\n        : document.getElementById(\"user_id\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <Field\r\n          id=\"user_id\"\r\n          label=\"User Id\"\r\n          name=\"user_id\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder={\"Silahkan Masukan User Id\"}\r\n          component={ReanderField}\r\n        />\r\n        <Field\r\n          id=\"usere_name\"\r\n          name=\"usere_name\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Username\"\r\n          placeholder=\"Masukan Username\"\r\n        />\r\n        <div className=\"form-group\">\r\n          <Field\r\n            label=\"Level\"\r\n            name=\"level\"\r\n            options={options}\r\n            value={this.props.level}\r\n            // disabled={this.props.isEdit}\r\n            placeholder={\"Silahkan Pilih Level\"}\r\n            component={ReanderSelect}\r\n          />\r\n        </div>\r\n        {!this.props.isEdit ? (\r\n          <>\r\n            <Field\r\n              name=\"password\"\r\n              component={ReanderField}\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"Masukan Passsword\"\r\n            />\r\n            <Field\r\n              name=\"retype_password\"\r\n              component={ReanderField}\r\n              type=\"password\"\r\n              label=\"Retype Password\"\r\n              placeholder=\"Masukan Retype Password\"\r\n            />\r\n          </>\r\n        ) : null}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTambahUser = reduxForm({\r\n  form: \"ModalTambahUsers\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiDataUsers,\r\n})(FormTambahUser);\r\nexport default connect(maptostate, null)(FormTambahUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { hideModal, showModal } from \"../../../actions/datamaster_action.jsx\";\r\nimport {\r\n  getDataUser,\r\n  ShowModalTambahUser,\r\n} from \"../../../actions/mageuser_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifError,\r\n  NotifInfo,\r\n  NotifSucces,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport FormDataUser  from \"./FormDataUser.jsx\"\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataUsers: state.manageusers.getDataUser,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nconst hapusDataUser = (params, dispatch) => {\r\n  Swal.fire({\r\n    // title: \"Anda Yakin !!\",\r\n    // text: \"Ingin Menghapus Data Ini ?\",\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>User Id \" +\r\n      params +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"users/delete/id/\" + params, {\r\n        data: {\r\n          user_id: params,\r\n        },\r\n      }).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataUser())\r\n        );\r\n      });\r\n    }\r\n  });\r\n};\r\nclass DataUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"user_id\",\r\n          text: \"User Id \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"usere_name\",\r\n          text: \"User Name\",\r\n        },\r\n        {\r\n          dataField: \"level\",\r\n          text: \"Level\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              user_id: row.user_id,\r\n              usere_name: row.usere_name,\r\n              level: row.level,\r\n            };\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditBaki(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataUser(row.user_id, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      //   DataBaki: [\r\n      //     {\r\n      //       user_id: \"TK\",\r\n      //       usere_name: \"CCKL\",\r\n      //       level: \"KALUNG MUDA\",\r\n      //     },\r\n      //   ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataUser());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n    if (data.level === undefined) {\r\n      NotifInfo(\"Silahkan Pilih Status\");\r\n      return false;\r\n    }\r\n    if (data.level === 3) {\r\n      NotifInfo(\"Silahkan Pilih Status\");\r\n      return false;\r\n    }\r\n    let data_edit = {\r\n      user_name: data.usere_name,\r\n      level: data.level,\r\n    };\r\n    let data_post = {\r\n      user_id: data.user_id,\r\n      user_name: data.usere_name,\r\n      level: data.level,\r\n      password: data.password,\r\n      retype_password: data.retype_password,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"users/update/id/\" + data.user_id, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(NotifSucces(\"Data Berhasil Di Edit\"))\r\n          .then(() => {\r\n            this.props.dispatch(getDataUser());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalTambahUsers\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => NotifError(error))\r\n      : postData(\"users/add/user\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(NotifSucces(\"Data Berhasil Di Simpan\"))\r\n          .then(() => {\r\n            this.props.dispatch(getDataUser());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalTambahUsers\"));\r\n          })\r\n          .catch((error) => NotifError(error));\r\n  }\r\n  formEditBaki(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalTambahUser(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalTambahUser() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalTambahUser(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Manage Users</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Data Users</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Data Users </h1>\r\n        <Panel>\r\n          <PanelHeader>Data Users</PanelHeader>\r\n          <br />\r\n\r\n          {/* Data Users */}\r\n          <div className=\"container\">\r\n            <ToolkitProvider\r\n              keyField=\"user_id\"\r\n              data={this.props.DataUsers || []}\r\n              columns={this.state.columns}\r\n              search\r\n              exportCSV={{\r\n                fileName: \"Export Data Users.csv\",\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <button\r\n                      onClick={() => this.ShowModalTambahUser()}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fa fa-plus\"></i>{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"text-right\">\r\n                      <SearchBar {...props.searchProps} />\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"col-12\">\r\n                    <BootstrapTable\r\n                      pagination={paginationFactory()}\r\n                      {...props.baseProps}\r\n                    />\r\n                    <br />\r\n                    <ExportCSVButton {...props.csvProps}>\r\n                      Export CSV!!\r\n                    </ExportCSVButton>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ToolkitProvider>\r\n          </div>\r\n          <br />\r\n          {/* End Data Users */}\r\n          <ModalGlobal\r\n            title={this.state.isEdit ? \"Edit Data Users\" : \"Tambah Data Users\"}\r\n            size=\"P\"\r\n            content={\r\n              <FormDataUser\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Data Users  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(DataUsers);\r\n"],"sourceRoot":""}