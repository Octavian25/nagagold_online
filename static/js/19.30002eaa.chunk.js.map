{"version":3,"sources":["pages/DataMaster/DataGudang/FormModalMasterGudang.jsx","pages/DataMaster/DataGudang/MasterGudang.jsx","Validasi/ValidasiMasterGudang.jsx"],"names":["FormModalMasterGudang","Component","constructor","props","super","this","state","listgroup","aktif","componentDidMount","setTimeout","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Field","id","tabIndex","name","component","ReanderField","type","label","readOnly","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Fragment","reduxForm","form","enableReinitialize","validate","ValidasiMasterGudang","connect","datamaster","ShowModalGudang","initialValues","kode_gudang","nama_gudang","hapusDataGudang","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataGudang","DataGudang","modalDialog","React","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditDataKategori","bind","data_edit","data_post","putData","ToastNotification","reset","catch","error","ErrorHandling","postData","showModal","shoModalGudang","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","ModalGlobal","size","title","content","DataGudang_FormModalMasterGudang","value","event","errors"],"mappings":"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","file":"static/js/19.30002eaa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterGudang from \"../../../Validasi/ValidasiMasterGudang.jsx\";\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalGudang !== null) {\n    return {\n      initialValues: {\n        kode_gudang: state.datamaster.ShowModalGudang.kode_gudang,\n        nama_gudang: state.datamaster.ShowModalGudang.nama_gudang,\n      },\n    };\n  }\n};\nclass FormModalMasterGudang extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listgroup: [],\n      aktif: false,\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.isEdit\n      ? document.getElementById(\"nama_gudang\").focus()\n      : document.getElementById(\"kode_gudang\").focus()\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <Field\n          id=\"kode_gudang\"\n          tabIndex=\"1\"\n          name=\"kode_gudang\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Gudang\"\n          readOnly={this.props.isEdit}\n          placeholder=\"Masukan Kode Gudang\"\n        />\n        <Field\n          tabIndex=\"2\"\n          id=\"nama_gudang\"\n          name=\"nama_gudang\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Nama Gudang\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Nama Gudang\"\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"3\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nFormModalMasterGudang = reduxForm({\n  form: \"ModalMasterGudang\",\n  enableReinitialize: true,\n  validate: ValidasiMasterGudang,\n})(FormModalMasterGudang);\nexport default connect(maptostate, null)(FormModalMasterGudang);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\n\nimport {\n  ShowModalGudang,\n  showModal,\n  getDataGudang,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nimport FormModalMasterGudang from \"./FormModalMasterGudang.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    DataGudang: state.datamaster.getDataGudang,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst hapusDataGudang = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Gudang \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"gudang/delete/by-kode-gudang/\" + params, {\n        data: {\n          kode_gudang: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getDataGudang())\n        );\n      });\n    }\n  });\n};\nclass MasterGudang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_gudang\",\n          text: \"Kode Gudang \",\n          sort: true,\n        },\n        {\n          dataField: \"nama_gudang\",\n          text: \"Nama Gudang \",\n          sort: true,\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_gudang: row.kode_gudang,\n              nama_gudang: row.nama_gudang,\n            };\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditDataKategori(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataGudang(row.kode_gudang, this.props.dispatch)\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n      // dataGudang: [\n      //   {\n      //     kode_gudang: \"tk\",\n      //     nama_gudang: \"Toko\",\n      //   },\n      // ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataGudang());\n  }\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    // console.log(data);\n    let data_edit = {\n      kode_gudang: data.kode_gudang,\n      nama_gudang: data.nama_gudang,\n    };\n    let data_post = {\n      kode_gudang: data.kode_gudang,\n      nama_gudang: data.nama_gudang,\n    };\n    this.state.isEdit\n      ? putData(\"gudang/edit/by-kode-gudang/\" + data.kode_gudang, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataGudang());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalMasterGudang\"));\n          })\n          .catch((error) => this.ErrorHandling(error))\n      : postData(\"gudang/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataGudang());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalMasterGudang\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"gudang/reactive/by-kode-gudang/\",\n              data.kode_gudang,\n              data_post,\n              this.props.dispatch,\n              getDataGudang(),\n              hideModal(),\n              \"ModalMasterGudang\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n\n  formEditDataKategori(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalGudang(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  shoModalGudang() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalGudang(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Gudang</li>\n        </ol>\n        <h1 className=\"page-header\">Master Gudang </h1>\n        <Panel>\n          <PanelHeader>Master Gudang</PanelHeader>\n          <br />\n\n          {/* Master Gudang */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_gudang\"\n              tambahData={true}\n              handleClick={() => this.shoModalGudang()}\n              exportCsv={true}\n              data={this.props.DataGudang}\n              columns={this.state.columns}\n              empty={this.props.DataGudang}\n              textEmpty=\"Data Gudang Kosong\"\n            />\n          </div>\n          <br />\n          {/* End Master Gudang */}\n          <ModalGlobal\n            size=\"P\"\n            title={\n              this.state.isEdit ? \"Edit Data Gudang\" : \"Tambah Data Gudang\"\n            }\n            content={\n              <FormModalMasterGudang\n                isEdit={this.state.isEdit}\n                isLoading={this.state.isLoading}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Gudang  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterGudang);\n","const ValidasiMasterGudang = (value, event) => {\n  const errors = {};\n  // console.log(event.charCode==13);\n  if (!value.kode_gudang) {\n    errors.kode_gudang = \"Kode Gudang Tidak Boleh Kosong\";\n  }\n  if (!value.nama_gudang) {\n    errors.nama_gudang = \"Nama Gudang Tidak Boleh Kosong\";\n  }\n  return errors;\n};\n\nexport default ValidasiMasterGudang;\n"],"sourceRoot":""}