{"version":3,"sources":["Validasi/ValidasiParameterRugiNota.jsx","pages/DataMaster/ParameterRugiNota/FormParameterRugiNota.jsx","pages/DataMaster/ParameterRugiNota/MasterParameterRugiNota.jsx"],"names":["ValidasiParameterRugiNota","value","event","errors","kode_kategori","kadar","rugi","rusak","FormParameterRugiNota","Component","[object Object]","args","super","this","state","aktif","componentDidMount","props","dispatch","GetDataGroup","setTimeout","isEdit","document","getElementById","focus","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","Field","id","label","name","options","datagroup","filter","list","undefined","kode_group","map","nama_group","disabled","placeholder","component","ReanderSelect","ReanderField","type","onBlur","setState","isLoading","Fragment","onClick","hideModal","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalParameterRugiNota","initialValues","SearchBar","Search","ExportCSVButton","CSVExport","dataRugiNota","getParameterRugiNota","modalDialog","React","constructor","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditParameterRugiNota","bind","data","data_post","data_edit","putData","then","ToastNotification","reset","catch","error","postData","ErrorHandling","showModal","react_router_dom","to","panel","react_bootstrap_table2_toolkit_lib_default","keyField","search","exportCSV","fileName","searchProps","lib_default","Object","assign","pagination","paginationFactory","baseProps","csvProps","ModalGlobal","title","size","content","ParameterRugiNota_FormParameterRugiNota"],"mappings":"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","file":"static/js/39.042bf1ed.chunk.js","sourcesContent":["const ValidasiParameterRugiNota = (value, event) => {\r\n  const errors = {};\r\n  // console.log(event.charCode==13);\r\n  if (!value.kode_kategori) {\r\n    errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.kadar) {\r\n    errors.kadar = \"Kadar Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.rugi) {\r\n    errors.rugi = \"Rugi Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.rusak) {\r\n    errors.rusak = \"Rusak Tidak Boleh Kosong\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default ValidasiParameterRugiNota;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { GetDataGroup, hideModal } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport ValidasiParameterRugiNota from \"../../../Validasi/ValidasiParameterRugiNota.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalParameterRugiNota !== null) {\r\n    return {\r\n      datagroup: state.datamaster.GetDataGroup,\r\n      initialValues: {\r\n        kode_group: state.datamaster.ShowModalParameterRugiNota.kode_group,\r\n        kadar: state.datamaster.ShowModalParameterRugiNota.kadar,\r\n        rugi: state.datamaster.ShowModalParameterRugiNota.rugi,\r\n        rusak: state.datamaster.ShowModalParameterRugiNota.rusak,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nclass FormParameterRugiNota extends Component {\r\n  state = {\r\n    aktif : false\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(GetDataGroup());\r\n    // setTimeout(() => {\r\n    //   document.getElementById('kode_group').focus()\r\n    // }, 100);\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n        ? document.getElementById(\"kadar\").focus()\r\n        : document.getElementById(\"kode_group\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <Field\r\n            id=\"kode_group\"\r\n            label=\"Kode Kategori\"\r\n            name=\"kode_group\"\r\n            options={this.props.datagroup\r\n              .filter((list) => list.kode_group !== undefined)\r\n              .map((list) => {\r\n                let data = {\r\n                  value: list.kode_group,\r\n                  name: list.kode_group + \" - \" + list.nama_group,\r\n                };\r\n                return data;\r\n              })}\r\n            value={this.props.kode_group}\r\n            disabled={this.props.isEdit}\r\n            placeholder={\"Silahkan Pilih Kode Kategori\"}\r\n            component={ReanderSelect}\r\n          />\r\n        </div>\r\n        <Field\r\n          id=\"kadar\"\r\n          name=\"kadar\"\r\n          component={ReanderField}\r\n          type=\"number\"\r\n          label=\"Kadar\"\r\n          // normalize={NumberOnly}\r\n          placeholder=\"Masukan Kadar\"\r\n        />\r\n        <Field\r\n          name=\"rugi\"\r\n          component={ReanderField}\r\n          type=\"number\"\r\n          label=\"Rugi\"\r\n          // normalize={NumberOnly}\r\n          placeholder=\"Masukan Rugi\"\r\n        />\r\n        <Field\r\n          name=\"rusak\"\r\n          component={ReanderField}\r\n          type=\"number\"\r\n          // normalize={NumberOnly}\r\n          label=\"Rusak\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Rusak\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n          <button\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            \r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormParameterRugiNota = reduxForm({\r\n  form: \"ModalParameterRugiNota\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiParameterRugiNota,\r\n})(FormParameterRugiNota);\r\nexport default connect(maptostate, null)(FormParameterRugiNota);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {\r\n  ShowModalParameterRugiNota,\r\n  showModal,\r\n  getParameterRugiNota,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport {  ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nimport FormParameterRugiNota from \"./FormParameterRugiNota.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport {  postData, putData } from \"../../../config/axios.jsx\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    dataRugiNota : state.datamaster.getParameterRugiNota,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass MasterParameterRugiNota extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      modalDialog: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Kategori\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"kadar\",\r\n        },\r\n        {\r\n          dataField: \"rugi\",\r\n          text: \"Rugi\",\r\n        },\r\n        {\r\n          dataField: \"rusak\",\r\n          text: \"Rusak\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              kode_group: row.kode_group,\r\n              kadar: row.kadar,\r\n              rugi: row.rugi,\r\n              rusak: row.rusak,\r\n            };\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditParameterRugiNota(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                     <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      \r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getParameterRugiNota())\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n    let data_post = {\r\n      kode_group: data.kode_group,\r\n      kadar : data.kadar,\r\n      rugi : data.rugi,\r\n      rusak : data.rusak\r\n    }\r\n    let data_edit = {\r\n      kadar : data.kadar,\r\n      rugi : data.rugi,\r\n      rusak : data.rusak\r\n    }\r\n    this.state.isEdit\r\n    ? putData(\"ruginota/edit/by-kode-group/\" + data.kode_group, data_edit)\r\n        .then(() => {\r\n          this.props.dispatch(hideModal());\r\n        })\r\n        .then(() => {\r\n          ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n        })\r\n        .then(() => {\r\n          this.props.dispatch(getParameterRugiNota());\r\n        })\r\n        .then(() => {\r\n          this.setState({ isLoading: false });\r\n        })\r\n        .then(() => {\r\n          this.props.dispatch(reset(\"ModalParameterRugiNota\"));\r\n        })\r\n        .catch((error) => {\r\n          ToastNotification('info', ' Data Gagal Diedit')\r\n        })\r\n    :\r\n    postData(\"ruginota/add\", data_post)\r\n      .then(() => {\r\n        this.props.dispatch(hideModal());\r\n      })\r\n      .then(() => {\r\n        ToastNotification(\"success\", \"Data Berhasil Simpan\");\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(getParameterRugiNota());\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(reset(\"ModalParameterRugiNota\"));\r\n      })\r\n      .catch((error) => {\r\n        ErrorHandling(\r\n          error,\r\n          \"jenis/reactive/by-kode-jenis/\",\r\n          data.kode_group,\r\n          data_post,\r\n          this.props.dispatch,\r\n          getParameterRugiNota(),\r\n          hideModal(),\r\n          \"ModalParameterRugiNota\"\r\n        ).then(() => {\r\n          this.setState({ isLoading: false });\r\n        });\r\n      });\r\n  }\r\n  formEditParameterRugiNota(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalParameterRugiNota(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalParameterRugiNota() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalParameterRugiNota(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Parameter Rugi Nota</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Parameter Rugi Nota </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Parameter Rugi Nota</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Parameter Rugi Nota */}\r\n          <div className=\"container\">\r\n            <ToolkitProvider\r\n              keyField=\"kode_group\"\r\n              data={this.props.dataRugiNota || []}\r\n              columns={this.state.columns}\r\n              search\r\n              exportCSV={{\r\n                fileName: \"Export Master Parameter Rugi Nota.csv\",\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <button\r\n                      onClick={() => this.ShowModalParameterRugiNota()}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fa fa-plus\"></i>{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"text-right\">\r\n                      <SearchBar {...props.searchProps} />\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"col-12\">\r\n                    <BootstrapTable\r\n                      pagination={paginationFactory()}\r\n                      {...props.baseProps}\r\n                    />\r\n                    <br />\r\n                    <ExportCSVButton {...props.csvProps}>\r\n                      Export CSV!!\r\n                    </ExportCSVButton>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ToolkitProvider>\r\n          </div>\r\n          <br />\r\n          {/* End Master Pinjaman */}\r\n          <ModalGlobal\r\n             title={\r\n              this.state.isEdit\r\n                ? \"Edit Data Parameter Rugi Nota\"\r\n                : \"Tambah Data Parameter Rugi Nota\"\r\n            }\r\n            size=\"P\"\r\n            content={\r\n              <FormParameterRugiNota\r\n              isEdit={this.state.isEdit}\r\n              isLoading={this.state.isLoading}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          }\r\n          />\r\n\r\n          {/* End Tambah Master Parameter Rugi Nota  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterParameterRugiNota);\r\n"],"sourceRoot":""}